select ' Started BUDGET_PERIODS ' from dual
/
DECLARE
li_count NUMBER;

CURSOR c_period IS
SELECT bm.PROPOSAL_NUMBER,bm.VERSION_NUMBER,t3.BUDGET_ID,bm.BUDGET_PERIOD,bm.START_DATE,bm.END_DATE,bm.TOTAL_COST,bm.TOTAL_DIRECT_COST,
bm.TOTAL_INDIRECT_COST,bm.COST_SHARING_AMOUNT,bm.UNDERRECOVERY_AMOUNT,bm.TOTAL_COST_LIMIT,bm.COMMENTS,bm.UPDATE_TIMESTAMP,
bm.UPDATE_USER,bm.TOTAL_DIRECT_COST_LIMIT
FROM OSP$BUDGET_PERIODS@coeus.kuali bm
INNER JOIN TEMP_TAB_TO_SYNC_BUDGET t2 on bm.PROPOSAL_NUMBER = t2.PROPOSAL_NUMBER and bm.VERSION_NUMBER = t2.VERSION_NUMBER
INNER JOIN TEMP_BUDGET_MAIN t3 on bm.PROPOSAL_NUMBER=t3.PROPOSAL_NUM and bm.VERSION_NUMBER=t3.BUDGET_VER_NUM
ORDER BY bm.PROPOSAL_NUMBER,bm.VERSION_NUMBER,bm.BUDGET_PERIOD;
r_period c_period%ROWTYPE;

BEGIN

IF c_period%ISOPEN THEN
CLOSE c_period;
END IF;
OPEN c_period;
LOOP
FETCH c_period INTO r_period;
EXIT WHEN c_period%NOTFOUND;

select count(*) into li_count from BUDGET_PERIODS where BUDGET_ID=r_period.BUDGET_ID and BUDGET_PERIOD=r_period.BUDGET_PERIOD;

  IF li_count=0 THEN
       
     INSERT INTO BUDGET_PERIODS( BUDGET_PERIOD_NUMBER,BUDGET_ID,BUDGET_PERIOD,START_DATE,END_DATE,TOTAL_COST,TOTAL_DIRECT_COST,TOTAL_INDIRECT_COST,COST_SHARING_AMOUNT,UNDERRECOVERY_AMOUNT,TOTAL_COST_LIMIT,COMMENTS,UPDATE_TIMESTAMP,UPDATE_USER,VER_NBR,OBJ_ID,TOTAL_DIRECT_COST_LIMIT,NUM_PARTICIPANTS)
     VALUES(SEQ_BUDGET_PERIOD_NUMBER.NEXTVAL,r_period.BUDGET_ID,r_period.BUDGET_PERIOD,r_period.START_DATE,r_period.END_DATE,r_period.TOTAL_COST,r_period.TOTAL_DIRECT_COST,r_period.TOTAL_INDIRECT_COST,r_period.COST_SHARING_AMOUNT,r_period.UNDERRECOVERY_AMOUNT,r_period.TOTAL_COST_LIMIT,r_period.COMMENTS,r_period.UPDATE_TIMESTAMP,r_period.UPDATE_USER,1,SYS_GUID(),r_period.TOTAL_DIRECT_COST_LIMIT,NULL);
    
  ELSE
  
	UPDATE BUDGET_PERIODS SET   
    START_DATE = r_period.START_DATE,
	END_DATE = r_period.END_DATE,
	TOTAL_COST = r_period.TOTAL_COST,
	TOTAL_DIRECT_COST = r_period.TOTAL_DIRECT_COST,
	TOTAL_INDIRECT_COST = r_period.TOTAL_INDIRECT_COST,
	COST_SHARING_AMOUNT = r_period.COST_SHARING_AMOUNT,
	UNDERRECOVERY_AMOUNT = r_period.UNDERRECOVERY_AMOUNT,
	TOTAL_COST_LIMIT = r_period.TOTAL_COST_LIMIT,
	COMMENTS = r_period.COMMENTS,
	UPDATE_TIMESTAMP = r_period.UPDATE_TIMESTAMP,
	UPDATE_USER = r_period.UPDATE_USER,
	TOTAL_DIRECT_COST_LIMIT = r_period.TOTAL_DIRECT_COST_LIMIT
	WHERE BUDGET_ID=r_period.BUDGET_ID AND  BUDGET_PERIOD=r_period.BUDGET_PERIOD; 
 
  END IF;
  
END LOOP;
CLOSE c_period;
END;
/
select ' Ended BUDGET_PERIODS ' from dual
/