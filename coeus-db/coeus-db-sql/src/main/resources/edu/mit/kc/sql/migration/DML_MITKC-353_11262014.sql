CREATE INDEX REPORT_I ON award_report_terms(REPORT_CLASS_CODE)
/
CREATE INDEX AWARD_REP_TERM_I2 ON award_report_terms(AWARD_REPORT_TERMS_ID, REPORT_CLASS_CODE)
/
ALTER TABLE award_rep_terms_recnt DISABLE CONSTRAINT FK1_AWARD_REP_TERMS_RECNT;
ALTER TABLE award_report_terms DISABLE CONSTRAINT AWARD_REPORT_TERMSP1;
ALTER TABLE award_report_terms DISABLE CONSTRAINT FK10_AWARD_REPORT_TERMS;
ALTER TABLE award_report_terms DISABLE CONSTRAINT FK11_AWARD_REPORT_TERMS;
ALTER TABLE award_report_terms DISABLE CONSTRAINT FK3_AWARD_REPORT_TERMS;
ALTER TABLE award_report_terms DISABLE CONSTRAINT FK8_AWARD_REPORT_TERMS;
ALTER TABLE award_report_terms DISABLE CONSTRAINT FK9_AWARD_REPORT_TERMS;
ALTER TABLE award_report_terms DISABLE CONSTRAINT FK_AWARD_REPORT_TERMS;
DELETE  from  award_rep_terms_recnt
where award_report_terms_id in (select award_report_terms_id  from  award_report_terms where report_class_code= '6');
commit;
DELETE  from  award_report_terms where report_class_code= '6';
commit;
ALTER TABLE award_report_terms ENABLE CONSTRAINT AWARD_REPORT_TERMSP1;
ALTER TABLE award_rep_terms_recnt ENABLE CONSTRAINT FK1_AWARD_REP_TERMS_RECNT;
ALTER TABLE award_report_terms ENABLE CONSTRAINT FK10_AWARD_REPORT_TERMS;
ALTER TABLE award_report_terms ENABLE CONSTRAINT FK11_AWARD_REPORT_TERMS;
ALTER TABLE award_report_terms ENABLE CONSTRAINT FK3_AWARD_REPORT_TERMS;
ALTER TABLE award_report_terms ENABLE CONSTRAINT FK8_AWARD_REPORT_TERMS;
ALTER TABLE award_report_terms ENABLE CONSTRAINT FK9_AWARD_REPORT_TERMS;
ALTER TABLE award_report_terms ENABLE CONSTRAINT FK_AWARD_REPORT_TERMS
/
DROP INDEX REPORT_I
/
DECLARE
ls_report_code VARCHAR2(3);
li_award_id NUMBER(12,0);
ls_award_number VARCHAR2(16);
li_award_report_terms_id NUMBER(12,0);
li_rolodex_id NUMBER(12,0):=100046;
ls_contact VARCHAR2(3);
ls_FREQUENCY_BASE_CODE FREQUENCY_BASE.FREQUENCY_BASE_CODE%type;

CURSOR c_invoice IS
SELECT MIT_AWARD_NUMBER,SEQUENCE_NUMBER,PAYMENT_INVOICE_FREQ_CODE,INVOICE_NUMBER_OF_COPIES,FINAL_INVOICE_DUE FROM OSP$AWARD_HEADER
WHERE PAYMENT_INVOICE_FREQ_CODE IS NOT NULL;
r_invoice c_invoice%ROWTYPE;

BEGIN
SELECT REPORT_CODE INTO ls_report_code FROM REPORT WHERE DESCRIPTION='Payment/Invoice Frequency';

--select FREQUENCY_BASE_CODE into ls_FREQUENCY_BASE_CODE from FREQUENCY_BASE where DESCRIPTION='As Required'

IF c_invoice%ISOPEN THEN
CLOSE c_invoice;
END IF;
OPEN c_invoice;
LOOP
FETCH c_invoice INTO r_invoice;
EXIT WHEN c_invoice%NOTFOUND;


  
  SELECT SEQUENCE_AWARD_ID.NEXTVAL INTO li_award_report_terms_id FROM DUAL;
  ls_award_number:=replace(r_invoice.MIT_AWARD_NUMBER,'-','-00');
  BEGIN
  SELECT AWARD_ID INTO li_award_id FROM AWARD WHERE AWARD_NUMBER=ls_award_number AND SEQUENCE_NUMBER=r_invoice.SEQUENCE_NUMBER;
  EXCEPTION
  WHEN OTHERS THEN
    BEGIN
	  SELECT CHANGE_AWARD_NUMBER into ls_award_number FROM KC_MIG_AWARD_CONV WHERE AWARD_NUMBER=ls_award_number;
	  SELECT AWARD_ID INTO li_award_id FROM AWARD WHERE AWARD_NUMBER=ls_award_number AND SEQUENCE_NUMBER=r_invoice.SEQUENCE_NUMBER;
	EXCEPTION
	WHEN OTHERS THEN
	  dbms_output.put_line(ls_award_number||' '||r_invoice.SEQUENCE_NUMBER);
	  CONTINUE;
	END;  
  
  END;


 INSERT INTO AWARD_REPORT_TERMS(AWARD_REPORT_TERMS_ID,AWARD_ID,AWARD_NUMBER,SEQUENCE_NUMBER,REPORT_CLASS_CODE,REPORT_CODE,FREQUENCY_CODE,FREQUENCY_BASE_CODE,OSP_DISTRIBUTION_CODE,DUE_DATE,VER_NBR,UPDATE_TIMESTAMP,UPDATE_USER,OBJ_ID)
 VALUES(li_award_report_terms_id,li_award_id,ls_award_number,r_invoice.SEQUENCE_NUMBER,'6',ls_report_code,r_invoice.PAYMENT_INVOICE_FREQ_CODE,NULL,NULL,NULL,1,SYSDATE,'admin',SYS_GUID());
 
 SELECT CONTACT_TYPE_CODE INTO  ls_contact FROM CONTACT_TYPE WHERE DESCRIPTION='Payment Invoice Contact';
 
 
  IF  r_invoice.INVOICE_NUMBER_OF_COPIES IS NOT NULL THEN
  
    INSERT INTO AWARD_REP_TERMS_RECNT(AWARD_REP_TERMS_RECNT_ID,CONTACT_ID,AWARD_REPORT_TERMS_ID,CONTACT_TYPE_CODE,ROLODEX_ID,NUMBER_OF_COPIES,VER_NBR,UPDATE_TIMESTAMP,UPDATE_USER,OBJ_ID)
	VALUES(SEQ_AWARD_REP_TERMS_RECNT_ID.NEXTVAL,NULL,li_award_report_terms_id,ls_contact,li_rolodex_id,r_invoice.INVOICE_NUMBER_OF_COPIES,1,SYSDATE,'admin',SYS_GUID());
   
  END IF;
  
END LOOP;
CLOSE c_invoice;
END;
/
DECLARE
ls_report_code_1 VARCHAR2(3);
li_award_id NUMBER(12,0);
ls_award_number VARCHAR2(16);
li_award_report_terms_id NUMBER(12,0);
li_rolodex_id NUMBER(12,0):=100046;
ll_date DATE;
ls_contact VARCHAR2(3);
li_due number;

CURSOR c_invoice IS
SELECT MIT_AWARD_NUMBER,SEQUENCE_NUMBER,PAYMENT_INVOICE_FREQ_CODE,INVOICE_NUMBER_OF_COPIES,FINAL_INVOICE_DUE FROM OSP$AWARD_HEADER
WHERE FINAL_INVOICE_DUE IS NOT NULL;
r_invoice c_invoice%ROWTYPE;

BEGIN
SELECT REPORT_CODE INTO ls_report_code_1  FROM REPORT WHERE DESCRIPTION='Final Invoice Due';

IF c_invoice%ISOPEN THEN
CLOSE c_invoice;
END IF;
OPEN c_invoice;
LOOP
FETCH c_invoice INTO r_invoice;
EXIT WHEN c_invoice%NOTFOUND;

begin
li_due:=to_number(r_invoice.FINAL_INVOICE_DUE);
exception
when others then
li_due:=0;
end;
   
  IF r_invoice.INVOICE_NUMBER_OF_COPIES IS NOT NULL OR r_invoice.FINAL_INVOICE_DUE IS NOT NULL THEN
   
     
  
  SELECT SEQUENCE_AWARD_ID.NEXTVAL INTO li_award_report_terms_id FROM DUAL;
  BEGIN
  SELECT to_date(FINAL_EXPIRATION_DATE) INTO ll_date FROM OSP$AWARD_AMOUNT_INFO WHERE MIT_AWARD_NUMBER=r_invoice.MIT_AWARD_NUMBER AND SEQUENCE_NUMBER=r_invoice.SEQUENCE_NUMBER
  AND AMOUNT_SEQUENCE_NUMBER=(SELECT MAX(AMOUNT_SEQUENCE_NUMBER) FROM OSP$AWARD_AMOUNT_INFO WHERE MIT_AWARD_NUMBER=r_invoice.MIT_AWARD_NUMBER AND SEQUENCE_NUMBER=r_invoice.SEQUENCE_NUMBER);
  EXCEPTION
  WHEN OTHERS THEN
  ll_date:=NULL;
  END;
  
  if ll_date is not null then
  
   ll_date := ll_date + li_due;
   
  end if; 
  
  ls_award_number:=replace(r_invoice.MIT_AWARD_NUMBER,'-','-00');
  BEGIN
  SELECT AWARD_ID INTO li_award_id FROM AWARD WHERE AWARD_NUMBER=ls_award_number AND SEQUENCE_NUMBER=r_invoice.SEQUENCE_NUMBER;
  EXCEPTION
  WHEN OTHERS THEN  
	  BEGIN
	  SELECT CHANGE_AWARD_NUMBER into ls_award_number FROM KC_MIG_AWARD_CONV WHERE AWARD_NUMBER=ls_award_number;
	  SELECT AWARD_ID INTO li_award_id FROM AWARD WHERE AWARD_NUMBER=ls_award_number AND SEQUENCE_NUMBER=r_invoice.SEQUENCE_NUMBER;
	  EXCEPTION
	  WHEN OTHERS THEN
	  dbms_output.put_line(ls_award_number||' '||r_invoice.SEQUENCE_NUMBER);
	  CONTINUE;
	  END;
  END;
SELECT CONTACT_TYPE_CODE INTO  ls_contact FROM CONTACT_TYPE WHERE DESCRIPTION='Payment Invoice Contact';
BEGIN
 INSERT INTO AWARD_REPORT_TERMS(AWARD_REPORT_TERMS_ID,AWARD_ID,AWARD_NUMBER,SEQUENCE_NUMBER,REPORT_CLASS_CODE,REPORT_CODE,FREQUENCY_CODE,FREQUENCY_BASE_CODE,OSP_DISTRIBUTION_CODE,DUE_DATE,VER_NBR,UPDATE_TIMESTAMP,UPDATE_USER,OBJ_ID)
 VALUES(li_award_report_terms_id,li_award_id,ls_award_number,r_invoice.SEQUENCE_NUMBER,'6',ls_report_code_1,14,6,NULL,ll_date,1,SYSDATE,'admin',SYS_GUID());
 
 INSERT INTO AWARD_REP_TERMS_RECNT(AWARD_REP_TERMS_RECNT_ID,CONTACT_ID,AWARD_REPORT_TERMS_ID,CONTACT_TYPE_CODE,ROLODEX_ID,NUMBER_OF_COPIES,VER_NBR,UPDATE_TIMESTAMP,UPDATE_USER,OBJ_ID)
 VALUES(SEQ_AWARD_REP_TERMS_RECNT_ID.NEXTVAL,NULL,li_award_report_terms_id,ls_contact,li_rolodex_id,r_invoice.INVOICE_NUMBER_OF_COPIES,1,SYSDATE,'admin',SYS_GUID());
EXCEPTION
WHEN OTHERS THEN
dbms_output.put_line('DUE_DATE:'||ll_date||'MIT_AWARD_NUMBER:'||r_invoice.MIT_AWARD_NUMBER||'SEQUENCE_NUMBER:'||r_invoice.SEQUENCE_NUMBER);
END;
END IF;  
END LOOP;
CLOSE c_invoice;
END;
/
