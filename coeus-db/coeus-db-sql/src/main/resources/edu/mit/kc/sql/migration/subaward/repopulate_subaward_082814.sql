ALTER TABLE	SUBAWARD	NOLOGGING ;
ALTER TABLE	SUBAWARD_AMOUNT_INFO NOLOGGING;	
ALTER TABLE SUBAWARD_ATTACHMENTS NOLOGGING ;
ALTER TABLE	SUBAWARD_AMT_RELEASED	NOLOGGING ;
ALTER TABLE	SUBAWARD_APPROVAL_TYPE	NOLOGGING ;
ALTER TABLE	SUBAWARD_CLOSEOUT	NOLOGGING ;
ALTER TABLE	SUBAWARD_CONTACT	NOLOGGING ;
ALTER TABLE	SUBAWARD_CUSTOM_DATA	NOLOGGING ;
ALTER TABLE	SUBAWARD_DOCUMENT	NOLOGGING ;
ALTER TABLE	SUBAWARD_FUNDING_SOURCE	NOLOGGING ;
ALTER TABLE	SUBAWARD_STATUS	NOLOGGING ;
ALTER TABLE	KREW_DOC_HDR_CNTNT_T	NOLOGGING  ;
ALTER TABLE	KREW_DOC_HDR_T	NOLOGGING  ;
ALTER TABLE	KRNS_DOC_HDR_T	NOLOGGING  ;	
-- temp table create

declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='TEMP_SUBAWARD_AMT_INFO';
if li_count>0 then
execute immediate('drop table TEMP_SUBAWARD_AMT_INFO');
end if; 

select count(*) into li_count from user_tables where table_name='TEMP_SUBAWARD_AMT_RELEASE';
if li_count>0 then
execute immediate('drop table TEMP_SUBAWARD_AMT_RELEASE');
end if;  
end;
/
CREATE TABLE "TEMP_SUBAWARD_AMT_INFO" 
(	"SUBCONTRACT_CODE" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
"SEQUENCE_NUMBER" NUMBER(4,0) NOT NULL ENABLE, 
"LINE_NUMBER" NUMBER(4,0) NOT NULL ENABLE, 
"OBLIGATED_AMOUNT" NUMBER(12,2), 
"OBLIGATED_CHANGE" NUMBER(12,2), 
"ANTICIPATED_AMOUNT" NUMBER(12,2), 
"ANTICIPATED_CHANGE" NUMBER(12,2), 
"EFFECTIVE_DATE" DATE, 
"COMMENTS" VARCHAR2(300 BYTE), 
"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE, 
"FILE_NAME" VARCHAR2(150 BYTE), 
"DOCUMENT" BLOB, 
"MIME_TYPE" VARCHAR2(100 BYTE), 
"PERFORMANCE_START_DATE" DATE, 
"PERFORMANCE_END_DATE" DATE, 
"MODIFICATION_NUMBER" VARCHAR2(50 BYTE), 
"MODIFICATION_EFFECTIVE_DATE" DATE);
insert into TEMP_SUBAWARD_AMT_INFO(SUBCONTRACT_CODE,LINE_NUMBER,SEQUENCE_NUMBER,OBLIGATED_AMOUNT,OBLIGATED_CHANGE,ANTICIPATED_AMOUNT,ANTICIPATED_CHANGE,EFFECTIVE_DATE,COMMENTS,UPDATE_TIMESTAMP,UPDATE_USER,FILE_NAME,DOCUMENT,MIME_TYPE,PERFORMANCE_START_DATE,PERFORMANCE_END_DATE,MODIFICATION_NUMBER,MODIFICATION_EFFECTIVE_DATE)
SELECT SUBCONTRACT_CODE,LINE_NUMBER,SEQUENCE_NUMBER,OBLIGATED_AMOUNT,OBLIGATED_CHANGE,ANTICIPATED_AMOUNT,ANTICIPATED_CHANGE,EFFECTIVE_DATE,COMMENTS,UPDATE_TIMESTAMP,UPDATE_USER,FILE_NAME,DOCUMENT,MIME_TYPE,PERFORMANCE_START_DATE,PERFORMANCE_END_DATE,MODIFICATION_NUMBER,MODIFICATION_EFFECTIVE_DATE FROM OSP$SUBCONTRACT_AMOUNT_INFO@Coeus.Kuali;
commit
/
CREATE TABLE "TEMP_SUBAWARD_AMT_RELEASE" 
(	"SUBCONTRACT_CODE" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
"SEQUENCE_NUMBER" NUMBER(4,0) NOT NULL ENABLE, 
"LINE_NUMBER" NUMBER(4,0) NOT NULL ENABLE, 
"AMOUNT_RELEASED" NUMBER(12,2) NOT NULL ENABLE, 
"EFFECTIVE_DATE" DATE NOT NULL ENABLE, 
"COMMENTS" VARCHAR2(300 BYTE), 
"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE, 
"INVOICE_NUMBER" VARCHAR2(50 BYTE), 
"START_DATE" DATE, 
"END_DATE" DATE, 
"STATUS_CODE" VARCHAR2(1 BYTE), 
"APPROVAL_COMMENTS" VARCHAR2(2000 BYTE), 
"APPROVED_BY_USER" VARCHAR2(8 BYTE), 
"APPROVAL_DATE" DATE, 
"DOCUMENT" BLOB, 
"FILE_NAME" VARCHAR2(150 BYTE), 
"CREATED_BY" VARCHAR2(8 BYTE), 
"CREATED_DATE" DATE, 
"MIME_TYPE" VARCHAR2(100 BYTE));
commit;
insert into TEMP_SUBAWARD_AMT_RELEASE(SUBCONTRACT_CODE,LINE_NUMBER,SEQUENCE_NUMBER,AMOUNT_RELEASED,EFFECTIVE_DATE,COMMENTS,UPDATE_TIMESTAMP,UPDATE_USER,INVOICE_NUMBER,START_DATE,END_DATE,STATUS_CODE,APPROVAL_COMMENTS,APPROVED_BY_USER,APPROVAL_DATE,DOCUMENT,FILE_NAME,CREATED_BY,CREATED_DATE,MIME_TYPE)
SELECT SUBCONTRACT_CODE,LINE_NUMBER,SEQUENCE_NUMBER,AMOUNT_RELEASED,EFFECTIVE_DATE,COMMENTS,UPDATE_TIMESTAMP,UPDATE_USER,INVOICE_NUMBER,START_DATE,END_DATE,STATUS_CODE,APPROVAL_COMMENTS,APPROVED_BY_USER,APPROVAL_DATE,DOCUMENT,FILE_NAME,CREATED_BY,CREATED_DATE,MIME_TYPE FROM OSP$SUBCONTRACT_AMT_RELEASED@Coeus.Kuali;
commit;
-- Subaward lookup
TRUNCATE TABLE SUBCONTRACT_COPYRIGHT_TYPE
/
INSERT INTO SUBCONTRACT_COPYRIGHT_TYPE(COPYRIGHT_TYPE_CODE,DESCRIPTION,UPDATE_TIMESTAMP,UPDATE_USER,VER_NBR,OBJ_ID)
SELECT COPYRIGHT_TYPE_CODE,DESCRIPTION,UPDATE_TIMESTAMP,UPDATE_USER,1,SYS_GUID() FROM OSP$SUBCONTRACT_COPYRIGHT_TYPE@coeus.kuali
/
TRUNCATE TABLE SUBCONTRACT_COST_TYPE
/
INSERT INTO SUBCONTRACT_COST_TYPE(COST_TYPE_CODE,DESCRIPTION,UPDATE_TIMESTAMP,UPDATE_USER,VER_NBR,OBJ_ID)
SELECT COST_TYPE_CODE,DESCRIPTION,UPDATE_TIMESTAMP,UPDATE_USER,1,SYS_GUID() FROM OSP$SUBCONTRACT_COST_TYPE@coeus.kuali
/
TRUNCATE TABLE SUBAWARD_STATUS
/
INSERT INTO SUBAWARD_STATUS(SUBAWARD_STATUS_CODE,DESCRIPTION,UPDATE_TIMESTAMP,UPDATE_USER,VER_NBR,OBJ_ID)
SELECT SUBCONTRACT_STATUS_CODE,DESCRIPTION,UPDATE_TIMESTAMP,UPDATE_USER,1,SYS_GUID() FROM OSP$SUBCONTRACT_STATUS@Coeus.Kuali
/
TRUNCATE TABLE SUBAWARD_APPROVAL_TYPE
/
INSERT INTO SUBAWARD_APPROVAL_TYPE(SUBAWARD_APPROVAL_TYPE_CODE,DESCRIPTION,UPDATE_TIMESTAMP,UPDATE_USER,VER_NBR,OBJ_ID)
SELECT SUBCONTRACT_APPROVAL_CODE,DESCRIPTION,UPDATE_TIMESTAMP,UPDATE_USER,1,SYS_GUID() FROM OSP$SUBCONTRACT_APPROVAL@coeus.kuali
/
commit
/
truncate table SUBAWARD_ATTACHMENT_TYPE
/
-- data from COEUS
INSERT INTO SUBAWARD_ATTACHMENT_TYPE(
ATTACHMENT_TYPE_CODE,
DESCRIPTION,
UPDATE_TIMESTAMP,
UPDATE_USER,
VER_NBR,
OBJ_ID
)
SELECT
ATTACHMENT_TYPE_CODE,
DESCRIPTION,
UPDATE_TIMESTAMP,
UPDATE_USER,
1, 
sys_guid()
FROM osp$subcontract_attach_type@coeus.kuali
/
commit
/
--  data from KC
INSERT INTO SUBAWARD_ATTACHMENT_TYPE (ATTACHMENT_TYPE_CODE,DESCRIPTION,UPDATE_TIMESTAMP,UPDATE_USER,VER_NBR,OBJ_ID)
VALUES ((select max(ATTACHMENT_TYPE_CODE) + 1 from SUBAWARD_ATTACHMENT_TYPE),'Scope of Work',SYSDATE,'admin',1,SYS_GUID())
/
commit
/
INSERT INTO SUBAWARD_ATTACHMENT_TYPE (ATTACHMENT_TYPE_CODE,DESCRIPTION,UPDATE_TIMESTAMP,UPDATE_USER,VER_NBR,OBJ_ID)
VALUES ((select max(ATTACHMENT_TYPE_CODE) + 1 from SUBAWARD_ATTACHMENT_TYPE),'Budget',SYSDATE,'admin',1,SYS_GUID())
/
commit
/
INSERT INTO SUBAWARD_ATTACHMENT_TYPE (ATTACHMENT_TYPE_CODE,DESCRIPTION,UPDATE_TIMESTAMP,UPDATE_USER,VER_NBR,OBJ_ID)
VALUES ((select max(ATTACHMENT_TYPE_CODE) + 1 from SUBAWARD_ATTACHMENT_TYPE),'Transmittal Letter',SYSDATE,'admin',1,SYS_GUID())
/
commit
/
INSERT INTO SUBAWARD_ATTACHMENT_TYPE (ATTACHMENT_TYPE_CODE,DESCRIPTION,UPDATE_TIMESTAMP,UPDATE_USER,VER_NBR,OBJ_ID)
VALUES ((select max(ATTACHMENT_TYPE_CODE) + 1 from SUBAWARD_ATTACHMENT_TYPE),'Subaward',SYSDATE,'admin',1,SYS_GUID())
/
commit
/
INSERT INTO SUBAWARD_ATTACHMENT_TYPE (ATTACHMENT_TYPE_CODE,DESCRIPTION,UPDATE_TIMESTAMP,UPDATE_USER,VER_NBR,OBJ_ID)
VALUES ((select max(ATTACHMENT_TYPE_CODE) + 1 from SUBAWARD_ATTACHMENT_TYPE),'Attachment 4A',SYSDATE,'admin',1,SYS_GUID())
/
commit
/
INSERT INTO SUBAWARD_ATTACHMENT_TYPE (ATTACHMENT_TYPE_CODE,DESCRIPTION,UPDATE_TIMESTAMP,UPDATE_USER,VER_NBR,OBJ_ID)
VALUES ((select max(ATTACHMENT_TYPE_CODE) + 1 from SUBAWARD_ATTACHMENT_TYPE),'Attachment 5',SYSDATE,'admin',1,SYS_GUID())
/
commit
/
INSERT INTO SUBAWARD_ATTACHMENT_TYPE (ATTACHMENT_TYPE_CODE,DESCRIPTION,UPDATE_TIMESTAMP,UPDATE_USER,VER_NBR,OBJ_ID)
VALUES ((select max(ATTACHMENT_TYPE_CODE) + 1 from SUBAWARD_ATTACHMENT_TYPE),'Attachment 6',SYSDATE,'admin',1,SYS_GUID())
/
commit
/
-- delete/truncate/drop krew tables and other table
delete from ATTACHMENT_FILE where file_id in (select file_id from  SUBAWARD_AMOUNT_INFO)
/
truncate table SUBAWARD_AMOUNT_INFO
/
delete from CUSTOM_ATTRIBUTE_DOC_VALUE where DOCUMENT_NUMBER in (select t.DOCUMENT_NUMBER from  SUBAWARD t )
/
commit
/
delete from KREW_ACTN_TKN_T where DOC_HDR_ID in (select k.DOC_HDR_ID from KREW_DOC_HDR_T k inner join TEMP_KREW t on k.DOC_HDR_ID=t.DOCUMENT_NUMBER where k.TTL like 'SubAwardDocument%' AND t.MODULE='SAWD')
/
commit
/
delete from KREW_ACTN_RQST_T where DOC_HDR_ID in (select k.DOC_HDR_ID from KREW_DOC_HDR_T k inner join TEMP_KREW t on k.DOC_HDR_ID=t.DOCUMENT_NUMBER where k.TTL like 'SubAwardDocument%' AND t.MODULE='SAWD')
/
commit
/
delete from KREW_RTE_NODE_INSTN_T where DOC_HDR_ID in (select t.DOCUMENT_NUMBER from  TEMP_KREW t where  t.MODULE='SAWD')
/
commit
/
delete from KREW_INIT_RTE_NODE_INSTN_T where DOC_HDR_ID in (select t.DOCUMENT_NUMBER from  TEMP_KREW t where  t.MODULE='SAWD')
/
commit
/
delete from KREW_RTE_NODE_T where RTE_NODE_ID in (select t.RTE_NODE_ID from  TEMP_KREW t where  t.MODULE='SAWD')
/
commit
/
delete from KREW_RTE_BRCH_T where RTE_BRCH_ID in (select t.RTE_NODE_ID from  TEMP_KREW t where  t.MODULE='SAWD')
/
commit
/
delete from KREW_DOC_HDR_CNTNT_T where DOC_HDR_ID in (select t.DOCUMENT_NUMBER from  SUBAWARD t )
/
commit
/
delete from KREW_DOC_HDR_T where DOC_HDR_ID in (select t.DOCUMENT_NUMBER from  SUBAWARD t )
/
commit
/
delete from KRNS_DOC_HDR_T where DOC_HDR_ID in (select t.DOCUMENT_NUMBER from  SUBAWARD t )
/
commit
/
delete from VERSION_HISTORY where SEQ_OWNER_CLASS_NAME = 'org.kuali.kra.subaward.bo.SubAward'
/
commit
/
delete from TEMP_SEQ_LOG where MODULE = 'SAWD' 
/
commit
/
delete from TEMP_KREW where MODULE = 'SAWD' 
/
commit
/
drop table TEMP_SUBAWARD_ATTCH;
drop table TEMP_SUBAWD_CONT;	
drop table TEMP_SUBAWD_CUST;
drop table V_SUBAWARDCONT;	
drop table V_SUBAWARDCUST;
drop table V_SUBAWARDCLOSE;
drop table TEMP_SUBAWD_CLOSE;
drop table  V_SUBAWARDFUNDING;
drop table TEMP_SUBAWD_FUND;
truncate table SUBAWARD_AMT_RELEASED;
truncate table SUBAWARD_CLOSEOUT;	
truncate table SUB_EXP_CAT_BY_FY;
truncate table SUBCONTRACT_EXP_CAT_DET;
truncate table SUBCONTRACT_EXP_CAT;
truncate table SUBAWARD_FUNDING_SOURCE;
truncate table SUBAWARD_CONTACT;
truncate table SUBAWARD_CUSTOM_DATA;
TRUNCATE TABLE SUBAWARD_REPORT_TYPE;
TRUNCATE TABLE SUBAWARD_TEMPLATE_INFO;
TRUNCATE TABLE SUBAWARD_REPORTS;
alter table SUBAWARD_CLOSEOUT modify COMMENTS VARCHAR2(1000);
ALTER TABLE SUBAWARD_TEMPLATE_INFO DISABLE CONSTRAINT SUBAWARD_ID_FK ;
ALTER TABLE SUBAWARD_AMOUNT_INFO DISABLE CONSTRAINT FK_SUBAWARD_AMOUNT_INFO ;
ALTER TABLE SUBAWARD_AMT_RELEASED DISABLE CONSTRAINT FK_SUBAWARD_AMT_RELEASED ;
ALTER TABLE SUBAWARD_CLOSEOUT DISABLE CONSTRAINT FK_SUBAWARD_CLOSEOUT ;
ALTER TABLE SUBAWARD_CONTACT DISABLE CONSTRAINT FK_SUBAWARD_CONTACT ;
ALTER TABLE SUBAWARD_FUNDING_SOURCE DISABLE CONSTRAINT FK_SUBAWARD_FUNDING_SOURCE ;
truncate table SUBAWARD;
ALTER TABLE SUBAWARD_TEMPLATE_INFO ENABLE CONSTRAINT SUBAWARD_ID_FK ;
ALTER TABLE SUBAWARD_AMOUNT_INFO ENABLE CONSTRAINT FK_SUBAWARD_AMOUNT_INFO ;
ALTER TABLE SUBAWARD_AMT_RELEASED ENABLE CONSTRAINT FK_SUBAWARD_AMT_RELEASED ;
ALTER TABLE SUBAWARD_CLOSEOUT ENABLE CONSTRAINT FK_SUBAWARD_CLOSEOUT ;
ALTER TABLE SUBAWARD_CONTACT ENABLE CONSTRAINT FK_SUBAWARD_CONTACT ;
ALTER TABLE SUBAWARD_FUNDING_SOURCE ENABLE CONSTRAINT FK_SUBAWARD_FUNDING_SOURCE ;
truncate table SUBAWARD_DOCUMENT;	
-- Subaward master table
DECLARE
li_ver_nbr NUMBER(8):=1;
li_seq NUMBER(4);
ls_document_number VARCHAR2(40);
li_subawd NUMBER(12);
l_tmp LONG;
ls_comment CLOB;
ls_person VARCHAR2(15 BYTE);
li_changed_seq NUMBER(4,0);
ls_change_indicator VARCHAR2(2);
ls_krew_type varchar2(255):='SubAwardDocument';
li_doc_hdr_id NUMBER(14,0);
li_doc_typ_id NUMBER(19,0); 
ls_doc_hdr_stat_cd VARCHAR2(1):='S';
li_rte_lvl NUMBER(8,0):=0;
ll_stat_mdfn_dt DATE:=sysdate;
ll_crte_dt DATE:=sysdate;
ll_aprv_dt DATE:=sysdate;
ll_fnl_dt DATE:=null;
ll_rt_stat_mdfn_dt DATE:=sysdate;
ll_rte_lvl_mdfn_dt DATE:=null;
ls_title VARCHAR2(255);
ls_app_doc_id VARCHAR2(255):=null;
li_doc_ver_nbr 	NUMBER(8,0):=1;
ls_initr_prncpl_id VARCHAR2(40);
li_krew_ver_nbr NUMBER(8,0):=1;
ls_rte_prncpl_id VARCHAR2(40):=null;
ls_dtype VARCHAR2(50):=null;
ls_app_doc_stat VARCHAR2(64):=null;
ls_app_doc_stat_mdfn_dt DATE:=null;
ls_subaward_code VARCHAR2(20);
li_new_seq NUMBER(4,0):=0;
ls_test_number VARCHAR2(12):=null;
li_orig_seq NUMBER(4,0);
li_change_occured pls_integer;
li_loop number;
ls_error_page VARCHAR2(20);
ls_proposal_number VARCHAR2(12);
ls_protocol_number VARCHAR2(20);
ls_sub_award VARCHAR2(20);
li_krew_rnt_brch NUMBER(19,0);
li_krew_rnt_node NUMBER(19,0);
li_krew_rne_node_instn NUMBER(19,0);
li_check_false NUMBER;
li_change_count number;
li_previous_count PLS_INTEGER;
ls_award_number VARCHAR2(12);
li_funding_source_id NUMBER(12,0);
li_award_id NUMBER(22,0);
ls_award VARCHAR2(12);
li_closeout NUMBER(12,0);

CURSOR c_subawd IS
SELECT SUBCONTRACT_CODE,SEQUENCE_NUMBER,SUBCONTRACTOR_ID,COST_TYPE,DATE_OF_FULLY_EXCECUTED,REQUISITION_NUMBER,START_DATE,END_DATE,SUBAWARD_TYPE_CODE,PURCHASE_ORDER_NUM,TITLE,STATUS_CODE,ACCOUNT_NUMBER,VENDOR_NUMBER,REQUISITIONER_ID,REQUISITIONER_UNIT,ARCHIVE_LOCATION,CLOSEOUT_DATE,CLOSEOUT_INDICATOR,FUNDING_SOURCE_INDICATOR,COMMENTS,UPDATE_TIMESTAMP,UPDATE_USER    FROM OSP$SUBCONTRACT@Coeus.Kuali;
r_subawd c_subawd%ROWTYPE;

BEGIN
IF c_subawd%ISOPEN THEN
CLOSE c_subawd;
END IF;
OPEN c_subawd;
LOOP
FETCH c_subawd INTO r_subawd;
EXIT WHEN c_subawd%NOTFOUND;

begin    
l_tmp:=r_subawd.COMMENTS;
SELECT SUBSTRB( l_tmp, 1, 2000 )  INTO ls_comment FROM DUAL;
exception
when others then
ls_comment:=null;
end;   

ls_person:=r_subawd.REQUISITIONER_ID;


SELECT KREW_DOC_HDR_S.NEXTVAL INTO ls_document_number  FROM DUAL;


li_new_seq := r_subawd.SEQUENCE_NUMBER;
BEGIN
SELECT to_number(r_subawd.SUBCONTRACT_CODE) INTO ls_subaward_code FROM dual;
SELECT SUBAWARD_ID_S.NEXTVAL INTO li_subawd  FROM DUAL;
INSERT INTO SUBAWARD(SUBAWARD_ID,ORGANIZATION_ID,START_DATE,END_DATE,SUBAWARD_TYPE_CODE,PURCHASE_ORDER_NUM,TITLE,STATUS_CODE,ACCOUNT_NUMBER,VENDOR_NUMBER,REQUISITIONER_ID,REQUISITIONER_UNIT,ARCHIVE_LOCATION,CLOSEOUT_DATE,COMMENTS,UPDATE_TIMESTAMP,UPDATE_USER,SITE_INVESTIGATOR,COST_TYPE,DATE_OF_FULLY_EXECUTED,REQUISITION_NUMBER,VER_NBR,OBJ_ID,DOCUMENT_NUMBER,SEQUENCE_NUMBER,SUBAWARD_CODE)
VALUES(li_subawd,r_subawd.SUBCONTRACTOR_ID,r_subawd.START_DATE,r_subawd.END_DATE,r_subawd.SUBAWARD_TYPE_CODE,r_subawd.PURCHASE_ORDER_NUM,r_subawd.TITLE,r_subawd.STATUS_CODE,null,r_subawd.VENDOR_NUMBER,ls_person,r_subawd.REQUISITIONER_UNIT,r_subawd.ARCHIVE_LOCATION,r_subawd.CLOSEOUT_DATE,ls_comment,r_subawd.UPDATE_TIMESTAMP,r_subawd.UPDATE_USER,NULL,r_subawd.COST_TYPE,r_subawd.DATE_OF_FULLY_EXCECUTED,r_subawd.REQUISITION_NUMBER,li_ver_nbr,SYS_GUID(),ls_document_number,li_new_seq,ls_subaward_code);

ls_error_page:= 'SUBAWARD';


select KREW_RTE_NODE_S.NEXTVAL into li_krew_rnt_brch from dual ;
select KREW_RTE_NODE_S.NEXTVAL into li_krew_rnt_node from dual ;
select KREW_RTE_NODE_S.NEXTVAL into li_krew_rne_node_instn from dual ;

INSERT INTO TEMP_KREW(DOCUMENT_NUMBER,RTE_BRCH_ID,RTE_NODE_ID,RTE_NODE_INSTN_ID,MODULE)
VALUES(ls_document_number,li_krew_rnt_brch,li_krew_rnt_node,li_krew_rne_node_instn,'SAWD');

INSERT INTO TEMP_SEQ_LOG(MODULE,MODULE_ID,MODULE_ITEM_KEY,MIT_SEQUENCE_NUMBER,KUALI_SEQUENCE_NUMBER,CHANGED)
VALUES('SAWD',li_subawd,r_subawd.SUBCONTRACT_CODE,r_subawd.SEQUENCE_NUMBER,li_new_seq,'N');

li_loop:=li_loop+1;
EXCEPTION
WHEN OTHERS THEN
dbms_output.put_line('Missing data in '||ls_error_page||' SUBAWARD,SUBCONTRACT_CODE/SEQUENCE NUMBER - AWARD_ID:'||r_subawd.SUBCONTRACT_CODE||' / '||li_new_seq||'-'||li_subawd||sqlerrm);
END;
END LOOP;
CLOSE c_subawd;
dbms_output.put_line('loop count is :'||li_loop);

dbms_output.put_line('Completed SUBAWARD!!!');
END;
/
CREATE TABLE V_SUBAWARDCLOSE 
(KUALI_SUBAWD NUMBER, 
KUALI_SEQUENCE_NUMBER NUMBER(4,0), 
CHANGED CHAR(1 BYTE), 
MIT_SEQUENCE_NUMBER NUMBER(4,0), 
SEQUENCE_NUMBER NUMBER(4,0), 
SUBCONTRACT_CODE VARCHAR2(20 BYTE), 
SUBAWARD_ID NUMBER(12,0), 
CLOSEOUT_NUMBER NUMBER(3,0), 
CLOSEOUT_TYPE_CODE NUMBER(3,0), 
DATE_REQUESTED DATE, 
DATE_FOLLOWUP DATE, 
DATE_RECEIVED DATE, 
COMMENTS VARCHAR2(300 BYTE), 
UPDATE_TIMESTAMP DATE, 
UPDATE_USER VARCHAR2(8 BYTE));
INSERT INTO V_SUBAWARDCLOSE(KUALI_SUBAWD,KUALI_SEQUENCE_NUMBER,CHANGED,MIT_SEQUENCE_NUMBER,SEQUENCE_NUMBER,SUBCONTRACT_CODE,SUBAWARD_ID,CLOSEOUT_NUMBER,CLOSEOUT_TYPE_CODE,DATE_REQUESTED,DATE_FOLLOWUP,DATE_RECEIVED,COMMENTS,UPDATE_TIMESTAMP,UPDATE_USER)   
select  to_number(l.MODULE_ITEM_KEY) kuali_subawd,l.kuali_sequence_number,l.changed,a.sequence_number  Mit_sequence_number,a.sequence_number,a.SUBCONTRACT_CODE,aw.SUBAWARD_ID,a.CLOSEOUT_NUMBER,a.CLOSEOUT_TYPE_CODE,a.DATE_REQUESTED,a.DATE_FOLLOWUP,a.DATE_RECEIVED,a.COMMENTS,a.update_timestamp,a.update_user 
from TEMP_SEQ_LOG l
Left outer join OSP$SUBCONTRACT_CLOSEOUT@Coeus.Kuali a on l.module_item_key=a.SUBCONTRACT_CODE and l.mit_sequence_number=a.sequence_number inner join SUBAWARD aw on aw.SUBAWARD_CODE=to_number(l.MODULE_ITEM_KEY) and aw.SEQUENCE_NUMBER=l.KUALI_SEQUENCE_NUMBER where
l.MODULE='SAWD'
/
CREATE INDEX V_SUBAWARDCLOSE_I1 ON V_SUBAWARDCLOSE(kuali_subawd,KUALI_SEQUENCE_NUMBER)
/
commit
/
CREATE TABLE V_SUBAWARDFUNDING 
(KUALI_SUBAWD NUMBER, 
KUALI_SEQUENCE_NUMBER NUMBER(4,0), 
CHANGED CHAR(1 BYTE), 
MIT_SEQUENCE_NUMBER NUMBER(4,0), 
SEQUENCE_NUMBER NUMBER(4,0), 
SUBCONTRACT_CODE VARCHAR2(20 BYTE), 
SUBAWARD_ID NUMBER(12,0), 
MIT_AWARD_NUMBER CHAR(10 BYTE), 
UPDATE_TIMESTAMP DATE, 
UPDATE_USER VARCHAR2(8 BYTE));	
INSERT INTO V_SUBAWARDFUNDING(KUALI_SUBAWD,KUALI_SEQUENCE_NUMBER,CHANGED,MIT_SEQUENCE_NUMBER,SEQUENCE_NUMBER,SUBCONTRACT_CODE,SUBAWARD_ID,MIT_AWARD_NUMBER,UPDATE_TIMESTAMP,UPDATE_USER)    
select  to_number(l.MODULE_ITEM_KEY) kuali_subawd,l.kuali_sequence_number,l.changed,a.sequence_number  Mit_sequence_number,a.sequence_number,a.SUBCONTRACT_CODE,aw.SUBAWARD_ID,a.MIT_AWARD_NUMBER,a.update_timestamp,a.update_user 
from TEMP_SEQ_LOG l
Left outer join OSP$SUBCONTRACT_FUNDING_SOURCE@Coeus.Kuali a on l.module_item_key=a.SUBCONTRACT_CODE and l.mit_sequence_number=a.sequence_number inner join SUBAWARD aw on aw.SUBAWARD_CODE=to_number(l.MODULE_ITEM_KEY) and aw.SEQUENCE_NUMBER=l.KUALI_SEQUENCE_NUMBER where
l.MODULE='SAWD'
/
CREATE INDEX V_SUBAWARDFUNDING_I1 ON V_SUBAWARDFUNDING(kuali_subawd,KUALI_SEQUENCE_NUMBER)
/
commit
/
CREATE TABLE TEMP_SUBAWD_CLOSE 
(KUALI_SUBAWD NUMBER, 
KUALI_SEQUENCE_NUMBER NUMBER, 
SEQUENC NUMBER(4,0));
INSERT INTO TEMP_SUBAWD_CLOSE(KUALI_SUBAWD,KUALI_SEQUENCE_NUMBER,SEQUENC)   
select kuali_subawd,(
select max(aw.KUALI_SEQUENCE_NUMBER) from V_SUBAWARDCLOSE aw where aw.kuali_subawd=v.kuali_subawd
and aw.KUALI_SEQUENCE_NUMBER<=v.KUALI_SEQUENCE_NUMBER and aw.SUBCONTRACT_CODE is not null)  as kuali_sequence_number,v.KUALI_SEQUENCE_NUMBER SEQUENC  from V_SUBAWARDCLOSE v  where v.SUBCONTRACT_CODE is null
/
commit
/
CREATE INDEX temp_subawd_close_I1 ON temp_subawd_close(kuali_subawd,kuali_sequence_number)
/
commit
/
INSERT INTO SUBAWARD_CLOSEOUT(SUBAWARD_CLOSEOUT_ID,SUBAWARD_ID,CLOSEOUT_NUMBER,CLOSEOUT_TYPE_CODE,DATE_REQUESTED,DATE_FOLLOWUP,DATE_RECEIVED,COMMENTS,UPDATE_TIMESTAMP,UPDATE_USER,VER_NBR,OBJ_ID,SEQUENCE_NUMBER,SUBAWARD_CODE)
SELECT SUBAWARD_CLOSEOUT_ID_S.NEXTVAL,sc.SUBAWARD_ID,NULL,sc.CLOSEOUT_TYPE_CODE,sc.DATE_REQUESTED,sc.DATE_FOLLOWUP,sc.DATE_RECEIVED,sc.COMMENTS,sc.UPDATE_TIMESTAMP,sc.UPDATE_USER,1,sys_guid(),sc.kuali_sequence_number,sc.kuali_subawd 
FROM V_SUBAWARDCLOSE sc  where sc.SUBCONTRACT_CODE IS NOT NULL
/
commit
/
INSERT INTO SUBAWARD_CLOSEOUT(SUBAWARD_CLOSEOUT_ID,SUBAWARD_ID,CLOSEOUT_NUMBER,CLOSEOUT_TYPE_CODE,DATE_REQUESTED,DATE_FOLLOWUP,DATE_RECEIVED,COMMENTS,UPDATE_TIMESTAMP,UPDATE_USER,VER_NBR,OBJ_ID,SEQUENCE_NUMBER,SUBAWARD_CODE)
SELECT SUBAWARD_CLOSEOUT_ID_S.NEXTVAL,sc.SUBAWARD_ID,NULL,sc.CLOSEOUT_TYPE_CODE,sc.DATE_REQUESTED,sc.DATE_FOLLOWUP,sc.DATE_RECEIVED,sc.COMMENTS,sc.UPDATE_TIMESTAMP,sc.UPDATE_USER,1,sys_guid(),v2.SEQUENC,sc.kuali_subawd 
FROM V_SUBAWARDCLOSE sc inner join
temp_subawd_close v2 on sc.kuali_subawd=v2.kuali_subawd and sc.sequence_number=v2.kuali_sequence_number
/
commit
/
update SUBAWARD_CLOSEOUT pp set pp.SUBAWARD_id = (select p.SUBAWARD_id from SUBAWARD p where
p.SUBAWARD_CODE = pp.SUBAWARD_CODE
and p.sequence_number = pp.sequence_number)
/
commit
/
CREATE TABLE TEMP_SUBAWD_FUND 
(KUALI_SUBAWD NUMBER, 
KUALI_SEQUENCE_NUMBER NUMBER, 
SEQUENC NUMBER(4,0));
INSERT INTO TEMP_SUBAWD_FUND(KUALI_SUBAWD,KUALI_SEQUENCE_NUMBER,SEQUENC)   
select kuali_subawd,(
select max(aw.KUALI_SEQUENCE_NUMBER) from V_SUBAWARDFUNDING aw where aw.kuali_subawd=v.kuali_subawd
and aw.KUALI_SEQUENCE_NUMBER<=v.KUALI_SEQUENCE_NUMBER and aw.SUBCONTRACT_CODE is not null)  as kuali_sequence_number,v.KUALI_SEQUENCE_NUMBER SEQUENC  from V_SUBAWARDFUNDING v  where v.SUBCONTRACT_CODE is null
/
commit
/
CREATE INDEX temp_subawd_fund_I1 ON temp_subawd_fund(kuali_subawd,kuali_sequence_number)
/
commit
/
INSERT INTO SUBAWARD_FUNDING_SOURCE(SUBAWARD_FUNDING_SOURCE_ID,SUBAWARD_ID,UPDATE_TIMESTAMP,UPDATE_USER,VER_NBR,OBJ_ID,AWARD_ID,SEQUENCE_NUMBER,SUBAWARD_CODE)
SELECT SUBAWARD_FUNDING_SOURCE_ID_S.NEXTVAL,sc.SUBAWARD_ID,sc.UPDATE_TIMESTAMP,sc.UPDATE_USER,1,SYS_GUID(),t.module_id,sc.kuali_sequence_number,sc.kuali_subawd 
FROM V_SUBAWARDFUNDING sc inner join TEMP_SEQ_LOG t on t.module_item_key = sc.mit_award_number and 
t.KUALI_SEQUENCE_NUMBER = (select max(KUALI_SEQUENCE_NUMBER) from TEMP_SEQ_LOG where module_item_key = sc.mit_award_number)
where sc.SUBCONTRACT_CODE IS NOT NULL and t.module='AWD' 
/
commit
/
INSERT INTO SUBAWARD_FUNDING_SOURCE(SUBAWARD_FUNDING_SOURCE_ID,SUBAWARD_ID,UPDATE_TIMESTAMP,UPDATE_USER,VER_NBR,OBJ_ID,AWARD_ID,SEQUENCE_NUMBER,SUBAWARD_CODE)
SELECT SUBAWARD_FUNDING_SOURCE_ID_S.NEXTVAL,sc.SUBAWARD_ID,sc.UPDATE_TIMESTAMP,sc.UPDATE_USER,1,SYS_GUID(),t.module_id,v2.SEQUENC,sc.kuali_subawd 
FROM V_SUBAWARDFUNDING sc inner join TEMP_SEQ_LOG t on t.module_item_key = sc.mit_award_number and 
t.KUALI_SEQUENCE_NUMBER=(select max(KUALI_SEQUENCE_NUMBER) from TEMP_SEQ_LOG where module_item_key = sc.mit_award_number)
inner join 
temp_subawd_fund v2 on sc.kuali_subawd=v2.kuali_subawd and sc.sequence_number=v2.kuali_sequence_number
where t.module='AWD'
--where sc.changed='N'
/
commit
/
update SUBAWARD_FUNDING_SOURCE pp set pp.SUBAWARD_id = (select p.SUBAWARD_id from SUBAWARD p where
p.SUBAWARD_CODE = pp.SUBAWARD_CODE
and p.sequence_number = pp.sequence_number)
/
commit
/
INSERT INTO SUBCONTRACT_EXP_CAT(AWARD_NUMBER,LARGE_BUSINESS_AMT,SMALL_BUSINESS_AMT,WOMAN_OWNED_AMT,A8_DISADVANTAGE_AMT,HUB_ZONE_AMT,VETERAN_OWNED_AMT,SERVICE_DISABLED_VET_OWNED_AMT,HISTORICAL_BLACK_COLLEGE_AMT,UPDATE_TIMESTAMP,UPDATE_USER,VER_NBR,OBJ_ID)
SELECT REPLACE(MIT_AWARD_NUMBER,'-00','-0000') AWARD_NUMBER,LARGE_BUSINESS_AMT,SMALL_BUSINESS_AMT,WOMAN_OWNED_AMT,A8_DISADVANTAGE_AMT,HUB_ZONE_AMT,VETERAN_OWNED_AMT,SERVICE_DISABLED_VET_OWNED_AMT,HISTORICAL_BLACK_COLLEGE_AMT,UPDATE_TIMESTAMP,UPDATE_USER,1,SYS_GUID() FROM OSP$SUBCONTRACT_EXP_CAT@coeus.kuali
/
INSERT INTO SUBCONTRACT_EXP_CAT_DET(ID,AWARD_NUMBER,AMOUNT,FISCAL_PERIOD,IS_LARGE_BUSINESS,IS_SMALL_BUSINESS,IS_WOMAN_OWNED,IS_8A_DISADVANTAGE,IS_HUB_ZONE,IS_VETERAN_OWNED,IS_SERVICE_DISABLED_VET_OWNED,IS_HISTORICAL_BLACK_COLLEGE,UPDATE_TIMESTAMP,UPDATE_USER,VER_NBR,OBJ_ID)
SELECT SUBAWARD_ID_S.NEXTVAL,REPLACE(MIT_AWARD_NUMBER,'-00','-0000') AWARD_NUMBER,AMOUNT,to_date(FISCAL_PERIOD,'yyyymm') FISCAL_PERIOD,IS_LARGE_BUSINESS,IS_SMALL_BUSINESS,IS_WOMAN_OWNED,IS_8A_DISADVANTAGE,IS_HUB_ZONE,IS_VETERAN_OWNED,IS_SERVICE_DISABLED_VET_OWNED,IS_HISTORICAL_BLACK_COLLEGE,UPDATE_TIMESTAMP,UPDATE_USER,1,SYS_GUID() FROM OSP$SUBCONTRACT_EXP_CAT_DET@coeus.kuali
/
INSERT INTO SUB_EXP_CAT_BY_FY(AWARD_NUMBER,LARGE_BUSINESS_AMT,SMALL_BUSINESS_AMT,WOMAN_OWNED_AMT,A8_DISADVANTAGE_AMT,HUB_ZONE_AMT,VETERAN_OWNED_AMT,SERVICE_DISABLED_VET_OWNED_AMT,HISTORICAL_BLACK_COLLEGE_AMT,START_DATE,END_DATE,UPDATE_TIMESTAMP,UPDATE_USER,VER_NBR,OBJ_ID)
SELECT REPLACE(MIT_AWARD_NUMBER,'-00','-0000') AWARD_NUMBER,LARGE_BUSINESS_AMT,SMALL_BUSINESS_AMT,WOMAN_OWNED_AMT,A8_DISADVANTAGE_AMT,HUB_ZONE_AMT,VETERAN_OWNED_AMT,SERVICE_DISABLED_VET_OWNED_AMT,HISTORICAL_BLACK_COLLEGE_AMT,sysdate,sysdate,UPDATE_TIMESTAMP,UPDATE_USER,1,SYS_GUID() FROM OSP$SUB_EXP_CAT_BY_FY@coeus.kuali
/
commit
/
--- Krew table
INSERT INTO SUBAWARD_DOCUMENT(DOCUMENT_NUMBER,VER_NBR,UPDATE_TIMESTAMP,UPDATE_USER,OBJ_ID)
select DOCUMENT_NUMBER,1,UPDATE_TIMESTAMP,UPDATE_USER,SYS_GUID() from SUBAWARD
/
commit
/
declare
ls_doc_typ_id VARCHAR2(40);
begin  --UMB added max() below
select max(DOC_TYP_ID) into ls_doc_typ_id from KREW_DOC_TYP_T where DOC_TYP_NM='SubAwardDocument';
INSERT INTO KREW_DOC_HDR_T(DOC_HDR_ID,DOC_TYP_ID,DOC_HDR_STAT_CD,RTE_LVL,STAT_MDFN_DT,CRTE_DT,APRV_DT,FNL_DT,RTE_STAT_MDFN_DT,TTL,APP_DOC_ID,DOC_VER_NBR,INITR_PRNCPL_ID,VER_NBR,RTE_PRNCPL_ID,DTYPE,OBJ_ID,APP_DOC_STAT,APP_DOC_STAT_MDFN_DT)
select a.document_number,ls_doc_typ_id,'F',0,sysdate,a.UPDATE_TIMESTAMP,sysdate,NULL,sysdate,('SubAwardDocument'||'-'||a.SUBAWARD_CODE) TTL,NULL,1,nvl(p.PRNCPL_ID,'unknownuser'),1,NULL,NULL,SYS_GUID(),NULL,NULL from SUBAWARD a left outer join KRIM_PRNCPL_T p on p.PRNCPL_NM=LOWER(a.UPDATE_USER);         
commit;                      --UMB added max() above
end;
/
INSERT INTO KRNS_DOC_HDR_T(DOC_HDR_ID,OBJ_ID,VER_NBR,FDOC_DESC,ORG_DOC_HDR_ID,TMPL_DOC_HDR_ID,EXPLANATION)
select a.document_number,SYS_GUID(),1,a.SUBAWARD_CODE,NULL,NULL,NULL from SUBAWARD a ;
commit;
INSERT INTO KREW_DOC_HDR_CNTNT_T(DOC_HDR_ID,DOC_CNTNT_TXT)
select a.document_number,NULL from SUBAWARD a;
commit;
INSERT INTO KREW_RTE_BRCH_T(RTE_BRCH_ID,NM,PARNT_ID,INIT_RTE_NODE_INSTN_ID,SPLT_RTE_NODE_INSTN_ID,JOIN_RTE_NODE_INSTN_ID,VER_NBR)
select RTE_BRCH_ID,'PRIMARY',NULL,NULL,NULL,NULL,1 from TEMP_KREW where MODULE='SAWD' ;
commit
/
declare
ls_doc_typ_id VARCHAR2(40);
begin  --UMB added max() below
select max(DOC_TYP_ID) into ls_doc_typ_id from KREW_DOC_TYP_T where DOC_TYP_NM='SubAwardDocument';

INSERT INTO KREW_RTE_NODE_T(RTE_NODE_ID,DOC_TYP_ID,NM,TYP,RTE_MTHD_NM,RTE_MTHD_CD,FNL_APRVR_IND,MNDTRY_RTE_IND,ACTVN_TYP,BRCH_PROTO_ID,VER_NBR,CONTENT_FRAGMENT,GRP_ID,NEXT_DOC_STAT)
select RTE_NODE_ID,ls_doc_typ_id,'Initiated','org.kuali.rice.kew.engine.node.InitialNode',null,null,0,	0,'P',null,1,null,null,null from TEMP_KREW where MODULE='SAWD' ;
commit;
end;
/
INSERT INTO KREW_INIT_RTE_NODE_INSTN_T(DOC_HDR_ID,RTE_NODE_INSTN_ID)
select DOCUMENT_NUMBER,RTE_NODE_INSTN_ID from TEMP_KREW where MODULE='SAWD' ;
commit;
INSERT INTO KREW_RTE_NODE_INSTN_T(RTE_NODE_INSTN_ID,DOC_HDR_ID,RTE_NODE_ID,BRCH_ID,PROC_RTE_NODE_INSTN_ID,ACTV_IND,CMPLT_IND,INIT_IND,VER_NBR)
select RTE_NODE_INSTN_ID,DOCUMENT_NUMBER,RTE_NODE_ID,RTE_BRCH_ID,NULL,1,0,0,1 from TEMP_KREW where MODULE='SAWD' ;
commit;
INSERT INTO KREW_ACTN_RQST_T(ACTN_RQST_ID,PARNT_ID,ACTN_RQST_CD,DOC_HDR_ID,RULE_ID,STAT_CD,RSP_ID,PRNCPL_ID,ROLE_NM,QUAL_ROLE_NM,QUAL_ROLE_NM_LBL_TXT,RECIP_TYP_CD,PRIO_NBR,RTE_TYP_NM,RTE_LVL_NBR,RTE_NODE_INSTN_ID,ACTN_TKN_ID,DOC_VER_NBR,CRTE_DT,RSP_DESC_TXT,FRC_ACTN,ACTN_RQST_ANNOTN_TXT,DLGN_TYP,APPR_PLCY,CUR_IND,VER_NBR,GRP_ID,RQST_LBL)
select KREW_ACTN_RQST_S.NEXTVAL,NULL,'C',k.DOC_HDR_ID,NULL,'A',-3,k.INITR_PRNCPL_ID,NULL,NULL,NULL,'U',0,NULL,0,t.RTE_NODE_INSTN_ID,NULL,1,SYSDATE,'Initiator needs to complete document.',1,NULL,NULL,'F',1	,0,NULL,NULL from KREW_DOC_HDR_T k inner join TEMP_KREW t on k.DOC_HDR_ID=t.DOCUMENT_NUMBER where k.TTL like 'SubAwardDocument%' AND t.MODULE='SAWD' ;
commit;
INSERT INTO KREW_ACTN_TKN_T(ACTN_TKN_ID,DOC_HDR_ID,PRNCPL_ID,DLGTR_PRNCPL_ID,ACTN_CD,ACTN_DT,DOC_VER_NBR,ANNOTN,CUR_IND,VER_NBR,DLGTR_GRP_ID)
select KREW_ACTN_TKN_S.NEXTVAL,k.DOC_HDR_ID,k.INITR_PRNCPL_ID,NULL,'S',SYSDATE,1,NULL,1,1,NULL from KREW_DOC_HDR_T k inner join TEMP_KREW t on k.DOC_HDR_ID=t.DOCUMENT_NUMBER where k.TTL like 'SubAwardDocument%' AND t.MODULE='SAWD' ;
commit
/
----- Temp table create	
CREATE TABLE V_SUBAWARDCONT 
(KUALI_SUBAWD NUMBER, 
KUALI_SEQUENCE_NUMBER NUMBER(4,0), 
CHANGED CHAR(1 BYTE), 
MIT_SEQUENCE_NUMBER NUMBER(4,0), 
SEQUENCE_NUMBER NUMBER(4,0), 
SUBCONTRACT_CODE VARCHAR2(20 BYTE), 
SUBAWARD_ID NUMBER(12,0), 
CONTACT_TYPE_CODE NUMBER(3,0), 
ROLODEX_ID NUMBER(6,0), 
UPDATE_TIMESTAMP DATE, 
UPDATE_USER VARCHAR2(8 BYTE));
INSERT INTO V_SUBAWARDCONT(KUALI_SUBAWD,KUALI_SEQUENCE_NUMBER,CHANGED,MIT_SEQUENCE_NUMBER,SEQUENCE_NUMBER,SUBCONTRACT_CODE,SUBAWARD_ID,CONTACT_TYPE_CODE,ROLODEX_ID,UPDATE_TIMESTAMP,UPDATE_USER)   
select  to_number(l.MODULE_ITEM_KEY) kuali_subawd,l.kuali_sequence_number,l.changed,a.sequence_number  Mit_sequence_number,a.sequence_number,a.SUBCONTRACT_CODE,aw.SUBAWARD_ID, a.CONTACT_TYPE_CODE,a.ROLODEX_ID,a.update_timestamp,a.update_user 
from TEMP_SEQ_LOG l
Left outer join OSP$SUBCONTRACT_CONTACT@Coeus.Kuali a on l.module_item_key=a.SUBCONTRACT_CODE and l.mit_sequence_number=a.sequence_number inner join SUBAWARD aw on aw.SUBAWARD_CODE=to_number(l.MODULE_ITEM_KEY) and aw.SEQUENCE_NUMBER=l.KUALI_SEQUENCE_NUMBER where
l.MODULE='SAWD';
commit;
CREATE TABLE V_SUBAWARDCUST 
(KUALI_SUBAWD NUMBER, 
KUALI_SEQUENCE_NUMBER NUMBER(4,0), 
CHANGED CHAR(1 BYTE), 
MIT_SEQUENCE_NUMBER NUMBER(4,0), 
SEQUENCE_NUMBER NUMBER(4,0), 
SUBCONTRACT_CODE VARCHAR2(20 BYTE), 
SUBAWARD_ID NUMBER(12,0), 
COLUMN_NAME VARCHAR2(30 BYTE), 
COLUMN_VALUE VARCHAR2(2000 BYTE), 
UPDATE_TIMESTAMP DATE, 
UPDATE_USER VARCHAR2(8 BYTE));
INSERT INTO  V_SUBAWARDCUST(KUALI_SUBAWD,KUALI_SEQUENCE_NUMBER,CHANGED,MIT_SEQUENCE_NUMBER,SEQUENCE_NUMBER,SUBCONTRACT_CODE,SUBAWARD_ID,COLUMN_NAME,COLUMN_VALUE,UPDATE_TIMESTAMP,UPDATE_USER)  
select  to_number(l.MODULE_ITEM_KEY) kuali_subawd,l.kuali_sequence_number,l.changed,a.sequence_number  Mit_sequence_number,a.sequence_number,a.SUBCONTRACT_CODE,aw.SUBAWARD_ID, a.column_name,a.column_value,a.update_timestamp,a.update_user 
from TEMP_SEQ_LOG l
Left outer join OSP$SUBCONTRACT_CUSTOM_DATA@coeus.kuali a on l.module_item_key=a.SUBCONTRACT_CODE and l.mit_sequence_number=a.sequence_number inner join SUBAWARD aw on aw.SUBAWARD_CODE=to_number(l.MODULE_ITEM_KEY) and aw.SEQUENCE_NUMBER=l.KUALI_SEQUENCE_NUMBER where
l.MODULE='SAWD';
commit;
CREATE INDEX V_SUBAWARDCONT_I1 ON V_SUBAWARDCONT(kuali_subawd,KUALI_SEQUENCE_NUMBER);
CREATE INDEX V_SUBAWARDCUST_I1 ON V_SUBAWARDCUST(kuali_subawd,KUALI_SEQUENCE_NUMBER);
commit
/
--- Version history
declare
li_max_sequence_num NUMBER;
li_ver_nbr pls_integer:=1;
ls_version_status  VARCHAR2(16); 

cursor c_subawd is
select SUBAWARD_CODE,STATUS_CODE,SEQUENCE_NUMBER,UPDATE_TIMESTAMP,UPDATE_USER from SUBAWARD order by SUBAWARD_CODE,SEQUENCE_NUMBER;
r_subawd c_subawd%ROWTYPE;


BEGIN     
INSERT INTO VERSION_HISTORY(VERSION_HISTORY_ID,SEQ_OWNER_CLASS_NAME,SEQ_OWNER_VERSION_NAME_FIELD,SEQ_OWNER_VERSION_NAME_VALUE,SEQ_OWNER_SEQ_NUMBER,VERSION_STATUS,VERSION_DATE,USER_ID,UPDATE_TIMESTAMP,UPDATE_USER,VER_NBR,OBJ_ID)
SELECT  SEQ_VERSION_HISTORY_ID.NEXTVAL,'org.kuali.kra.subaward.bo.SubAward','subAwardCode',r_subawd.SUBAWARD_CODE,r_subawd.SEQUENCE_NUMBER,decode((SELECT MAX(SEQUENCE_NUMBER) FROM SUBAWARD WHERE SUBAWARD_CODE=r_subawd.SUBAWARD_CODE),r_subawd.sequence_number,'ACTIVE','ARCHIVED') version_status,
r_subawd.UPDATE_TIMESTAMP,lower(r_subawd.UPDATE_USER),r_subawd.UPDATE_TIMESTAMP,lower(r_subawd.UPDATE_USER),1,SYS_GUID()
from SUBAWARD r_subawd;	


exception
when others then
dbms_output.put_line('ERROR IN VERSION_HISTORY,SUBAWARD_CODE/SEQUENCE NUMBER:'||sqlerrm);  
END;
/
--- subaward amount info
DECLARE
li_ver_nbr NUMBER(8):=1;
li_amt_info NUMBER(12,0);
li_seq NUMBER(4);
li_subaward_id NUMBER(12,0);
li_seq_attachment NUMBER(22,0);
ls_file_name VARCHAR2(150 BYTE);
ls_subaward_code VARCHAR2(20);
ls_content_type	VARCHAR2(255);
ls_sub_awd VARCHAR2(20);
li_mit_seq NUMBER(4);

CURSOR c_subaward IS
SELECT SUBAWARD_CODE,SEQUENCE_NUMBER FROM SUBAWARD ORDER BY SUBAWARD_CODE,SEQUENCE_NUMBER;
r_subaward c_subaward%ROWTYPE;

CURSOR c_amt_info(as_mit varchar2,as_seq number) IS
SELECT sa.SUBCONTRACT_CODE,sa.LINE_NUMBER,as_seq as SEQUENCE_NUMBER,sa.OBLIGATED_AMOUNT,sa.OBLIGATED_CHANGE,sa.ANTICIPATED_AMOUNT,sa.ANTICIPATED_CHANGE,sa.EFFECTIVE_DATE,sa.COMMENTS,sa.UPDATE_TIMESTAMP,sa.UPDATE_USER,sa.FILE_NAME,sa.DOCUMENT,sa.MIME_TYPE,sa.PERFORMANCE_START_DATE,sa.PERFORMANCE_END_DATE,sa.MODIFICATION_NUMBER,sa.MODIFICATION_EFFECTIVE_DATE FROM TEMP_SUBAWARD_AMT_INFO sa
where sa.SUBCONTRACT_CODE=as_mit and SEQUENCE_NUMBER =(
select max(aw.sequence_number) from TEMP_SUBAWARD_AMT_INFO aw where  aw.SUBCONTRACT_CODE=sa.SUBCONTRACT_CODE and aw.sequence_number<=as_seq);
r_amt_info c_amt_info%ROWTYPE;

BEGIN

IF c_subaward%ISOPEN THEN
CLOSE c_subaward;
END IF;
OPEN c_subaward;
LOOP
FETCH c_subaward INTO r_subaward;
EXIT WHEN c_subaward%NOTFOUND;
select LTRIM(TO_CHAR(r_subaward.SUBAWARD_CODE, '00000000')) into ls_sub_awd from dual;
--SELECT FN_GET_SEQ(r_subaward.SUBAWARD_CODE,r_subaward.SEQUENCE_NUMBER) INTO li_mit_seq FROM DUAL;
li_mit_seq:=r_subaward.SEQUENCE_NUMBER;

IF c_amt_info%ISOPEN THEN
CLOSE c_amt_info;
END IF;
OPEN c_amt_info(ls_sub_awd,li_mit_seq);
LOOP
FETCH c_amt_info INTO r_amt_info;
EXIT WHEN c_amt_info%NOTFOUND;
li_seq:=r_amt_info.SEQUENCE_NUMBER;
--SELECT FN_GET_KUALI_SEQ(r_amt_info.SUBCONTRACT_CODE,r_amt_info.SEQUENCE_NUMBER) INTO li_seq FROM DUAL;
SELECT SUBAWARD_AMT_INFO_ID_S.NEXTVAL INTO li_amt_info FROM DUAL; 
BEGIN
SELECT SUBAWARD_ID INTO li_subaward_id FROM SUBAWARD WHERE SUBAWARD_CODE=to_number(r_amt_info.SUBCONTRACT_CODE) AND SEQUENCE_NUMBER=li_seq;
EXCEPTION 
WHEN OTHERS THEN 
dbms_output.put_line('MISSING SUBAWARD_ID,SUBAWARD_CODE:'||to_number(r_amt_info.SUBCONTRACT_CODE) ||'SEQUENCE_NUMBER:'||li_seq||'-'||sqlerrm);
END;
SELECT SEQ_ATTACHMENT_ID.NEXTVAL INTO li_seq_attachment FROM DUAL;
SELECT to_number(r_amt_info.SUBCONTRACT_CODE) INTO ls_subaward_code FROM dual;
ls_file_name:=r_amt_info.FILE_NAME;
ls_content_type:=r_amt_info.MIME_TYPE;
if ls_content_type is null then  
ls_content_type:=r_amt_info.FILE_NAME;
select REVERSE(substr( REVERSE(ls_content_type),1,(instr( REVERSE(ls_content_type),'.',1)-1))) into ls_content_type from dual;
if    ls_content_type='xls' or  ls_content_type='xlsx' then
ls_content_type:='application/excel';
elsif ls_content_type='doc' or  ls_content_type='docx' then
ls_content_type:='application/msword';  
elsif ls_content_type='ppt' or  ls_content_type='pptx' then
ls_content_type:='application/powerpoint';        
elsif ls_content_type='html'  then
ls_content_type:='text/html'; 
elsif ls_content_type='pdf'  then
ls_content_type:='application/pdf';       
elsif ls_content_type='jpg' or ls_content_type='jpeg'  then
ls_content_type:='image/jpeg';           
else      
ls_content_type:='other'; 
end if;
end if;

IF ls_file_name IS NOT NULL THEN

BEGIN

INSERT INTO ATTACHMENT_FILE (FILE_ID,SEQUENCE_NUMBER,FILE_NAME,CONTENT_TYPE,FILE_DATA,VER_NBR,UPDATE_TIMESTAMP,UPDATE_USER,OBJ_ID)
VALUES(li_seq_attachment,li_seq,r_amt_info.FILE_NAME,ls_content_type,r_amt_info.DOCUMENT,li_ver_nbr,r_amt_info.UPDATE_TIMESTAMP,r_amt_info.UPDATE_USER,SYS_GUID());

INSERT INTO SUBAWARD_AMOUNT_INFO(SUBAWARD_AMOUNT_INFO_ID,SUBAWARD_ID,OBLIGATED_AMOUNT,OBLIGATED_CHANGE,ANTICIPATED_AMOUNT,ANTICIPATED_CHANGE,EFFECTIVE_DATE,COMMENTS,UPDATE_TIMESTAMP,UPDATE_USER,FILE_NAME,DOCUMENT,MIME_TYPE,PERFORMANCE_START_DATE,PERFORMANCE_END_DATE,MODIFICATION_NUMBER,MODIFICATION_EFFECTIVE_DATE,VER_NBR,OBJ_ID,FILE_ID,SEQUENCE_NUMBER,SUBAWARD_CODE)
VALUES(li_amt_info,li_subaward_id,null,r_amt_info.OBLIGATED_AMOUNT,null,r_amt_info.ANTICIPATED_AMOUNT,r_amt_info.EFFECTIVE_DATE,r_amt_info.COMMENTS,r_amt_info.UPDATE_TIMESTAMP,r_amt_info.UPDATE_USER,r_amt_info.FILE_NAME,r_amt_info.DOCUMENT,null,r_amt_info.PERFORMANCE_START_DATE,r_amt_info.PERFORMANCE_END_DATE,r_amt_info.MODIFICATION_NUMBER,r_amt_info.MODIFICATION_EFFECTIVE_DATE,li_ver_nbr,SYS_GUID(),li_seq_attachment,li_seq,ls_subaward_code);
EXCEPTION
WHEN OTHERS THEN
dbms_output.put_line('ERROR IN SUBAWARD_AMOUNT_INFO,SUBAWARD_CODE:'||r_amt_info.SUBCONTRACT_CODE||'SEQUENCE_NUMBER:'||r_amt_info.SEQUENCE_NUMBER||'-'||sqlerrm);
END;

ELSE
BEGIN

INSERT INTO SUBAWARD_AMOUNT_INFO(SUBAWARD_AMOUNT_INFO_ID,SUBAWARD_ID,OBLIGATED_AMOUNT,OBLIGATED_CHANGE,ANTICIPATED_AMOUNT,ANTICIPATED_CHANGE,EFFECTIVE_DATE,COMMENTS,UPDATE_TIMESTAMP,UPDATE_USER,FILE_NAME,DOCUMENT,MIME_TYPE,PERFORMANCE_START_DATE,PERFORMANCE_END_DATE,MODIFICATION_NUMBER,MODIFICATION_EFFECTIVE_DATE,VER_NBR,OBJ_ID,FILE_ID,SEQUENCE_NUMBER,SUBAWARD_CODE)
VALUES(li_amt_info,li_subaward_id,null,r_amt_info.OBLIGATED_AMOUNT,null,r_amt_info.ANTICIPATED_AMOUNT,r_amt_info.EFFECTIVE_DATE,r_amt_info.COMMENTS,r_amt_info.UPDATE_TIMESTAMP,r_amt_info.UPDATE_USER,r_amt_info.FILE_NAME,r_amt_info.DOCUMENT,null,r_amt_info.PERFORMANCE_START_DATE,r_amt_info.PERFORMANCE_END_DATE,r_amt_info.MODIFICATION_NUMBER,r_amt_info.MODIFICATION_EFFECTIVE_DATE,li_ver_nbr,SYS_GUID(),li_seq_attachment,li_seq,ls_subaward_code);
EXCEPTION
WHEN OTHERS THEN
dbms_output.put_line('ERROR IN SUBAWARD_AMOUNT_INFO,SUBAWARD_CODE:'||r_amt_info.SUBCONTRACT_CODE||'SEQUENCE_NUMBER:'||r_amt_info.SEQUENCE_NUMBER||'-'||sqlerrm);
END;

END IF;

END LOOP;
CLOSE c_amt_info;
END LOOP;
CLOSE c_subaward;
END;
/
-- Subaward amount release
DECLARE
li_ver_nbr NUMBER(8):=1;
li_amt_released NUMBER(12,0);
li_seq NUMBER(4);
li_subaward_id NUMBER(12,0);
ls_subaward_code VARCHAR2(20);
ls_app_id VARCHAR2(40 BYTE);
ls_create_id VARCHAR2(40 BYTE);
ls_app_comm VARCHAR2(2000 BYTE);
ls_invoice VARCHAR2(50 BYTE);
ls_sub_awd VARCHAR2(20);
li_mit_seq NUMBER(4);

CURSOR c_subaward IS
SELECT SUBAWARD_CODE,SEQUENCE_NUMBER FROM SUBAWARD ORDER BY SUBAWARD_CODE,SEQUENCE_NUMBER;
r_subaward c_subaward%ROWTYPE;

CURSOR c_amt(as_mit varchar2,as_seq number) IS
SELECT SUBCONTRACT_CODE,LINE_NUMBER,as_seq as SEQUENCE_NUMBER,AMOUNT_RELEASED,EFFECTIVE_DATE,COMMENTS,UPDATE_TIMESTAMP,UPDATE_USER,INVOICE_NUMBER,START_DATE,END_DATE,STATUS_CODE,APPROVAL_COMMENTS,APPROVED_BY_USER,APPROVAL_DATE,DOCUMENT,FILE_NAME,CREATED_BY,CREATED_DATE,MIME_TYPE
FROM TEMP_SUBAWARD_AMT_RELEASE
where SUBCONTRACT_CODE =as_mit
 and SEQUENCE_NUMBER =(
select max(aw.sequence_number) from TEMP_SUBAWARD_AMT_RELEASE aw where  aw.SUBCONTRACT_CODE=TEMP_SUBAWARD_AMT_RELEASE.SUBCONTRACT_CODE and aw.sequence_number<=as_seq);
r_amt c_amt%ROWTYPE;

BEGIN

IF c_subaward%ISOPEN THEN
CLOSE c_subaward;
END IF;
OPEN c_subaward;
LOOP
FETCH c_subaward INTO r_subaward;
EXIT WHEN c_subaward%NOTFOUND;
select LTRIM(TO_CHAR(r_subaward.SUBAWARD_CODE, '00000000')) into ls_sub_awd from dual;
--SELECT FN_GET_SEQ(r_subaward.SUBAWARD_CODE,r_subaward.SEQUENCE_NUMBER) INTO li_mit_seq FROM DUAL;
li_mit_seq:=r_subaward.SEQUENCE_NUMBER;


			IF c_amt%ISOPEN THEN
			CLOSE c_amt;
			END IF;
			OPEN c_amt(ls_sub_awd,li_mit_seq);
			LOOP
			FETCH c_amt INTO r_amt;
			EXIT WHEN c_amt%NOTFOUND;
			li_seq:=r_amt.SEQUENCE_NUMBER;
			--SELECT FN_GET_KUALI_SEQ(r_amt.SUBCONTRACT_CODE,r_amt.SEQUENCE_NUMBER) INTO li_seq FROM DUAL;
			SELECT SUBAWARD_AMT_REL_ID_S.NEXTVAL INTO li_amt_released FROM DUAL;
			BEGIN
			SELECT SUBAWARD_ID INTO li_subaward_id FROM SUBAWARD WHERE SUBAWARD_CODE=to_number(r_amt.SUBCONTRACT_CODE) AND SEQUENCE_NUMBER=li_seq;
			EXCEPTION 
			WHEN OTHERS THEN 
			dbms_output.put_line('MISSING SUBAWARD_ID,SUBAWARD_CODE:'||to_number(r_amt.SUBCONTRACT_CODE) ||'SEQUENCE_NUMBER:'||li_seq||'-'||sqlerrm);
			END;
			SELECT to_number(r_amt.SUBCONTRACT_CODE) INTO ls_subaward_code FROM dual;
			BEGIN
			SELECT PRNCPL_ID INTO ls_create_id  FROM KRIM_PRNCPL_T WHERE PRNCPL_NM=lower(r_amt.CREATED_BY);
			EXCEPTION
			WHEN OTHERS THEN
			ls_create_id:=Null;
			END;
			BEGIN
			SELECT to_number(substr(r_amt.APPROVAL_COMMENTS,1,9)) INTO ls_app_comm  FROM DUAL;
			EXCEPTION
			WHEN OTHERS THEN
			ls_app_comm:=1;
			END;

			BEGIN
			SELECT to_number(r_amt.INVOICE_NUMBER) INTO ls_invoice FROM DUAL;
			EXCEPTION
			WHEN OTHERS THEN
			ls_invoice:=1;
			END;

			BEGIN
			INSERT INTO SUBAWARD_AMT_RELEASED(SUBAWARD_AMT_RELEASED_ID,SUBAWARD_ID,AMOUNT_RELEASED,EFFECTIVE_DATE,COMMENTS,UPDATE_TIMESTAMP,UPDATE_USER,INVOICE_NUMBER,START_DATE,END_DATE,STATUS_CODE,APPROVAL_COMMENTS,APPROVED_BY_USER,APPROVAL_DATE,DOCUMENT,FILE_NAME,CREATED_BY,CREATED_DATE,MIME_TYPE,VER_NBR,OBJ_ID,SEQUENCE_NUMBER,SUBAWARD_CODE,DOCUMENT_NUMBER,INVOICE_STATUS)
			VALUES(li_amt_released,li_subaward_id,r_amt.AMOUNT_RELEASED,r_amt.EFFECTIVE_DATE,r_amt.COMMENTS,r_amt.UPDATE_TIMESTAMP,r_amt.UPDATE_USER,ls_invoice,r_amt.START_DATE,r_amt.END_DATE,r_amt.STATUS_CODE,ls_app_comm,r_amt.APPROVED_BY_USER,r_amt.APPROVAL_DATE,r_amt.DOCUMENT,r_amt.FILE_NAME,ls_create_id,r_amt.CREATED_DATE,null,li_ver_nbr, SYS_GUID(),li_seq,ls_subaward_code,null,null);

			EXCEPTION
			WHEN OTHERS THEN
			ls_app_id:=null;
			dbms_output.put_line('ERROR IN SUBAWARD_AMT_RELEASED,SUBAWARD_CODE:'||r_amt.SUBCONTRACT_CODE||'SEQUENCE_NUMBER:'||r_amt.SEQUENCE_NUMBER);
			END;

			END LOOP;
			CLOSE c_amt;
			
END LOOP;
CLOSE c_subaward;
			
END;
/
-- Subaward attachemnet
CREATE TABLE "TEMP_SUBAWARD_ATTCH" 
   (	"SUBCONTRACT_CODE" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
	"SEQUENCE_NUMBER" NUMBER(3,0) NOT NULL ENABLE, 
	"ATTACHMENT_ID" NUMBER(3,0) NOT NULL ENABLE, 
	"ATTACHMENT_TYPE_CODE" NUMBER(3,0) NOT NULL ENABLE, 
	"DESCRIPTION" VARCHAR2(200 BYTE), 
	"FILE_NAME" VARCHAR2(300 BYTE) NOT NULL ENABLE, 
	"ATTACHMENT" BLOB, 
	"MIME_TYPE" VARCHAR2(100 BYTE), 
	"UPDATE_TIMESTAMP" DATE, 
	"UPDATE_USER" VARCHAR2(8 BYTE));
	commit;
  insert into TEMP_SUBAWARD_ATTCH(SUBCONTRACT_CODE,SEQUENCE_NUMBER,ATTACHMENT,ATTACHMENT_ID,ATTACHMENT_TYPE_CODE,DESCRIPTION,FILE_NAME,MIME_TYPE,UPDATE_TIMESTAMP,UPDATE_USER)
	SELECT SUBCONTRACT_CODE,SEQUENCE_NUMBER,ATTACHMENT,ATTACHMENT_ID,ATTACHMENT_TYPE_CODE,DESCRIPTION,FILE_NAME,MIME_TYPE,UPDATE_TIMESTAMP,UPDATE_USER FROM OSP$SUBCONTRACT_ATTACHMENTS@Coeus.Kuali;
commit;
/
DELETE FROM ATTACHMENT_FILE WHERE FILE_ID IN(SELECT FILE_ID FROM SUBAWARD_ATTACHMENTS)
/
TRUNCATE TABLE SUBAWARD_ATTACHMENTS
/
DECLARE
li_file_id NUMBER(12,0);
ls_content_type	VARCHAR2(255);
li_subawd_id NUMBER(12,0);
ls_subaward_code VARCHAR2(20);
li_seq NUMBER(4,0);
ls_sub_awd VARCHAR2(20);
li_mit_seq NUMBER(4);

CURSOR c_subaward IS
SELECT SUBAWARD_CODE,SEQUENCE_NUMBER FROM SUBAWARD ORDER BY SUBAWARD_CODE,SEQUENCE_NUMBER;
r_subaward c_subaward%ROWTYPE;

CURSOR C_subawd_att(as_mit varchar2,as_seq number) IS
SELECT SUBCONTRACT_CODE,ATTACHMENT,as_seq as SEQUENCE_NUMBER,ATTACHMENT_ID,ATTACHMENT_TYPE_CODE,DESCRIPTION,FILE_NAME,MIME_TYPE,UPDATE_TIMESTAMP,UPDATE_USER 
FROM TEMP_SUBAWARD_ATTCH
where SUBCONTRACT_CODE =as_mit
 and SEQUENCE_NUMBER =(
select max(aw.sequence_number) from TEMP_SUBAWARD_ATTCH aw where  aw.SUBCONTRACT_CODE=TEMP_SUBAWARD_ATTCH.SUBCONTRACT_CODE and aw.sequence_number<=as_seq);

r_subawd_att C_subawd_att%ROWTYPE;

BEGIN

IF c_subaward%ISOPEN THEN
CLOSE c_subaward;
END IF;
OPEN c_subaward;
LOOP
FETCH c_subaward INTO r_subaward;
EXIT WHEN c_subaward%NOTFOUND;
select LTRIM(TO_CHAR(r_subaward.SUBAWARD_CODE, '00000000')) into ls_sub_awd from dual;
--SELECT FN_GET_SEQ(r_subaward.SUBAWARD_CODE,r_subaward.SEQUENCE_NUMBER) INTO li_mit_seq FROM DUAL;
li_mit_seq:=r_subaward.SEQUENCE_NUMBER;

			IF C_subawd_att%ISOPEN THEN
			CLOSE C_subawd_att;
			END IF;
			OPEN C_subawd_att(ls_sub_awd,li_mit_seq);
			LOOP
			FETCH C_subawd_att INTO r_subawd_att;
			EXIT WHEN C_subawd_att%NOTFOUND;
			SELECT to_number(r_subawd_att.SUBCONTRACT_CODE) INTO ls_subaward_code FROM dual;
			SELECT SUBAWARD_ID INTO li_subawd_id FROM SUBAWARD WHERE SUBAWARD_CODE=ls_subaward_code AND SEQUENCE_NUMBER=r_subawd_att.SEQUENCE_NUMBER;
			select SEQ_ATTACHMENT_ID.NEXTVAL into li_file_id from dual;
			li_seq:=r_subawd_att.SEQUENCE_NUMBER;
			ls_content_type:=r_subawd_att.MIME_TYPE;

			if ls_content_type is null then  
			ls_content_type:=r_subawd_att.FILE_NAME;
			select REVERSE(substr( REVERSE(ls_content_type),1,(instr( REVERSE(ls_content_type),'.',1)-1))) into ls_content_type from dual;
				if    ls_content_type='xls' or  ls_content_type='xlsx' then
					  ls_content_type:='application/excel';
				elsif ls_content_type='doc' or  ls_content_type='docx' then
					  ls_content_type:='application/msword';  
				elsif ls_content_type='ppt' or  ls_content_type='pptx' then
					  ls_content_type:='application/powerpoint';        
				elsif ls_content_type='html'  then
					  ls_content_type:='text/html'; 
				elsif ls_content_type='pdf'  then
					  ls_content_type:='application/pdf';       
				elsif ls_content_type='jpg' or ls_content_type='jpeg'  then
					  ls_content_type:='image/jpeg';           
				else      
					  ls_content_type:='other'; 
				end if;
			end if;

			INSERT INTO ATTACHMENT_FILE(FILE_ID,SEQUENCE_NUMBER,FILE_NAME,CONTENT_TYPE,FILE_DATA,VER_NBR,UPDATE_TIMESTAMP,UPDATE_USER,OBJ_ID)
			VALUES(li_file_id,li_seq,r_subawd_att.FILE_NAME,ls_content_type,r_subawd_att.ATTACHMENT,1,r_subawd_att.UPDATE_TIMESTAMP,r_subawd_att.UPDATE_USER,SYS_GUID());


			INSERT INTO SUBAWARD_ATTACHMENTS(ATTACHMENT_ID,SUBAWARD_ID,SUBAWARD_CODE,SEQUENCE_NUMBER,ATTACHMENT_TYPE_CODE,DOCUMENT_ID,FILE_ID,DESCRIPTION,FILE_NAME,DOCUMENT,UPDATE_TIMESTAMP,UPDATE_USER,VER_NBR,OBJ_ID)
			VALUES(SEQ_SUBAWARD_ATTACHMENT_ID.NEXTVAL,li_subawd_id,r_subawd_att.SUBCONTRACT_CODE,r_subawd_att.SEQUENCE_NUMBER,r_subawd_att.ATTACHMENT_TYPE_CODE,r_subawd_att.ATTACHMENT_ID,li_file_id,r_subawd_att.DESCRIPTION,r_subawd_att.FILE_NAME,r_subawd_att.ATTACHMENT,r_subawd_att.UPDATE_TIMESTAMP,r_subawd_att.UPDATE_USER,1,SYS_GUID());

			END LOOP;
			CLOSE C_subawd_att;
END LOOP;
CLOSE c_subaward;

END;
/
-- Subaward contact	
CREATE TABLE TEMP_SUBAWD_CONT 
(KUALI_SUBAWD NUMBER, 
KUALI_SEQUENCE_NUMBER NUMBER, 
SEQUENC NUMBER(4,0));
INSERT INTO  TEMP_SUBAWD_CONT(KUALI_SUBAWD,KUALI_SEQUENCE_NUMBER,SEQUENC)  
select kuali_subawd,(
select max(aw.KUALI_SEQUENCE_NUMBER) from V_SUBAWARDCONT aw where aw.kuali_subawd=v.kuali_subawd
and aw.KUALI_SEQUENCE_NUMBER<=v.KUALI_SEQUENCE_NUMBER and aw.SUBCONTRACT_CODE is not null)  as kuali_sequence_number,v.KUALI_SEQUENCE_NUMBER SEQUENC  from V_SUBAWARDCONT v  where v.SUBCONTRACT_CODE is null;

CREATE INDEX temp_subawd_cont_I1 ON temp_subawd_cont(kuali_subawd,kuali_sequence_number);
commit;

INSERT INTO SUBAWARD_CONTACT(SUBAWARD_CONTACT_ID,SUBAWARD_ID,CONTACT_TYPE_CODE,ROLODEX_ID,UPDATE_TIMESTAMP,UPDATE_USER,VER_NBR,OBJ_ID,SEQUENCE_NUMBER,SUBAWARD_CODE)
SELECT SUBAWARD_CONTACT_ID_S.NEXTVAL,sc.SUBAWARD_ID,sc.CONTACT_TYPE_CODE,sc.ROLODEX_ID,sc.UPDATE_TIMESTAMP,sc.UPDATE_USER,1,sys_guid(),sc.kuali_sequence_number,sc.kuali_subawd  
FROM V_SUBAWARDCONT sc where sc.SUBCONTRACT_CODE IS NOT NULL;

commit;
/

INSERT INTO SUBAWARD_CONTACT(SUBAWARD_CONTACT_ID,SUBAWARD_ID,CONTACT_TYPE_CODE,ROLODEX_ID,UPDATE_TIMESTAMP,UPDATE_USER,VER_NBR,OBJ_ID,SEQUENCE_NUMBER,SUBAWARD_CODE)
SELECT SUBAWARD_CONTACT_ID_S.NEXTVAL,sc.SUBAWARD_ID,sc.CONTACT_TYPE_CODE,sc.ROLODEX_ID,sc.UPDATE_TIMESTAMP,sc.UPDATE_USER,1,sys_guid(),v2.SEQUENC,sc.kuali_subawd 
FROM V_SUBAWARDCONT sc inner join
temp_subawd_cont v2 on sc.kuali_subawd=v2.kuali_subawd and sc.sequence_number=v2.kuali_sequence_number;

--where sc.changed='N';
commit;
update SUBAWARD_CONTACT pp set pp.SUBAWARD_id = (select p.SUBAWARD_id from SUBAWARD p where
p.SUBAWARD_CODE = pp.SUBAWARD_CODE
and p.sequence_number = pp.sequence_number
);
commit
/
---- Subaward custom data
CREATE TABLE TEMP_SUBAWD_CUST 
(KUALI_SUBAWD NUMBER, 
KUALI_SEQUENCE_NUMBER NUMBER, 
SEQUENC NUMBER(4,0));
INSERT INTO TEMP_SUBAWD_CUST(KUALI_SUBAWD,KUALI_SEQUENCE_NUMBER,SEQUENC)   
select kuali_subawd,(
select max(aw.KUALI_SEQUENCE_NUMBER) from V_SUBAWARDCUST aw where aw.kuali_subawd=v.kuali_subawd
and aw.KUALI_SEQUENCE_NUMBER<=v.KUALI_SEQUENCE_NUMBER and aw.SUBCONTRACT_CODE is not null)  as kuali_sequence_number,v.KUALI_SEQUENCE_NUMBER SEQUENC  from V_SUBAWARDCUST v  where v.SUBCONTRACT_CODE is null;


CREATE INDEX temp_subawd_cust_I1 ON temp_subawd_cust(kuali_subawd,kuali_sequence_number);
commit
/
INSERT INTO SUBAWARD_CUSTOM_DATA(SUBAWARD_CUSTOM_DATA_ID,SUBAWARD_ID,CUSTOM_ATTRIBUTE_ID,VALUE,UPDATE_TIMESTAMP,UPDATE_USER,VER_NBR,OBJ_ID,SEQUENCE_NUMBER,SUBAWARD_CODE) 
SELECT SUBAWARD_CUST_ID_S.NEXTVAL,a.SUBAWARD_ID,c.ID,a.column_value,a.UPDATE_TIMESTAMP,a.UPDATE_USER,1,sys_guid(),a.kuali_sequence_number,a.kuali_subawd 
FROM V_SUBAWARDCUST a inner join CUSTOM_ATTRIBUTE c on UPPER(c.NAME)=UPPER(a.COLUMN_NAME) where a.SUBCONTRACT_CODE IS NOT NULL;
commit
/

INSERT INTO SUBAWARD_CUSTOM_DATA(SUBAWARD_CUSTOM_DATA_ID,SUBAWARD_ID,CUSTOM_ATTRIBUTE_ID,VALUE,UPDATE_TIMESTAMP,UPDATE_USER,VER_NBR,OBJ_ID,SEQUENCE_NUMBER,SUBAWARD_CODE) 
SELECT SUBAWARD_CUST_ID_S.NEXTVAL,a.SUBAWARD_ID,c.ID,a.column_value,a.UPDATE_TIMESTAMP,a.UPDATE_USER,1,sys_guid(),v2.SEQUENC,a.kuali_subawd 
FROM V_SUBAWARDCUST a inner join CUSTOM_ATTRIBUTE c on UPPER(c.NAME)=UPPER(a.COLUMN_NAME) inner join
temp_subawd_cust v2 on a.kuali_subawd=v2.kuali_subawd and a.sequence_number=v2.kuali_sequence_number;


commit;
update SUBAWARD_CUSTOM_DATA pp set pp.SUBAWARD_id = (select p.SUBAWARD_id from SUBAWARD p where
p.SUBAWARD_CODE = pp.SUBAWARD_CODE
and p.sequence_number = pp.sequence_number
);
commit
/
INSERT INTO CUSTOM_ATTRIBUTE_DOC_VALUE(DOCUMENT_NUMBER,CUSTOM_ATTRIBUTE_ID,VALUE,UPDATE_TIMESTAMP,UPDATE_USER,VER_NBR,OBJ_ID)
select e.document_number,c.id,ec.column_value,ec.UPDATE_TIMESTAMP,ec.UPDATE_USER,1,sys_guid() from OSP$SUBCONTRACT_CUSTOM_DATA@coeus.kuali ec,SUBAWARD e,CUSTOM_ATTRIBUTE c
where e.subaward_code=to_number(ec.subcontract_code)
and e.sequence_number=ec.sequence_number
and upper(c.NAME)=upper(ec.COLUMN_NAME);
commit
/
-- subaward report types
INSERT INTO SUBAWARD_REPORT_TYPE(REPORT_TYPE_CODE,DESCRIPTION,UPDATE_TIMESTAMP,UPDATE_USER,VER_NBR,OBJ_ID,SORT_ID)
SELECT REPORT_TYPE_CODE,DESCRIPTION,UPDATE_TIMESTAMP,UPDATE_USER,1,SYS_GUID(),REPORT_TYPE_CODE FROM OSP$SUBCONTRACT_REPORT_TYPE@coeus.kuali;
commit;

INSERT INTO SUBAWARD_REPORTS(SUBAWARD_REPORT_ID,SUBAWARD_ID,SUBAWARD_CODE,SEQUENCE_NUMBER,REPORT_TYPE_CODE,UPDATE_TIMESTAMP,UPDATE_USER,VER_NBR,OBJ_ID)
SELECT SEQ_SUBAWARD_REPORT_ID.NEXTVAL,s.SUBAWARD_ID,sr.SUBCONTRACT_CODE,sr.SEQUENCE_NUMBER,sr.REPORT_TYPE_CODE,sr.UPDATE_TIMESTAMP,sr.UPDATE_USER,1,SYS_GUID() FROM OSP$SUBCONTRACT_REPORTS@coeus.kuali sr INNER JOIN SUBAWARD s
ON to_number(sr.SUBCONTRACT_CODE)=s.SUBAWARD_CODE AND sr.SEQUENCE_NUMBER=s.SEQUENCE_NUMBER;
commit;

INSERT INTO SUBAWARD_TEMPLATE_INFO(SUBAWARD_ID,SUBAWARD_CODE,SEQUENCE_NUMBER,SOW_OR_SUB_PROPOSAL_BUDGET,SUB_PROPOSAL_DATE,INVOICE_OR_PAYMENT_CONTACT,FINAL_STMT_OF_COSTS_CONTACT,CHANGE_REQUESTS_CONTACT,TERMINATION_CONTACT,NO_COST_EXTENSION_CONTACT,PERF_SITE_DIFF_FROM_ORG_ADDR,PERF_SITE_SAME_AS_SUB_PI_ADDR,SUB_REGISTERED_IN_CCR,SUB_EXEMPT_FROM_REPORTING_COMP,PARENT_DUNS_NUMBER,PARENT_CONGRESSIONAL_DISTRICT,EXEMPT_FROM_RPRTG_EXEC_COMP,COPYRIGHT_TYPE,AUTOMATIC_CARRY_FORWARD,CARRY_FORWARD_REQUESTS_SENT_TO,TREATMENT_PRGM_INCOME_ADDITIVE,APPLICABLE_PROGRAM_REGULATIONS,APPLICABLE_PROGRAM_REGS_DATE,UPDATE_TIMESTAMP,UPDATE_USER)
SELECT s.SUBAWARD_ID,st.SUBCONTRACT_CODE,st.SEQUENCE_NUMBER,st.SOW_OR_SUB_PROPOSAL_BUDGET,st.SUB_PROPOSAL_DATE,st.INVOICE_OR_PAYMENT_CONTACT,st.FINAL_STMT_OF_COSTS_CONTACT,st.CHANGE_REQUESTS_CONTACT,st.TERMINATION_CONTACT,st.NO_COST_EXTENSION_CONTACT,st.PERF_SITE_DIFF_FROM_ORG_ADDR,st.PERF_SITE_SAME_AS_SUB_PI_ADDR,st.SUB_REGISTERED_IN_CCR,st.SUB_EXEMPT_FROM_REPORTING_COMP,st.PARENT_DUNS_NUMBER,st.PARENT_CONGRESSIONAL_DISTRICT,st.EXEMPT_FROM_RPRTG_EXEC_COMP,st.COPYRIGHT_TYPE,st.AUTOMATIC_CARRY_FORWARD,st.CARRY_FORWARD_REQUESTS_SENT_TO,st.TREATMENT_PRGM_INCOME_ADDITIVE,st.APPLICABLE_PROGRAM_REGULATIONS,st.APPLICABLE_PROGRAM_REGS_DATE,st.UPDATE_TIMESTAMP,st.UPDATE_USER FROM OSP$SUBCONTRACT_TEMPLATE_INFO@coeus.kuali st INNER JOIN SUBAWARD s 
ON to_number(st.SUBCONTRACT_CODE)=s.SUBAWARD_CODE AND st.SEQUENCE_NUMBER=s.SEQUENCE_NUMBER;
commit;
-- update sequence
declare
li_doc number(10);
begin 
  SELECT MAX(to_number(SUBAWARD_ID)) INTO li_doc  FROM SUBAWARD;    
  execute immediate('alter sequence SUBAWARD_ID_S increment by '||li_doc);
  
  SELECT MAX(to_number(SUBAWARD_CODE)) INTO li_doc  FROM SUBAWARD;    
  execute immediate('alter sequence SUBAWARD_CODE_S increment by '||li_doc); 
  
end;
/
select SUBAWARD_ID_S.NEXTVAL from dual
/
alter sequence SUBAWARD_ID_S increment by 1
/
select SUBAWARD_CODE_S.NEXTVAL from dual
/
alter sequence SUBAWARD_CODE_S increment by 1
/
ALTER TABLE	SUBAWARD	LOGGING  ;
ALTER TABLE	SUBAWARD_AMOUNT_INFO	LOGGING  ;
ALTER TABLE SUBAWARD_ATTACHMENTS LOGGING ;
ALTER TABLE	SUBAWARD_AMT_RELEASED	LOGGING  ;
ALTER TABLE	SUBAWARD_APPROVAL_TYPE	LOGGING  ;
ALTER TABLE	SUBAWARD_CLOSEOUT	LOGGING  ;
ALTER TABLE	SUBAWARD_CONTACT	LOGGING  ;
ALTER TABLE	SUBAWARD_CUSTOM_DATA	LOGGING  ;
ALTER TABLE	SUBAWARD_DOCUMENT	LOGGING  ;
ALTER TABLE	SUBAWARD_FUNDING_SOURCE	LOGGING  ;
ALTER TABLE	SUBAWARD_STATUS	LOGGING  ;
ALTER TABLE	KREW_DOC_HDR_CNTNT_T	LOGGING  ;
ALTER TABLE	KREW_DOC_HDR_T	LOGGING;
ALTER TABLE	KRNS_DOC_HDR_T	LOGGING;
/