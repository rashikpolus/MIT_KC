declare
cursor c_update is
select t1.AWARD_NUMBER,t1.CHANGE_AWARD_NUMBER
 from KC_MIG_AWARD_CONV t1
 inner join TEMP_TAB_TO_SYNC_AWARD t2 on t1.AWARD_NUMBER = replace(t2.MIT_AWARD_NUMBER,'-','-00') ;
r_update c_update%rowtype;
begin
open c_update;
loop
fetch c_update into r_update;
exit when c_update%notfound;
update AWARD_UNIT_CONTACTS  set AWARD_NUMBER = r_update.CHANGE_AWARD_NUMBER where AWARD_NUMBER = r_update.AWARD_NUMBER;
update AWARD_TRANSFERRING_SPONSOR  set AWARD_NUMBER = r_update.CHANGE_AWARD_NUMBER where AWARD_NUMBER = r_update.AWARD_NUMBER;
update AWARD_SPONSOR_TERM  set AWARD_NUMBER = r_update.CHANGE_AWARD_NUMBER where AWARD_NUMBER = r_update.AWARD_NUMBER;
update AWARD_SPONSOR_CONTACTS  set AWARD_NUMBER = r_update.CHANGE_AWARD_NUMBER where AWARD_NUMBER = r_update.AWARD_NUMBER;
update AWARD_REPORT_TRACKING  set AWARD_NUMBER = r_update.CHANGE_AWARD_NUMBER where AWARD_NUMBER = r_update.AWARD_NUMBER;
update AWARD_REPORT_TERMS  set AWARD_NUMBER = r_update.CHANGE_AWARD_NUMBER where AWARD_NUMBER = r_update.AWARD_NUMBER; 
update AWARD_PERSONS  set AWARD_NUMBER = r_update.CHANGE_AWARD_NUMBER where AWARD_NUMBER = r_update.AWARD_NUMBER;
update AWARD_IDC_RATE  set AWARD_NUMBER = r_update.CHANGE_AWARD_NUMBER where AWARD_NUMBER = r_update.AWARD_NUMBER;
update AWARD_CUSTOM_DATA  set AWARD_NUMBER = r_update.CHANGE_AWARD_NUMBER where AWARD_NUMBER = r_update.AWARD_NUMBER;
update AWARD_COST_SHARE  set AWARD_NUMBER = r_update.CHANGE_AWARD_NUMBER where AWARD_NUMBER = r_update.AWARD_NUMBER;
update AWARD_COMMENT  set AWARD_NUMBER = r_update.CHANGE_AWARD_NUMBER where AWARD_NUMBER = r_update.AWARD_NUMBER;
update AWARD_CLOSEOUT  set AWARD_NUMBER = r_update.CHANGE_AWARD_NUMBER where AWARD_NUMBER = r_update.AWARD_NUMBER;
update AWARD_ATTACHMENT  set AWARD_NUMBER = r_update.CHANGE_AWARD_NUMBER where AWARD_NUMBER = r_update.AWARD_NUMBER;
update AWARD_APPROVED_SUBAWARDS  set AWARD_NUMBER = r_update.CHANGE_AWARD_NUMBER where AWARD_NUMBER = r_update.AWARD_NUMBER;
update AWARD_APPROVED_FOREIGN_TRAVEL  set AWARD_NUMBER = r_update.CHANGE_AWARD_NUMBER where AWARD_NUMBER = r_update.AWARD_NUMBER;
update AWARD_APPROVED_EQUIPMENT  set AWARD_NUMBER = r_update.CHANGE_AWARD_NUMBER where AWARD_NUMBER = r_update.AWARD_NUMBER;
update AWARD_AMT_FNA_DISTRIBUTION  set AWARD_NUMBER = r_update.CHANGE_AWARD_NUMBER where AWARD_NUMBER = r_update.AWARD_NUMBER;
update AWARD_AMOUNT_TRANSACTION  set AWARD_NUMBER = r_update.CHANGE_AWARD_NUMBER where AWARD_NUMBER = r_update.AWARD_NUMBER;
update AWARD_AMOUNT_INFO  set AWARD_NUMBER = r_update.CHANGE_AWARD_NUMBER where AWARD_NUMBER = r_update.AWARD_NUMBER;
update AWARD_HIERARCHY  set AWARD_NUMBER = r_update.CHANGE_AWARD_NUMBER where AWARD_NUMBER = r_update.AWARD_NUMBER;
update AWARD_HIERARCHY  set PARENT_AWARD_NUMBER = r_update.CHANGE_AWARD_NUMBER where PARENT_AWARD_NUMBER = r_update.AWARD_NUMBER;
update AWARD_HIERARCHY  set ORIGINATING_AWARD_NUMBER = r_update.CHANGE_AWARD_NUMBER where ORIGINATING_AWARD_NUMBER = r_update.AWARD_NUMBER;
update AWARD_HIERARCHY  set ROOT_AWARD_NUMBER = r_update.CHANGE_AWARD_NUMBER where ROOT_AWARD_NUMBER = r_update.AWARD_NUMBER;
update AWARD  set AWARD_NUMBER = r_update.CHANGE_AWARD_NUMBER where AWARD_NUMBER = r_update.AWARD_NUMBER;
update KRNS_DOC_HDR_T  set FDOC_DESC = r_update.CHANGE_AWARD_NUMBER where FDOC_DESC = r_update.AWARD_NUMBER;
update AWARD_PAYMENT_SCHEDULE  set AWARD_NUMBER = r_update.CHANGE_AWARD_NUMBER where AWARD_NUMBER = r_update.AWARD_NUMBER;
update TIME_AND_MONEY_DOCUMENT  set AWARD_NUMBER = r_update.CHANGE_AWARD_NUMBER where AWARD_NUMBER = r_update.AWARD_NUMBER;
update VERSION_HISTORY  set SEQ_OWNER_VERSION_NAME_VALUE = r_update.CHANGE_AWARD_NUMBER where SEQ_OWNER_VERSION_NAME_VALUE = r_update.AWARD_NUMBER;
update AWARD_NOTEPAD  set AWARD_NUMBER = r_update.CHANGE_AWARD_NUMBER where AWARD_NUMBER = r_update.AWARD_NUMBER;
update EPS_PROPOSAL  set CURRENT_AWARD_NUMBER = r_update.CHANGE_AWARD_NUMBER where CURRENT_AWARD_NUMBER = r_update.AWARD_NUMBER;
update PROPOSAL  set CURRENT_AWARD_NUMBER = r_update.CHANGE_AWARD_NUMBER where CURRENT_AWARD_NUMBER = r_update.AWARD_NUMBER;
update PROTOCOL_FUNDING_SOURCE  set FUNDING_SOURCE = r_update.CHANGE_AWARD_NUMBER where FUNDING_SOURCE = r_update.AWARD_NUMBER;
commit;
end loop;
close c_update;
end;
/ 