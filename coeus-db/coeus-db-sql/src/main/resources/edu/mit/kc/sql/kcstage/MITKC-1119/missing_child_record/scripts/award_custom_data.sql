DECLARE
li_count number(4,0);
ls_award_number VARCHAR2(12);
li_seq number(4,0);
ls_mitaward_number VARCHAR2(12);
ls_coeus_comment_typ	NUMBER(3,0);
li_cust_id VARCHAR2(12);

CURSOR c_awd IS
SELECT t1.AWARD_ID,t1.AWARD_NUMBER,t1.SEQUENCE_NUMBER 
FROM AWARD t1 
INNER JOIN REFRESH_AWARD t2 ON t1.AWARD_NUMBER = replace(t2.MIT_AWARD_NUMBER,'-','-00') AND t1.SEQUENCE_NUMBER = t2.SEQUENCE_NUMBER
ORDER BY t1.AWARD_ID,t1.AWARD_NUMBER,t1.SEQUENCE_NUMBER;
r_awd c_awd%ROWTYPE;

CURSOR c_custom(as_awd varchar2,as_seq number) IS
SELECT MIT_AWARD_NUMBER,SEQUENCE_NUMBER,COLUMN_NAME,COLUMN_VALUE,UPDATE_TIMESTAMP,UPDATE_USER 
FROM OSP$AWARD_CUSTOM_DATA
   WHERE ( OSP$AWARD_CUSTOM_DATA.MIT_AWARD_NUMBER = as_awd ) AND
         ( OSP$AWARD_CUSTOM_DATA.SEQUENCE_NUMBER IN ( SELECT MAX(A.SEQUENCE_NUMBER)
			FROM OSP$AWARD_CUSTOM_DATA A WHERE A.COLUMN_NAME = OSP$AWARD_CUSTOM_DATA. COLUMN_NAME
			AND A.MIT_AWARD_NUMBER = OSP$AWARD_CUSTOM_DATA. MIT_AWARD_NUMBER  AND
			A.SEQUENCE_NUMBER <= as_seq) ) ;
r_custom c_custom%rowtype;

BEGIN

IF c_awd%ISOPEN THEN
CLOSE c_awd;
END IF;
OPEN c_awd;
LOOP
FETCH c_awd INTO r_awd;
EXIT WHEN c_awd% NOTFOUND;

ls_award_number:=replace(r_awd.AWARD_NUMBER,'-00','-');
li_seq:=r_awd.SEQUENCE_NUMBER;

  IF c_custom%ISOPEN THEN
	CLOSE c_custom;
	END IF;
	OPEN c_custom(ls_award_number,li_seq);
	LOOP
	FETCH c_custom INTO r_custom;
	EXIT WHEN c_custom% NOTFOUND;
	
	      SELECT ID INTO li_cust_id FROM CUSTOM_ATTRIBUTE WHERE NAME=r_custom.COLUMN_NAME;
	
	    INSERT INTO AWARD_CUSTOM_DATA(AWARD_CUSTOM_DATA_ID,AWARD_ID,AWARD_NUMBER,SEQUENCE_NUMBER,CUSTOM_ATTRIBUTE_ID,VALUE,UPDATE_TIMESTAMP,UPDATE_USER,VER_NBR,OBJ_ID)
		VALUES(SEQ_AWARD_CUSTOM_DATA_ID.NEXTVAL,r_awd.AWARD_ID,r_awd.AWARD_NUMBER,r_awd.SEQUENCE_NUMBER,li_cust_id,r_custom.COLUMN_VALUE,r_custom.UPDATE_TIMESTAMP,r_custom.UPDATE_USER,1,sys_guid());
		
	END LOOP;
	CLOSE c_custom;
	
END LOOP;
CLOSE c_awd;
END;
/	
	
	    
		
			