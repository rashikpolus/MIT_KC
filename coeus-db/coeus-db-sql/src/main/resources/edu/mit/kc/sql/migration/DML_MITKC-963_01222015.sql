DELETE FROM PROTOCOL_PERSONS WHERE PROTOCOL_PERSON_ROLE_ID='CRC'
/
commit
/
DECLARE
li_ver_nbr NUMBER(8):=1;
li_proto_person_id NUMBER(12,0);
ls_proto_num VARCHAR2(20 BYTE);
li_sequence NUMBER(4,0);
li_seq NUMBER(4,0);
ls_person_id VARCHAR2(40);
li_rolodex_id NUMBER(12,0);
ls_full_name VARCHAR2(90);
li_sequence_num NUMBER(4,0);
li_submission_type NUMBER(3,0);
li_submission_status NUMBER(3,0);
ls_proto VARCHAR2(10);
ls_number VARCHAR2(20):=null;
ls_test_number VARCHAR2(20);
li_flag NUMBER;
li_protocol_id NUMBER(12,0);
li_rolodex_count NUMBER;
ls_protocol_num VARCHAR2(20);
li_seq_num NUMBER(4);
li_mit_seq_num NUMBER(4,0);

CURSOR c_proto is
select PROTOCOL_NUMBER,SEQUENCE_NUMBER FROM PROTOCOL ORDER BY PROTOCOL_NUMBER,SEQUENCE_NUMBER;
r_proto c_proto%ROWTYPE;

CURSOR c_inv(as_protocol_number VARCHAR2,as_sequence NUMBER) IS
SELECT inv.PROTOCOL_NUMBER,inv.SEQUENCE_NUMBER,inv.PERSON_ID,inv.PERSON_NAME,inv.NON_EMPLOYEE_FLAG,inv.CORRESPONDENT_TYPE_CODE,inv.COMMENTS,inv.UPDATE_TIMESTAMP,inv.UPDATE_USER,
p.SSN,p.LAST_NAME,p.FIRST_NAME,p.MIDDLE_NAME,p.PRIOR_NAME,p.USER_NAME,p.EMAIL_ADDRESS,p.DATE_OF_BIRTH,p.AGE,p.AGE_BY_FISCAL_YEAR,p.GENDER,p.RACE,p.EDUCATION_LEVEL,p.DEGREE,p.MAJOR,
p.IS_HANDICAPPED,p.HANDICAP_TYPE,p.IS_VETERAN,p.VETERAN_TYPE,p.VISA_CODE,p.VISA_TYPE,p.VISA_RENEWAL_DATE,p.HAS_VISA,p.OFFICE_LOCATION,p.OFFICE_PHONE,p.SECONDRY_OFFICE_LOCATION,p.SECONDRY_OFFICE_PHONE,
p.SCHOOL,p.YEAR_GRADUATED,p.DIRECTORY_DEPARTMENT,p.SALUTATION,p.COUNTRY_OF_CITIZENSHIP,p.PRIMARY_TITLE,p.DIRECTORY_TITLE,p.HOME_UNIT,p.IS_FACULTY,p.IS_GRADUATE_STUDENT_STAFF,p.IS_RESEARCH_STAFF,p.IS_SERVICE_STAFF,
p.IS_SUPPORT_STAFF,p.IS_OTHER_ACCADEMIC_GROUP,p.IS_MEDICAL_STAFF,p.VACATION_ACCURAL,p.IS_ON_SABBATICAL,p.ID_PROVIDED,p.ID_VERIFIED,p.ADDRESS_LINE_1,p.ADDRESS_LINE_2,p.ADDRESS_LINE_3,p.CITY,p.COUNTY,p.STATE,p.POSTAL_CODE,
p.COUNTRY_CODE,p.FAX_NUMBER,p.PAGER_NUMBER,p.MOBILE_PHONE_NUMBER,p.ERA_COMMONS_USER_NAME FROM OSP$PROTOCOL_CORRESPONDENTS@coeus.kuali inv LEFT JOIN OSP$PERSON@coeus.kuali p ON (inv.PERSON_ID=p.PERSON_ID)
WHERE PROTOCOL_NUMBER=as_protocol_number AND SEQUENCE_NUMBER =(SELECT MAX(Pi.SEQUENCE_NUMBER) FROM OSP$PROTOCOL_CORRESPONDENTS@coeus.kuali pi where pi.PROTOCOL_NUMBER=inv.PROTOCOL_NUMBER and Pi.SEQUENCE_NUMBER<=as_sequence);
r_inv c_inv%rowtype;

BEGIN
IF c_proto%ISOPEN THEN
CLOSE c_proto;
END IF;
OPEN c_proto;
LOOP
FETCH c_proto INTO r_proto;
EXIT WHEN c_proto%NOTFOUND;
ls_protocol_num:=r_proto.PROTOCOL_NUMBER;
li_seq:=r_proto.SEQUENCE_NUMBER;
select FN_GET_SEQ(ls_protocol_num,li_seq) into li_mit_seq_num from dual;


IF c_inv%ISOPEN THEN
CLOSE c_inv;
END IF;
OPEN c_inv(ls_protocol_num,li_mit_seq_num);
LOOP
FETCH c_inv INTO r_inv; 
EXIT WHEN c_inv%NOTFOUND;
ls_proto_num:=r_inv.PROTOCOL_NUMBER;
li_sequence:=r_inv.SEQUENCE_NUMBER;


SELECT SEQ_PROTOCOL_ID.NEXTVAL INTO li_proto_person_id FROM DUAL;
begin
SELECT PROTOCOL_ID INTO li_protocol_id FROM PROTOCOL WHERE PROTOCOL_NUMBER=ls_proto_num AND SEQUENCE_NUMBER=li_seq;
exception
when others then
dbms_output.put_line('Error while fetching PROTOCOL_ID using PROTOCOL_NUMBER:'||ls_proto_num||'and SEQUENCE_NUMBER:'||li_seq||'and error is:'||sqlerrm);
end; 

li_rolodex_id:=null;
ls_person_id:=null;

IF  r_inv.NON_EMPLOYEE_FLAG='Y' THEN
select count(rolodex_id) into li_rolodex_count from ROLODEX where to_char(rolodex_id)=r_inv.PERSON_ID;
if li_rolodex_count>0 then
li_rolodex_id:=r_inv.PERSON_ID;
ls_person_id:=null;
ls_full_name:=r_inv.PERSON_NAME;
else
ls_person_id :=r_inv.PERSON_ID;     
li_rolodex_id:=null; 
ls_full_name:=r_inv.PERSON_NAME;		
end if;
ELSE

ls_full_name:=r_inv.PERSON_NAME;    
ls_person_id:=r_inv.PERSON_ID;       

END IF;   

INSERT INTO PROTOCOL_PERSONS(PROTOCOL_PERSON_ID,PROTOCOL_ID,PROTOCOL_NUMBER,SEQUENCE_NUMBER,PERSON_ID,PERSON_NAME,PROTOCOL_PERSON_ROLE_ID,ROLODEX_ID,AFFILIATION_TYPE_CODE,UPDATE_TIMESTAMP,UPDATE_USER,VER_NBR,OBJ_ID,COMMENTS
,SSN,LAST_NAME,FIRST_NAME,MIDDLE_NAME,FULL_NAME,PRIOR_NAME,USER_NAME,EMAIL_ADDRESS,DATE_OF_BIRTH,AGE,AGE_BY_FISCAL_YEAR,GENDER,RACE,EDUCATION_LEVEL,DEGREE,MAJOR,IS_HANDICAPPED,HANDICAP_TYPE,IS_VETERAN,VETERAN_TYPE,VISA_CODE,VISA_TYPE,VISA_RENEWAL_DATE,HAS_VISA,OFFICE_LOCATION,OFFICE_PHONE,SECONDRY_OFFICE_LOCATION,SECONDRY_OFFICE_PHONE,SCHOOL,YEAR_GRADUATED
,DIRECTORY_DEPARTMENT,SALUTATION,COUNTRY_OF_CITIZENSHIP,PRIMARY_TITLE,DIRECTORY_TITLE,HOME_UNIT,IS_FACULTY,IS_GRADUATE_STUDENT_STAFF,IS_RESEARCH_STAFF,IS_SERVICE_STAFF,IS_SUPPORT_STAFF,IS_OTHER_ACCADEMIC_GROUP,IS_MEDICAL_STAFF,VACATION_ACCURAL,IS_ON_SABBATICAL,ID_PROVIDED,ID_VERIFIED,ADDRESS_LINE_1,ADDRESS_LINE_2,ADDRESS_LINE_3,CITY,COUNTY,STATE,POSTAL_CODE,COUNTRY_CODE,FAX_NUMBER,PAGER_NUMBER,MOBILE_PHONE_NUMBER,ERA_COMMONS_USER_NAME)
VALUES(li_proto_person_id,li_protocol_id,ls_proto_num,li_seq,ls_person_id,r_inv.PERSON_NAME,'CRC',li_rolodex_id,NULL,r_inv.UPDATE_TIMESTAMP,LOWER(r_inv.UPDATE_USER),li_ver_nbr,SYS_GUID(),r_inv.COMMENTS
,r_inv.SSN,r_inv.LAST_NAME,r_inv.FIRST_NAME,r_inv.MIDDLE_NAME,r_inv.PERSON_NAME,r_inv.PRIOR_NAME,r_inv.USER_NAME,r_inv.EMAIL_ADDRESS,r_inv.DATE_OF_BIRTH,r_inv.AGE,r_inv.AGE_BY_FISCAL_YEAR,r_inv.GENDER,r_inv.RACE,r_inv.EDUCATION_LEVEL,r_inv.DEGREE,r_inv.MAJOR,r_inv.IS_HANDICAPPED,r_inv.HANDICAP_TYPE,r_inv.IS_VETERAN,r_inv.VETERAN_TYPE,r_inv.VISA_CODE,r_inv.VISA_TYPE,r_inv.VISA_RENEWAL_DATE,r_inv.HAS_VISA,r_inv.OFFICE_LOCATION,r_inv.OFFICE_PHONE,r_inv.SECONDRY_OFFICE_LOCATION,r_inv.SECONDRY_OFFICE_PHONE,r_inv.SCHOOL,r_inv.YEAR_GRADUATED
,r_inv.DIRECTORY_DEPARTMENT,r_inv.SALUTATION,r_inv.COUNTRY_OF_CITIZENSHIP,r_inv.PRIMARY_TITLE,r_inv.DIRECTORY_TITLE,r_inv.HOME_UNIT,r_inv.IS_FACULTY,r_inv.IS_GRADUATE_STUDENT_STAFF,r_inv.IS_RESEARCH_STAFF,r_inv.IS_SERVICE_STAFF,r_inv.IS_SUPPORT_STAFF,r_inv.IS_OTHER_ACCADEMIC_GROUP,r_inv.IS_MEDICAL_STAFF,r_inv.VACATION_ACCURAL,r_inv.IS_ON_SABBATICAL,r_inv.ID_PROVIDED,r_inv.ID_VERIFIED,r_inv.ADDRESS_LINE_1,r_inv.ADDRESS_LINE_2,r_inv.ADDRESS_LINE_3,r_inv.CITY,r_inv.COUNTY,r_inv.STATE,r_inv.POSTAL_CODE,r_inv.COUNTRY_CODE,r_inv.FAX_NUMBER,r_inv.PAGER_NUMBER,r_inv.MOBILE_PHONE_NUMBER,r_inv.ERA_COMMONS_USER_NAME);


END LOOP;
CLOSE c_inv;
END LOOP;
CLOSE c_proto;
END;
/
commit
/
