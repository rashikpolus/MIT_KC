DROP TABLE V_AWARD_REPORT_TERMS_RCNT
/
DROP TABLE TEMP_AWARD_REPORT_RCNT
/
DROP TABLE TEMP_AWD_REPORT_TERM_RCNT
/
CREATE TABLE V_AWARD_REPORT_TERMS_RCNT 
   (KUALI_AWD VARCHAR2(20 BYTE), 
	KUALI_SEQUENCE_NUMBER NUMBER(4,0), 
	MIT_SEQUENCE_NUMBER NUMBER(4,0), 
	CHANGED CHAR(1 BYTE), 
	REPORT_CLASS_CODE VARCHAR2(40 BYTE), 
	REPORT_CODE VARCHAR2(40 BYTE), 
	FREQUENCY_CODE VARCHAR2(40 BYTE), 
	FREQUENCY_BASE_CODE VARCHAR2(40 BYTE), 
	OSP_DISTRIBUTION_CODE VARCHAR2(40 BYTE), 
	DUE_DATE DATE, 
	CONTACT_TYPE_CODE NUMBER, 
	ROLODEX_ID NUMBER(6,0), 
	NUMBER_OF_COPIES NUMBER(2,0), 
	MIT_AWARD_NUMBER CHAR(10 BYTE), 
	AWARD_ID NUMBER(22,0), 
	SEQUENCE_NUMBER NUMBER(4,0), 
	UPDATE_TIMESTAMP DATE, 
	UPDATE_USER VARCHAR2(8 BYTE))
/
INSERT INTO V_AWARD_REPORT_TERMS_RCNT(KUALI_AWD,KUALI_SEQUENCE_NUMBER,MIT_SEQUENCE_NUMBER,CHANGED,REPORT_CLASS_CODE,REPORT_CODE,FREQUENCY_CODE,FREQUENCY_BASE_CODE,OSP_DISTRIBUTION_CODE,DUE_DATE,CONTACT_TYPE_CODE,ROLODEX_ID,NUMBER_OF_COPIES,MIT_AWARD_NUMBER,AWARD_ID,SEQUENCE_NUMBER,UPDATE_TIMESTAMP,UPDATE_USER)	
select l.kuali_awd,l.kuali_sequence_number,a.sequence_number  Mit_sequence_number,l.changed,
to_char(a.REPORT_CLASS_CODE) REPORT_CLASS_CODE,
to_char(a.REPORT_CODE) REPORT_CODE,
decode(a.FREQUENCY_CODE,-1,null,to_char(a.FREQUENCY_CODE)) FREQUENCY_CODE,
decode(a.FREQUENCY_BASE_CODE,-1,null,to_char(a.FREQUENCY_BASE_CODE))FREQUENCY_BASE_CODE,
decode(a.OSP_DISTRIBUTION_CODE,-1,null,to_char(a.OSP_DISTRIBUTION_CODE)) OSP_DISTRIBUTION_CODE, 
a.DUE_DATE,
to_char(a.CONTACT_TYPE_CODE) CONTACT_TYPE_CODE, 
decode(a.ROLODEX_ID,-1,0,a.ROLODEX_ID) ROLODEX_ID,
a.NUMBER_OF_COPIES,
a.mit_award_number,aw.AWARD_ID,a.sequence_number,a.update_timestamp,a.update_user 
FROM  TEMP_SEQ_LOG l 
Left outer join OSP$AWARD_REPORT_TERMS@coeus.kuali a on l.module_item_key=a.mit_award_number and l.mit_sequence_number=a.sequence_number
inner join AWARD aw on aw.AWARD_NUMBER=l.KUALI_AWD and aw.SEQUENCE_NUMBER=l.KUALI_SEQUENCE_NUMBER where l.MODULE='AWD'
/
CREATE INDEX V_AWARD_REPORT_TERMS_RCNT_I1 ON V_AWARD_REPORT_TERMS_RCNT(KUALI_AWD, KUALI_SEQUENCE_NUMBER, MIT_AWARD_NUMBER)
/
commit
/
CREATE INDEX V_AWARD_REPORT_TERMS_RCNT_I2 ON V_AWARD_REPORT_TERMS_RCNT(MIT_AWARD_NUMBER)
/
commit
/
create table TEMP_AWARD_REPORT_RCNT(
AWARD_ID	NUMBER(22,0),
AWARD_NUMBER	VARCHAR2(12),
SEQUENCE_NUMBER	NUMBER(4,0),
REPORT_CLASS_CODE	VARCHAR2(3),
REPORT_CODE	VARCHAR2(3),
FREQUENCY_CODE	VARCHAR2(3),
FREQUENCY_BASE_CODE	VARCHAR2(3),
OSP_DISTRIBUTION_CODE	VARCHAR2(3),
DUE_DATE	DATE,
CONTACT_TYPE_CODE VARCHAR2(3),
ROLODEX_ID NUMBER(6,0),
NUMBER_OF_COPIES NUMBER(2,0),
VER_NBR	NUMBER(8,0),
UPDATE_TIMESTAMP	DATE,
UPDATE_USER	VARCHAR2(60),
OBJ_ID	VARCHAR2(36)
)
/
COMMIT
/
CREATE TABLE TEMP_AWD_REPORT_TERM_RCNT 
   (KUALI_AWD VARCHAR2(20 BYTE), 
	KUALI_SEQUENCE_NUMBER NUMBER, 
	SEQUENC NUMBER(4,0))
/		
CREATE TABLE TEMP_REP_TERMS_RECNT 
   (CONTACT_ID NUMBER(12,0), 
	AWARD_REP_TERMS_RECNT_ID NUMBER(12,0), 
	AWARD_REPORT_TERMS_ID NUMBER(12,0), 
	CONTACT_TYPE_CODE VARCHAR2(3), 
	ROLODEX_ID NUMBER(6,0), 
	NUMBER_OF_COPIES NUMBER(2,0), 
	VER_NBR NUMBER(8,0), 
	UPDATE_TIMESTAMP DATE, 
	UPDATE_USER VARCHAR2(60) , 
	OBJ_ID VARCHAR2(36))
/
INSERT INTO TEMP_AWD_REPORT_TERM_RCNT(KUALI_AWD,KUALI_SEQUENCE_NUMBER,SEQUENC)
select kuali_awd,(
select max(aw.sequence_number) from V_AWARD_REPORT_TERMS_RCNT aw where aw.kuali_awd= v.kuali_awd
and aw.KUALI_SEQUENCE_NUMBER<=v.KUALI_SEQUENCE_NUMBER and aw.mit_award_number is not null)  as kuali_sequence_number,v.KUALI_SEQUENCE_NUMBER SEQUENC  from V_AWARD_REPORT_TERMS_RCNT v 
where v.mit_award_number is null
/
commit
/ 
INSERT INTO TEMP_AWARD_REPORT_RCNT(AWARD_ID,AWARD_NUMBER,SEQUENCE_NUMBER,REPORT_CLASS_CODE,REPORT_CODE,FREQUENCY_CODE,FREQUENCY_BASE_CODE,OSP_DISTRIBUTION_CODE,DUE_DATE,CONTACT_TYPE_CODE,ROLODEX_ID,NUMBER_OF_COPIES,VER_NBR,UPDATE_TIMESTAMP,UPDATE_USER,OBJ_ID)
SELECT a.AWARD_ID,a.kuali_awd,a.kuali_sequence_number,a.REPORT_CLASS_CODE,a.REPORT_CODE,a.FREQUENCY_CODE,a.FREQUENCY_BASE_CODE,a.OSP_DISTRIBUTION_CODE, a.DUE_DATE,a.CONTACT_TYPE_CODE, a.ROLODEX_ID,a.NUMBER_OF_COPIES,1,a.UPDATE_TIMESTAMP,a.UPDATE_USER,sys_guid()
FROM  V_AWARD_REPORT_TERMS_RCNT a  where  a.mit_award_number IS NOT NULL and a.CONTACT_TYPE_CODE <> -1
/
commit
/
INSERT INTO TEMP_AWARD_REPORT_RCNT(AWARD_ID,AWARD_NUMBER,SEQUENCE_NUMBER,REPORT_CLASS_CODE,REPORT_CODE,FREQUENCY_CODE,FREQUENCY_BASE_CODE,OSP_DISTRIBUTION_CODE,DUE_DATE,CONTACT_TYPE_CODE,ROLODEX_ID,NUMBER_OF_COPIES,VER_NBR,UPDATE_TIMESTAMP,UPDATE_USER,OBJ_ID)
SELECT v1.AWARD_ID,v1.kuali_awd,v2.SEQUENC kuali_sequence_number,v1.REPORT_CLASS_CODE,v1.REPORT_CODE,v1.FREQUENCY_CODE,v1.FREQUENCY_BASE_CODE,v1.OSP_DISTRIBUTION_CODE, v1.DUE_DATE,v1.CONTACT_TYPE_CODE, v1.ROLODEX_ID,v1.NUMBER_OF_COPIES,1,v1.UPDATE_TIMESTAMP,v1.UPDATE_USER,sys_guid()
FROM  V_AWARD_REPORT_TERMS_RCNT  v1 inner join 
TEMP_AWD_REPORT_TERM_RCNT v2 on v1.kuali_awd=v2.kuali_awd and v1.sequence_number=v2.kuali_sequence_number
where v1.changed='N' and v1.CONTACT_TYPE_CODE <> -1
/
commit
/
update AWARD_REPORT_TERMS set FREQUENCY_BASE_CODE = null
where FREQUENCY_BASE_CODE= -1
/
commit
/
INSERT INTO TEMP_REP_TERMS_RECNT(AWARD_REP_TERMS_RECNT_ID,CONTACT_ID,AWARD_REPORT_TERMS_ID,CONTACT_TYPE_CODE,ROLODEX_ID,NUMBER_OF_COPIES,VER_NBR,UPDATE_TIMESTAMP,UPDATE_USER,OBJ_ID) 
SELECT SEQ_AWARD_REP_TERMS_RECNT_ID.NEXTVAL,NULL,Ta.AWARD_REPORT_TERMS_ID,T.CONTACT_TYPE_CODE,T.ROLODEX_ID,T.NUMBER_OF_COPIES,T.VER_NBR,T.UPDATE_TIMESTAMP,T.UPDATE_USER,T.OBJ_ID 
FROM  TEMP_AWARD_REPORT_RCNT T INNER JOIN AWARD_REPORT_TERMS Ta
ON T.AWARD_NUMBER=Ta.AWARD_NUMBER AND T.SEQUENCE_NUMBER=Ta.SEQUENCE_NUMBER AND T.REPORT_CLASS_CODE=Ta.REPORT_CLASS_CODE
AND T.REPORT_CODE=Ta.REPORT_CODE
AND T.FREQUENCY_CODE=Ta.FREQUENCY_CODE
AND nvl(T.FREQUENCY_BASE_CODE,0)=nvl(Ta.FREQUENCY_BASE_CODE,0)
AND T.OSP_DISTRIBUTION_CODE=Ta.OSP_DISTRIBUTION_CODE 
AND extract(year from Ta.UPDATE_TIMESTAMP)<> 2015;
/
commit
/
create index TEMP_REP_TERMS_RECNT_I1 on TEMP_REP_TERMS_RECNT(AWARD_REPORT_TERMS_ID)
/
commit
/
declare
li_count number;
li_num number;
cursor c_rep is
select award_report_terms_id from award_report_terms;
r_rep c_rep%rowtype;

begin
if c_rep%isopen then
close c_rep;
end if;
open c_rep;
loop
fetch c_rep into r_rep;
exit when c_rep%notfound;

select count(award_report_terms_id) into li_count from  AWARD_REP_TERMS_RECNT where award_report_terms_id=r_rep.award_report_terms_id;
select count(award_report_terms_id) into li_num from AWARD_REPORT_TERMS where AWARD_REPORT_TERMS_ID=r_rep.award_report_terms_id;

if li_count=0 and li_num<>0 then

 

   begin
   INSERT INTO AWARD_REP_TERMS_RECNT(AWARD_REP_TERMS_RECNT_ID,CONTACT_ID,AWARD_REPORT_TERMS_ID,CONTACT_TYPE_CODE,ROLODEX_ID,NUMBER_OF_COPIES,VER_NBR,UPDATE_TIMESTAMP,UPDATE_USER,OBJ_ID) 
   SELECT AWARD_REP_TERMS_RECNT_ID,CONTACT_ID,AWARD_REPORT_TERMS_ID,CONTACT_TYPE_CODE,ROLODEX_ID,NUMBER_OF_COPIES,VER_NBR,UPDATE_TIMESTAMP,UPDATE_USER,OBJ_ID 
   FROM  TEMP_REP_TERMS_RECNT 
   WHERE AWARD_REPORT_TERMS_ID=r_rep.award_report_terms_id;
   
   exception
   when others then
   dbms_output.put_line(r_rep.award_report_terms_id);
   end;

end if;
end loop;
close c_rep;
end;
/
commit
/
drop table TEMP_REP_TERMS_RECNT
/
