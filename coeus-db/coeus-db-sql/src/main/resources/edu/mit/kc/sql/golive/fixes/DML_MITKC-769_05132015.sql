CREATE TABLE OSP$AWARD_REP_TERM_MISS_1
   (	"MIT_AWARD_NUMBER" VARCHAR2(12), 
	"SEQUENCE_NUMBER" NUMBER(4,0), 
	"REPORT_CLASS_CODE" NUMBER(3,0) , 
	"REPORT_CODE" NUMBER(3,0), 
	"FREQUENCY_CODE" NUMBER(3,0), 
	"FREQUENCY_BASE_CODE" NUMBER(3,0), 
	"OSP_DISTRIBUTION_CODE" NUMBER(3,0), 
  "DUE_DATE" DATE , 
  "UPDATE_TIMESTAMP" DATE, 
	"UPDATE_USER" VARCHAR2(8 BYTE)
   ); 

 CREATE TABLE OSP$AWARD_REP_TERM_MISS
   ("MIT_AWARD_NUMBER" VARCHAR2(12), 
	"SEQUENCE_NUMBER" NUMBER(4,0), 
	"REPORT_CLASS_CODE" NUMBER(3,0) , 
	"REPORT_CODE" NUMBER(3,0), 
	"FREQUENCY_CODE" NUMBER(3,0), 
	"FREQUENCY_BASE_CODE" NUMBER(3,0), 
	"OSP_DISTRIBUTION_CODE" NUMBER(3,0), 
  "DUE_DATE" DATE , 
  "UPDATE_TIMESTAMP" DATE, 
	"UPDATE_USER" VARCHAR2(8 BYTE)
   ); 
   
  CREATE TABLE OSP$AWARD_REP_TERM_MISS_3 
   (	"MIT_AWARD_NUMBER" VARCHAR2(12), 
	"SEQUENCE_NUMBER" NUMBER(4,0), 
	"REPORT_CLASS_CODE" NUMBER(3,0), 
	"REPORT_CODE" NUMBER(3,0), 
	"FREQUENCY_CODE" NUMBER(3,0), 
	"FREQUENCY_BASE_CODE" NUMBER(3,0), 
	"OSP_DISTRIBUTION_CODE" NUMBER(3,0), 
	"CONTACT_TYPE_CODE" NUMBER(3,0), 
	"ROLODEX_ID" NUMBER(6,0), 
	"DUE_DATE" DATE, 
	"NUMBER_OF_COPIES" NUMBER(2,0), 
	"UPDATE_TIMESTAMP" DATE, 
	"UPDATE_USER" VARCHAR2(8)
   );   

INSERT INTO OSP$AWARD_REP_TERM_MISS_1(MIT_AWARD_NUMBER,SEQUENCE_NUMBER,REPORT_CLASS_CODE,REPORT_CODE,FREQUENCY_CODE,FREQUENCY_BASE_CODE,OSP_DISTRIBUTION_CODE,DUE_DATE,UPDATE_TIMESTAMP,UPDATE_USER)
SELECT replace(MIT_AWARD_NUMBER,'-','-00') MIT_AWARD_NUMBER,SEQUENCE_NUMBER,REPORT_CLASS_CODE,REPORT_CODE,FREQUENCY_CODE,FREQUENCY_BASE_CODE,OSP_DISTRIBUTION_CODE,DUE_DATE,UPDATE_TIMESTAMP,UPDATE_USER FROM OSP$AWARD_REPORT_TERMS@coeus.kuali
/
commit
/
INSERT INTO OSP$AWARD_REP_TERM_MISS_3(MIT_AWARD_NUMBER,SEQUENCE_NUMBER,REPORT_CLASS_CODE,REPORT_CODE,FREQUENCY_CODE,FREQUENCY_BASE_CODE,OSP_DISTRIBUTION_CODE,CONTACT_TYPE_CODE,ROLODEX_ID,NUMBER_OF_COPIES,DUE_DATE,UPDATE_TIMESTAMP,UPDATE_USER)
SELECT replace(MIT_AWARD_NUMBER,'-','-00') MIT_AWARD_NUMBER,SEQUENCE_NUMBER,REPORT_CLASS_CODE,REPORT_CODE,FREQUENCY_CODE,FREQUENCY_BASE_CODE,OSP_DISTRIBUTION_CODE,CONTACT_TYPE_CODE,ROLODEX_ID,NUMBER_OF_COPIES,DUE_DATE,UPDATE_TIMESTAMP,UPDATE_USER FROM OSP$AWARD_REPORT_TERMS@coeus.kuali
/
commit
/
DELETE FROM OSP$AWARD_REP_TERM_MISS_1 a 
WHERE ROWID NOT IN
(SELECT MIN(ROWID) FROM OSP$AWARD_REP_TERM_MISS_1 b
WHERE a.MIT_AWARD_NUMBER=b.MIT_AWARD_NUMBER
AND a.SEQUENCE_NUMBER=b.SEQUENCE_NUMBER
AND a.REPORT_CLASS_CODE=b.REPORT_CLASS_CODE
AND a.REPORT_CODE = b.REPORT_CODE
AND a.FREQUENCY_CODE=b.FREQUENCY_CODE
AND a.FREQUENCY_BASE_CODE=b.FREQUENCY_BASE_CODE
AND a.OSP_DISTRIBUTION_CODE=b.OSP_DISTRIBUTION_CODE)
/
commit
/
declare
cursor c_upd is
select CHANGE_AWARD_NUMBER,AWARD_NUMBER from KC_MIG_AWARD_CONV;
r_upd c_upd%rowtype;

begin
if c_upd%isopen then
close c_upd;
end if;
open c_upd;
loop
fetch c_upd into r_upd;
exit when c_upd%notfound;

UPDATE OSP$AWARD_REP_TERM_MISS_1 
SET MIT_AWARD_NUMBER =r_upd.CHANGE_AWARD_NUMBER
WHERE MIT_AWARD_NUMBER = r_upd.AWARD_NUMBER;

UPDATE OSP$AWARD_REP_TERM_MISS_3 
SET MIT_AWARD_NUMBER =r_upd.CHANGE_AWARD_NUMBER
WHERE MIT_AWARD_NUMBER = r_upd.AWARD_NUMBER;

end loop;
close c_upd;
end;
/
commit
/
ALTER TABLE AWARD_REPORT_TERMS DISABLE CONSTRAINT FK3_AWARD_REPORT_TERMS
/
UPDATE AWARD_REPORT_TERMS SET OSP_DISTRIBUTION_CODE = -1
WHERE OSP_DISTRIBUTION_CODE IS NULL
/
commit
/
UPDATE AWARD_REPORT_TERMS SET FREQUENCY_CODE = -1
WHERE FREQUENCY_CODE IS NULL
/
commit
/
UPDATE AWARD_REPORT_TERMS SET FREQUENCY_BASE_CODE = -1
WHERE FREQUENCY_BASE_CODE IS NULL
/
commit
/
INSERT INTO OSP$AWARD_REP_TERM_MISS(MIT_AWARD_NUMBER,SEQUENCE_NUMBER,REPORT_CLASS_CODE,REPORT_CODE,FREQUENCY_CODE,FREQUENCY_BASE_CODE,OSP_DISTRIBUTION_CODE,DUE_DATE,UPDATE_TIMESTAMP,UPDATE_USER)
SELECT a.MIT_AWARD_NUMBER,a.SEQUENCE_NUMBER,a.REPORT_CLASS_CODE,a.REPORT_CODE,a.FREQUENCY_CODE,a.FREQUENCY_BASE_CODE,a.OSP_DISTRIBUTION_CODE,a.DUE_DATE,a.UPDATE_TIMESTAMP,a.UPDATE_USER 
FROM OSP$AWARD_REP_TERM_MISS_1 a LEFT OUTER JOIN AWARD_REPORT_TERMS b
ON a.MIT_AWARD_NUMBER=b.AWARD_NUMBER
AND a.SEQUENCE_NUMBER=b.SEQUENCE_NUMBER
AND a.REPORT_CLASS_CODE=b.REPORT_CLASS_CODE
AND a.REPORT_CODE = b.REPORT_CODE
AND a.FREQUENCY_CODE=b.FREQUENCY_CODE
AND a.FREQUENCY_BASE_CODE=b.FREQUENCY_BASE_CODE
AND a.OSP_DISTRIBUTION_CODE=b.OSP_DISTRIBUTION_CODE
where b.AWARD_NUMBER is null
/
commit
/
DECLARE
ls_award_number varchar2(12);
li_seq number(4,0);
li_award_reports number(12);
li_count number;
ls_osp_distribution varchar2(3);
ls_frequency_base varchar2(3);
ls_frequency varchar2(3);
CURSOR c_award IS
SELECT AWARD_ID,AWARD_NUMBER,SEQUENCE_NUMBER FROM AWARD
WHERE AWARD_NUMBER IN(SELECT DISTINCT MIT_AWARD_NUMBER FROM OSP$AWARD_REP_TERM_MISS)
ORDER BY AWARD_ID;
r_award c_award%rowtype;

CURSOR c_report_miss(as_awd varchar2,as_seq number) IS
SELECT a.MIT_AWARD_NUMBER,a.SEQUENCE_NUMBER,to_char(a.REPORT_CLASS_CODE) REPORT_CLASS_CODE,to_char(a.REPORT_CODE) REPORT_CODE,a.FREQUENCY_CODE,a.FREQUENCY_BASE_CODE,OSP_DISTRIBUTION_CODE,a.DUE_DATE,a.UPDATE_TIMESTAMP,a.UPDATE_USER 
FROM OSP$AWARD_REP_TERM_MISS a WHERE a.MIT_AWARD_NUMBER = as_awd AND a.SEQUENCE_NUMBER = (SELECT MAX(SEQUENCE_NUMBER) FROM OSP$AWARD_REP_TERM_MISS WHERE MIT_AWARD_NUMBER = as_awd AND SEQUENCE_NUMBER<= as_seq)
ORDER BY a.MIT_AWARD_NUMBER,a.SEQUENCE_NUMBER;
r_report_miss c_report_miss%rowtype;

BEGIN
IF c_award%ISOPEN THEN
CLOSE c_award;
END IF;
OPEN c_award;
LOOP
FETCH c_award INTO r_award;
EXIT WHEN c_award%NOTFOUND;
ls_award_number := r_award.AWARD_NUMBER;
li_seq := r_award.SEQUENCE_NUMBER;

     IF c_report_miss%ISOPEN THEN
     CLOSE c_report_miss;
     END IF;
     OPEN c_report_miss(ls_award_number,li_seq);
     LOOP
     FETCH c_report_miss INTO r_report_miss;
     EXIT WHEN c_report_miss%NOTFOUND;
	 
	 
	 
	        select decode(r_report_miss.OSP_DISTRIBUTION_CODE,-1,null,r_report_miss.OSP_DISTRIBUTION_CODE) into ls_osp_distribution from dual;
			select decode(r_report_miss.FREQUENCY_CODE,-1,null,to_char(r_report_miss.FREQUENCY_CODE)) into ls_frequency from dual;
			select decode(r_report_miss.FREQUENCY_BASE_CODE,-1,null,to_char(r_report_miss.FREQUENCY_BASE_CODE))FREQUENCY_BASE_CODE into ls_frequency_base from dual;
			
	        SELECT COUNT(AWARD_REPORT_TERMS_ID) into li_count FROM AWARD_REPORT_TERMS
			WHERE AWARD_ID = r_award.AWARD_ID
			AND  AWARD_NUMBER = r_award.AWARD_NUMBER
	        AND SEQUENCE_NUMBER = r_award.SEQUENCE_NUMBER
			AND REPORT_CLASS_CODE = r_report_miss.REPORT_CLASS_CODE
			AND REPORT_CODE = r_report_miss.REPORT_CODE
			AND FREQUENCY_CODE = r_report_miss.FREQUENCY_CODE
			AND FREQUENCY_BASE_CODE = r_report_miss.FREQUENCY_BASE_CODE
			AND OSP_DISTRIBUTION_CODE = r_report_miss.OSP_DISTRIBUTION_CODE;
			
	    IF li_count = 0 THEN
		
           SELECT SEQUENCE_AWARD_ID.NEXTVAL INTO  li_award_reports  FROM DUAL;
		   
           INSERT INTO AWARD_REPORT_TERMS(AWARD_REPORT_TERMS_ID,
										  AWARD_ID,
										  AWARD_NUMBER,
										  SEQUENCE_NUMBER,
										  REPORT_CLASS_CODE,
										  REPORT_CODE,
										  FREQUENCY_CODE,
										  FREQUENCY_BASE_CODE,
										  OSP_DISTRIBUTION_CODE,
										  DUE_DATE,
										  VER_NBR,
										  UPDATE_TIMESTAMP,
										  UPDATE_USER,
										  OBJ_ID)
									VALUES(li_award_reports,
									       r_award.AWARD_ID,
										   r_award.AWARD_NUMBER,
                                           r_award.SEQUENCE_NUMBER,
                                           r_report_miss.REPORT_CLASS_CODE,
										   r_report_miss.REPORT_CODE,
										   ls_frequency,
										   ls_frequency_base,
										   ls_osp_distribution,
										   r_report_miss.DUE_DATE,
										   1,
										   r_report_miss.UPDATE_TIMESTAMP,
										   r_report_miss.UPDATE_USER,
										   sys_guid());
										   
		   INSERT INTO AWARD_REP_TERMS_RECNT(AWARD_REP_TERMS_RECNT_ID,
											 CONTACT_ID,
											 AWARD_REPORT_TERMS_ID,
											 CONTACT_TYPE_CODE,
											 ROLODEX_ID,
											 NUMBER_OF_COPIES,
											 VER_NBR,
											 UPDATE_TIMESTAMP,
											 UPDATE_USER,
											 OBJ_ID)
                                      SELECT SEQ_AWARD_REP_TERMS_RECNT_ID.NEXTVAL,
									         NULL,
											 li_award_reports,
											 CONTACT_TYPE_CODE,
											 ROLODEX_ID,
											 NUMBER_OF_COPIES,
											 1,
										     UPDATE_TIMESTAMP,
										     UPDATE_USER,
										     sys_guid()
										FROM OSP$AWARD_REP_TERM_MISS_3
										WHERE MIT_AWARD_NUMBER=r_report_miss.MIT_AWARD_NUMBER
                                        AND SEQUENCE_NUMBER=r_report_miss.SEQUENCE_NUMBER
										AND REPORT_CLASS_CODE=r_report_miss.REPORT_CLASS_CODE
										AND REPORT_CODE = r_report_miss.REPORT_CODE
										AND FREQUENCY_CODE=r_report_miss.FREQUENCY_CODE
										AND FREQUENCY_BASE_CODE=r_report_miss.FREQUENCY_BASE_CODE
										AND OSP_DISTRIBUTION_CODE=r_report_miss.OSP_DISTRIBUTION_CODE
										AND DUE_DATE = r_report_miss.DUE_DATE;
										
		END IF;								
										
	 END LOOP;
	 CLOSE c_report_miss;
	 
END LOOP;
CLOSE c_award;	
END; 
/
commit
/
UPDATE AWARD_REPORT_TERMS SET OSP_DISTRIBUTION_CODE = null
WHERE OSP_DISTRIBUTION_CODE =-1
/
commit
/
UPDATE AWARD_REPORT_TERMS SET FREQUENCY_CODE = null
WHERE FREQUENCY_CODE =-1
/
commit
/
UPDATE AWARD_REPORT_TERMS SET FREQUENCY_BASE_CODE = null
WHERE FREQUENCY_BASE_CODE =-1
/
commit
/
update award_report_terms
set due_date = null
where due_date = to_date('01-JAN-1900')
/
commit
/
ALTER TABLE AWARD_REPORT_TERMS ENABLE CONSTRAINT FK3_AWARD_REPORT_TERMS
/	 
DROP TABLE OSP$AWARD_REP_TERM_MISS
/
DROP TABLE OSP$AWARD_REP_TERM_MISS_1
/
DROP TABLE OSP$AWARD_REP_TERM_MISS_3
/											 