--create table OSP$AWARD as select * from OSP$AWARD@coeus.kuali;
declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$AWARD';
if li_count>0 then
execute immediate('drop table OSP$AWARD');
end if;
end;
/
CREATE TABLE "OSP$AWARD" 
(	"MIT_AWARD_NUMBER" CHAR(10 BYTE) NOT NULL ENABLE, 
"SEQUENCE_NUMBER" NUMBER(4,0) NOT NULL ENABLE, 
"MODIFICATION_NUMBER" VARCHAR2(50 BYTE), 
"SPONSOR_AWARD_NUMBER" VARCHAR2(70 BYTE), 
"STATUS_CODE" NUMBER(3,0) NOT NULL ENABLE, 
"TEMPLATE_CODE" NUMBER(5,0), 
"AWARD_EXECUTION_DATE" DATE, 
"AWARD_EFFECTIVE_DATE" DATE, 
"BEGIN_DATE" DATE, 
"SPONSOR_CODE" CHAR(6 BYTE) NOT NULL ENABLE, 
"ACCOUNT_NUMBER" VARCHAR2(100 BYTE), 
"APPRVD_EQUIPMENT_INDICATOR" CHAR(2 BYTE) NOT NULL ENABLE, 
"APPRVD_FOREIGN_TRIP_INDICATOR" CHAR(2 BYTE) NOT NULL ENABLE, 
"APPRVD_SUBCONTRACT_INDICATOR" CHAR(2 BYTE) NOT NULL ENABLE, 
"PAYMENT_SCHEDULE_INDICATOR" CHAR(2 BYTE) NOT NULL ENABLE, 
"IDC_INDICATOR" CHAR(2 BYTE) NOT NULL ENABLE, 
"TRANSFER_SPONSOR_INDICATOR" CHAR(2 BYTE) NOT NULL ENABLE, 
"COST_SHARING_INDICATOR" CHAR(2 BYTE) NOT NULL ENABLE, 
"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE, 
"SPECIAL_REVIEW_INDICATOR" CHAR(2 BYTE) NOT NULL ENABLE, 
"SCIENCE_CODE_INDICATOR" CHAR(2 BYTE) NOT NULL ENABLE, 
"NSF_CODE" VARCHAR2(15 BYTE), 
"KEY_PERSON_INDICATOR" CHAR(2 BYTE) DEFAULT 'N0' NOT NULL ENABLE
)
/
commit
/
insert into OSP$AWARD(MIT_AWARD_NUMBER,SEQUENCE_NUMBER,MODIFICATION_NUMBER,SPONSOR_AWARD_NUMBER,STATUS_CODE,TEMPLATE_CODE,AWARD_EXECUTION_DATE,AWARD_EFFECTIVE_DATE,
BEGIN_DATE,SPONSOR_CODE,ACCOUNT_NUMBER,APPRVD_EQUIPMENT_INDICATOR,APPRVD_FOREIGN_TRIP_INDICATOR,APPRVD_SUBCONTRACT_INDICATOR,PAYMENT_SCHEDULE_INDICATOR,IDC_INDICATOR,
TRANSFER_SPONSOR_INDICATOR,COST_SHARING_INDICATOR,UPDATE_TIMESTAMP,UPDATE_USER,SPECIAL_REVIEW_INDICATOR,SCIENCE_CODE_INDICATOR,NSF_CODE,KEY_PERSON_INDICATOR)
select MIT_AWARD_NUMBER,SEQUENCE_NUMBER,MODIFICATION_NUMBER,SPONSOR_AWARD_NUMBER,STATUS_CODE,TEMPLATE_CODE,AWARD_EXECUTION_DATE,AWARD_EFFECTIVE_DATE,
BEGIN_DATE,SPONSOR_CODE,ACCOUNT_NUMBER,APPRVD_EQUIPMENT_INDICATOR,APPRVD_FOREIGN_TRIP_INDICATOR,APPRVD_SUBCONTRACT_INDICATOR,PAYMENT_SCHEDULE_INDICATOR,IDC_INDICATOR,
TRANSFER_SPONSOR_INDICATOR,COST_SHARING_INDICATOR,UPDATE_TIMESTAMP,UPDATE_USER,SPECIAL_REVIEW_INDICATOR,SCIENCE_CODE_INDICATOR,NSF_CODE,KEY_PERSON_INDICATOR
from OSP$AWARD@coeus.kuali
/
commit
/
--create table OSP$AWARD_HEADER as select * from OSP$AWARD_HEADER@coeus.kuali;
declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$AWARD_HEADER';
if li_count>0 then
execute immediate('drop table OSP$AWARD_HEADER');
end if;
end;
/
CREATE TABLE "OSP$AWARD_HEADER" 
(	"MIT_AWARD_NUMBER" CHAR(10 BYTE) NOT NULL ENABLE, 
"SEQUENCE_NUMBER" NUMBER(4,0) NOT NULL ENABLE, 
"PROPOSAL_NUMBER" VARCHAR2(8 BYTE), 
"TITLE" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
"AWARD_TYPE_CODE" NUMBER(3,0) NOT NULL ENABLE, 
"SPECIAL_EB_RATE_OFF_CAMPUS" NUMBER(5,2), 
"SPECIAL_EB_RATE_ON_CAMPUS" NUMBER(5,2), 
"PRE_AWARD_AUTHORIZED_AMOUNT" NUMBER(12,2), 
"PRE_AWARD_EFFECTIVE_DATE" DATE, 
"CFDA_NUMBER" CHAR(6 BYTE), 
"DFAFS_NUMBER" VARCHAR2(20 BYTE), 
"SUB_PLAN_FLAG" CHAR(1 BYTE), 
"PROCUREMENT_PRIORITY_CODE" VARCHAR2(6 BYTE), 
"PRIME_SPONSOR_CODE" CHAR(6 BYTE), 
"NON_COMPETING_CONT_PRPSL_DUE" NUMBER(3,0), 
"COMPETING_RENEWAL_PRPSL_DUE" NUMBER(3,0), 
"BASIS_OF_PAYMENT_CODE" NUMBER(3,0) NOT NULL ENABLE, 
"METHOD_OF_PAYMENT_CODE" NUMBER(3,0) NOT NULL ENABLE, 
"PAYMENT_INVOICE_FREQ_CODE" NUMBER(3,0), 
"INVOICE_NUMBER_OF_COPIES" NUMBER(1,0), 
"FINAL_INVOICE_DUE" NUMBER(3,0), 
"ACTIVITY_TYPE_CODE" NUMBER(3,0) NOT NULL ENABLE, 
"ACCOUNT_TYPE_CODE" NUMBER(3,0), 
"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE
)
/
commit
/
insert into OSP$AWARD_HEADER(MIT_AWARD_NUMBER,SEQUENCE_NUMBER,PROPOSAL_NUMBER,TITLE,AWARD_TYPE_CODE,SPECIAL_EB_RATE_OFF_CAMPUS,SPECIAL_EB_RATE_ON_CAMPUS,
PRE_AWARD_AUTHORIZED_AMOUNT,PRE_AWARD_EFFECTIVE_DATE,CFDA_NUMBER,DFAFS_NUMBER,SUB_PLAN_FLAG,PROCUREMENT_PRIORITY_CODE,PRIME_SPONSOR_CODE,NON_COMPETING_CONT_PRPSL_DUE,
COMPETING_RENEWAL_PRPSL_DUE,BASIS_OF_PAYMENT_CODE,METHOD_OF_PAYMENT_CODE,PAYMENT_INVOICE_FREQ_CODE,INVOICE_NUMBER_OF_COPIES,FINAL_INVOICE_DUE,
ACTIVITY_TYPE_CODE,ACCOUNT_TYPE_CODE,UPDATE_TIMESTAMP,UPDATE_USER)
select MIT_AWARD_NUMBER,SEQUENCE_NUMBER,PROPOSAL_NUMBER,TITLE,AWARD_TYPE_CODE,SPECIAL_EB_RATE_OFF_CAMPUS,SPECIAL_EB_RATE_ON_CAMPUS,
PRE_AWARD_AUTHORIZED_AMOUNT,PRE_AWARD_EFFECTIVE_DATE,CFDA_NUMBER,DFAFS_NUMBER,SUB_PLAN_FLAG,PROCUREMENT_PRIORITY_CODE,PRIME_SPONSOR_CODE,NON_COMPETING_CONT_PRPSL_DUE,
COMPETING_RENEWAL_PRPSL_DUE,BASIS_OF_PAYMENT_CODE,METHOD_OF_PAYMENT_CODE,PAYMENT_INVOICE_FREQ_CODE,INVOICE_NUMBER_OF_COPIES,FINAL_INVOICE_DUE,
ACTIVITY_TYPE_CODE,ACCOUNT_TYPE_CODE,UPDATE_TIMESTAMP,UPDATE_USER
from OSP$AWARD_HEADER@coeus.kuali
/
commit
/
--create table OSP$AWARD_AMOUNT_INFO as select * from OSP$AWARD_AMOUNT_INFO@coeus.kuali;
declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$AWARD_AMOUNT_INFO';
if li_count>0 then
execute immediate('drop table OSP$AWARD_AMOUNT_INFO');
end if;
end;
/
CREATE TABLE "OSP$AWARD_AMOUNT_INFO" 
(	"MIT_AWARD_NUMBER" CHAR(10 BYTE) NOT NULL ENABLE, 
"SEQUENCE_NUMBER" NUMBER(4,0) NOT NULL ENABLE, 
"AMOUNT_SEQUENCE_NUMBER" NUMBER(4,0) NOT NULL ENABLE, 
"ANTICIPATED_TOTAL_AMOUNT" NUMBER(12,2), 
"ANT_DISTRIBUTABLE_AMOUNT" NUMBER(12,2), 
"FINAL_EXPIRATION_DATE" DATE, 
"CURRENT_FUND_EFFECTIVE_DATE" DATE, 
"AMOUNT_OBLIGATED_TO_DATE" NUMBER(12,2), 
"OBLI_DISTRIBUTABLE_AMOUNT" NUMBER(12,2), 
"OBLIGATION_EXPIRATION_DATE" DATE, 
"TRANSACTION_ID" VARCHAR2(10 BYTE), 
"ENTRY_TYPE" CHAR(1 BYTE), 
"EOM_PROCESS_FLAG" CHAR(1 BYTE), 
"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE, 
"ANTICIPATED_CHANGE" NUMBER(12,2), 
"OBLIGATED_CHANGE" NUMBER(12,2), 
"OBLIGATED_CHANGE_DIRECT" NUMBER(12,2), 
"OBLIGATED_CHANGE_INDIRECT" NUMBER(12,2), 
"ANTICIPATED_CHANGE_DIRECT" NUMBER(12,2), 
"ANTICIPATED_CHANGE_INDIRECT" NUMBER(12,2), 
"ANTICIPATED_TOTAL_DIRECT" NUMBER(12,2), 
"ANTICIPATED_TOTAL_INDIRECT" NUMBER(12,2), 
"OBLIGATED_TOTAL_DIRECT" NUMBER(12,2), 
"OBLIGATED_TOTAL_INDIRECT" NUMBER(12,2))
/
commit
/
insert into OSP$AWARD_AMOUNT_INFO(MIT_AWARD_NUMBER,SEQUENCE_NUMBER,AMOUNT_SEQUENCE_NUMBER,ANTICIPATED_TOTAL_AMOUNT,ANT_DISTRIBUTABLE_AMOUNT,FINAL_EXPIRATION_DATE,
CURRENT_FUND_EFFECTIVE_DATE,AMOUNT_OBLIGATED_TO_DATE,OBLI_DISTRIBUTABLE_AMOUNT,OBLIGATION_EXPIRATION_DATE,TRANSACTION_ID,ENTRY_TYPE,EOM_PROCESS_FLAG,UPDATE_TIMESTAMP,
UPDATE_USER,ANTICIPATED_CHANGE,OBLIGATED_CHANGE,OBLIGATED_CHANGE_DIRECT,OBLIGATED_CHANGE_INDIRECT,ANTICIPATED_CHANGE_DIRECT,ANTICIPATED_CHANGE_INDIRECT,
ANTICIPATED_TOTAL_DIRECT,ANTICIPATED_TOTAL_INDIRECT,OBLIGATED_TOTAL_DIRECT,OBLIGATED_TOTAL_INDIRECT)
select MIT_AWARD_NUMBER,SEQUENCE_NUMBER,AMOUNT_SEQUENCE_NUMBER,ANTICIPATED_TOTAL_AMOUNT,ANT_DISTRIBUTABLE_AMOUNT,FINAL_EXPIRATION_DATE,
CURRENT_FUND_EFFECTIVE_DATE,AMOUNT_OBLIGATED_TO_DATE,OBLI_DISTRIBUTABLE_AMOUNT,OBLIGATION_EXPIRATION_DATE,TRANSACTION_ID,ENTRY_TYPE,EOM_PROCESS_FLAG,UPDATE_TIMESTAMP,
UPDATE_USER,ANTICIPATED_CHANGE,OBLIGATED_CHANGE,OBLIGATED_CHANGE_DIRECT,OBLIGATED_CHANGE_INDIRECT,ANTICIPATED_CHANGE_DIRECT,ANTICIPATED_CHANGE_INDIRECT,
ANTICIPATED_TOTAL_DIRECT,ANTICIPATED_TOTAL_INDIRECT,OBLIGATED_TOTAL_DIRECT,OBLIGATED_TOTAL_INDIRECT
from OSP$AWARD_AMOUNT_INFO@coeus.kuali
/
commit
/	
--create table OSP$AWARD_AMOUNT_TRANSACTION as select * from OSP$AWARD_AMOUNT_TRANSACTION@coeus.kuali;
declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$AWARD_AMOUNT_TRANSACTION';
if li_count>0 then
execute immediate('drop table OSP$AWARD_AMOUNT_TRANSACTION');
end if;
end;
/
CREATE TABLE "OSP$AWARD_AMOUNT_TRANSACTION" 
(	"MIT_AWARD_NUMBER" CHAR(10 BYTE) NOT NULL ENABLE, 
"TRANSACTION_ID" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
"TRANSACTION_TYPE_CODE" NUMBER(3,0) NOT NULL ENABLE, 
"NOTICE_DATE" DATE, 
"COMMENTS" VARCHAR2(2000 BYTE), 
"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE)
/
commit
/
insert into OSP$AWARD_AMOUNT_TRANSACTION(MIT_AWARD_NUMBER,TRANSACTION_ID,TRANSACTION_TYPE_CODE,NOTICE_DATE,COMMENTS,UPDATE_TIMESTAMP,UPDATE_USER)
select MIT_AWARD_NUMBER,TRANSACTION_ID,TRANSACTION_TYPE_CODE,NOTICE_DATE,COMMENTS,UPDATE_TIMESTAMP,UPDATE_USER from OSP$AWARD_AMOUNT_TRANSACTION@coeus.kuali
/
commit
/
--create table OSP$AWARD_APPROVED_EQUIPMENT as select * from OSP$AWARD_APPROVED_EQUIPMENT@coeus.kuali;
declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$AWARD_APPROVED_EQUIPMENT';
if li_count>0 then
execute immediate('drop table OSP$AWARD_APPROVED_EQUIPMENT');
end if;
end;
/
 CREATE TABLE "OSP$AWARD_APPROVED_EQUIPMENT" 
   ("MIT_AWARD_NUMBER" CHAR(10 BYTE) NOT NULL ENABLE, 
	"SEQUENCE_NUMBER" NUMBER(4,0) NOT NULL ENABLE, 
	"ITEM" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"VENDOR" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"MODEL" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"AMOUNT" NUMBER(12,2), 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE);	
	commit
	/
insert into OSP$AWARD_APPROVED_EQUIPMENT(MIT_AWARD_NUMBER,SEQUENCE_NUMBER,ITEM,VENDOR,MODEL,AMOUNT,UPDATE_TIMESTAMP,UPDATE_USER)
select MIT_AWARD_NUMBER,SEQUENCE_NUMBER,ITEM,VENDOR,MODEL,AMOUNT,UPDATE_TIMESTAMP,UPDATE_USER from OSP$AWARD_APPROVED_EQUIPMENT@coeus.kuali
/
commit
/

--create table OSP$AWARD_APPROVED_SUBCONTRACT as select * from OSP$AWARD_APPROVED_SUBCONTRACT@coeus.kuali;
declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$AWARD_APPROVED_SUBCONTRACT';
if li_count>0 then
execute immediate('drop table OSP$AWARD_APPROVED_SUBCONTRACT');
end if;
end;
/
 CREATE TABLE "OSP$AWARD_APPROVED_SUBCONTRACT" 
   (	"MIT_AWARD_NUMBER" CHAR(10 BYTE) NOT NULL ENABLE, 
	"SEQUENCE_NUMBER" NUMBER(4,0) NOT NULL ENABLE, 
	"SUBCONTRACTOR_NAME" VARCHAR2(60 BYTE) NOT NULL ENABLE, 
	"AMOUNT" NUMBER(12,2), 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE);	
	commit
	/
insert into OSP$AWARD_APPROVED_SUBCONTRACT(MIT_AWARD_NUMBER,SEQUENCE_NUMBER,SUBCONTRACTOR_NAME,AMOUNT,UPDATE_TIMESTAMP,UPDATE_USER)
select MIT_AWARD_NUMBER,SEQUENCE_NUMBER,SUBCONTRACTOR_NAME,AMOUNT,UPDATE_TIMESTAMP,UPDATE_USER from OSP$AWARD_APPROVED_SUBCONTRACT@coeus.kuali
/
commit
/
--create table OSP$AWARD_APPRVD_FOREIGN_TRIP as select * from OSP$AWARD_APPRVD_FOREIGN_TRIP@coeus.kuali;
declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$AWARD_APPRVD_FOREIGN_TRIP';
if li_count>0 then
execute immediate('drop table OSP$AWARD_APPRVD_FOREIGN_TRIP');
end if;
end;
/	
CREATE TABLE "OSP$AWARD_APPRVD_FOREIGN_TRIP" 
   (	"MIT_AWARD_NUMBER" CHAR(10 BYTE) NOT NULL ENABLE, 
	"SEQUENCE_NUMBER" NUMBER(4,0) NOT NULL ENABLE, 
	"PERSON_ID" VARCHAR2(9 BYTE) NOT NULL ENABLE, 
	"PERSON_NAME" VARCHAR2(90 BYTE), 
	"DESTINATION" VARCHAR2(30 BYTE) NOT NULL ENABLE, 
	"DATE_FROM" DATE NOT NULL ENABLE, 
	"DATE_TO" DATE, 
	"AMOUNT" NUMBER(12,2), 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE)
/
commit
/
insert into OSP$AWARD_APPRVD_FOREIGN_TRIP(MIT_AWARD_NUMBER,SEQUENCE_NUMBER,PERSON_ID,DESTINATION,DATE_FROM,PERSON_NAME,DATE_TO,AMOUNT,UPDATE_TIMESTAMP,UPDATE_USER)
select MIT_AWARD_NUMBER,SEQUENCE_NUMBER,PERSON_ID,DESTINATION,DATE_FROM,PERSON_NAME,DATE_TO,AMOUNT,UPDATE_TIMESTAMP,UPDATE_USER from OSP$AWARD_APPRVD_FOREIGN_TRIP@coeus.kuali
/
commit
/	
--create table OSP$AWARD_COST_SHARING as select * from OSP$AWARD_COST_SHARING@coeus.kuali;
declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$AWARD_COST_SHARING';
if li_count>0 then
execute immediate('drop table OSP$AWARD_COST_SHARING');
end if;
end;
/	
CREATE TABLE "OSP$AWARD_COST_SHARING" 
   (	"MIT_AWARD_NUMBER" CHAR(10 BYTE) NOT NULL ENABLE, 
	"SEQUENCE_NUMBER" NUMBER(4,0) NOT NULL ENABLE, 
	"FISCAL_YEAR" CHAR(4 BYTE) NOT NULL ENABLE, 
	"COST_SHARING_PERCENTAGE" NUMBER(5,2), 
	"COST_SHARING_TYPE_CODE" NUMBER(3,0) NOT NULL ENABLE, 
	"SOURCE_ACCOUNT" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"DESTINATION_ACCOUNT" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"AMOUNT" NUMBER(12,2), 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE)
/
commit
/
insert into OSP$AWARD_COST_SHARING(MIT_AWARD_NUMBER,SEQUENCE_NUMBER,FISCAL_YEAR,COST_SHARING_TYPE_CODE,SOURCE_ACCOUNT,DESTINATION_ACCOUNT,COST_SHARING_PERCENTAGE,AMOUNT,UPDATE_TIMESTAMP,UPDATE_USER)
select MIT_AWARD_NUMBER,SEQUENCE_NUMBER,FISCAL_YEAR,COST_SHARING_TYPE_CODE,SOURCE_ACCOUNT,DESTINATION_ACCOUNT,COST_SHARING_PERCENTAGE,AMOUNT,UPDATE_TIMESTAMP,UPDATE_USER from OSP$AWARD_COST_SHARING@coeus.kuali
/
commit
/	
--create table OSP$AWARD_IDC_RATE as select * from OSP$AWARD_IDC_RATE@coeus.kuali;	
declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$AWARD_IDC_RATE';
if li_count>0 then
execute immediate('drop table OSP$AWARD_IDC_RATE');
end if;
end;
/
 CREATE TABLE "OSP$AWARD_IDC_RATE" 
   (	"MIT_AWARD_NUMBER" CHAR(10 BYTE) NOT NULL ENABLE, 
	"SEQUENCE_NUMBER" NUMBER(4,0) NOT NULL ENABLE, 
	"APPLICABLE_IDC_RATE" NUMBER(5,2) NOT NULL ENABLE, 
	"IDC_RATE_TYPE_CODE" NUMBER(3,0) NOT NULL ENABLE, 
	"FISCAL_YEAR" CHAR(4 BYTE) NOT NULL ENABLE, 
	"ON_CAMPUS_FLAG" CHAR(1 BYTE) NOT NULL ENABLE, 
	"UNDERRECOVERY_OF_IDC" NUMBER(12,2), 
	"SOURCE_ACCOUNT" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"DESTINATION_ACCOUNT" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"START_DATE" DATE NOT NULL ENABLE, 
	"END_DATE" DATE, 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE)
/
commit
/
insert into	OSP$AWARD_IDC_RATE(MIT_AWARD_NUMBER,SEQUENCE_NUMBER,APPLICABLE_IDC_RATE,IDC_RATE_TYPE_CODE,FISCAL_YEAR,START_DATE,ON_CAMPUS_FLAG,SOURCE_ACCOUNT,
DESTINATION_ACCOUNT,UNDERRECOVERY_OF_IDC,END_DATE,UPDATE_TIMESTAMP,UPDATE_USER)
select MIT_AWARD_NUMBER,SEQUENCE_NUMBER,APPLICABLE_IDC_RATE,IDC_RATE_TYPE_CODE,FISCAL_YEAR,START_DATE,ON_CAMPUS_FLAG,SOURCE_ACCOUNT,
DESTINATION_ACCOUNT,UNDERRECOVERY_OF_IDC,END_DATE,UPDATE_TIMESTAMP,UPDATE_USER from OSP$AWARD_IDC_RATE@coeus.kuali
/
commit
/
--create table OSP$AWARD_KEY_PERSONS as select * from OSP$AWARD_KEY_PERSONS@coeus.kuali;
declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$AWARD_KEY_PERSONS';
if li_count>0 then
execute immediate('drop table OSP$AWARD_KEY_PERSONS');
end if;
end;
/	
CREATE TABLE "OSP$AWARD_KEY_PERSONS" 
   (	"MIT_AWARD_NUMBER" CHAR(10 BYTE) NOT NULL ENABLE, 
	"SEQUENCE_NUMBER" NUMBER(4,0) NOT NULL ENABLE, 
	"PERSON_ID" VARCHAR2(9 BYTE) NOT NULL ENABLE, 
	"PERSON_NAME" VARCHAR2(90 BYTE) NOT NULL ENABLE, 
	"PROJECT_ROLE" VARCHAR2(60 BYTE) NOT NULL ENABLE, 
	"FACULTY_FLAG" CHAR(1 BYTE), 
	"NON_MIT_PERSON_FLAG" CHAR(1 BYTE) NOT NULL ENABLE, 
	"PERCENTAGE_EFFORT" NUMBER(5,2), 
	"ACADEMIC_YEAR_EFFORT" NUMBER(5,2), 
	"SUMMER_YEAR_EFFORT" NUMBER(5,2), 
	"CALENDAR_YEAR_EFFORT" NUMBER(5,2), 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE)
/
commit
/
insert into OSP$AWARD_KEY_PERSONS(MIT_AWARD_NUMBER,SEQUENCE_NUMBER,PERSON_ID,PERSON_NAME,PROJECT_ROLE,FACULTY_FLAG,NON_MIT_PERSON_FLAG,PERCENTAGE_EFFORT,
ACADEMIC_YEAR_EFFORT,SUMMER_YEAR_EFFORT,CALENDAR_YEAR_EFFORT,UPDATE_TIMESTAMP,UPDATE_USER)
select MIT_AWARD_NUMBER,SEQUENCE_NUMBER,PERSON_ID,PERSON_NAME,PROJECT_ROLE,FACULTY_FLAG,NON_MIT_PERSON_FLAG,PERCENTAGE_EFFORT,
ACADEMIC_YEAR_EFFORT,SUMMER_YEAR_EFFORT,CALENDAR_YEAR_EFFORT,UPDATE_TIMESTAMP,UPDATE_USER from OSP$AWARD_KEY_PERSONS@coeus.kuali
/
commit
/
--create table OSP$AWARD_PAYMENT_SCHEDULE as select * from OSP$AWARD_PAYMENT_SCHEDULE@coeus.kuali;
declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$AWARD_PAYMENT_SCHEDULE';
if li_count>0 then
execute immediate('drop table OSP$AWARD_PAYMENT_SCHEDULE');
end if;
end;
/	
  CREATE TABLE "OSP$AWARD_PAYMENT_SCHEDULE" 
   ("MIT_AWARD_NUMBER" CHAR(10 BYTE) NOT NULL ENABLE, 
	"SEQUENCE_NUMBER" NUMBER(4,0) NOT NULL ENABLE, 
	"DUE_DATE" DATE NOT NULL ENABLE, 
	"AMOUNT" NUMBER(12,2), 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE, 
	"SUBMIT_DATE" DATE, 
	"SUBMITTED_BY" VARCHAR2(9 BYTE), 
	"INVOICE_NUMBER" VARCHAR2(10 BYTE), 
	"STATUS_DESCRIPTION" VARCHAR2(50 BYTE));
	commit
	/
insert into OSP$AWARD_PAYMENT_SCHEDULE(MIT_AWARD_NUMBER,SEQUENCE_NUMBER,DUE_DATE,AMOUNT,UPDATE_TIMESTAMP,UPDATE_USER,SUBMIT_DATE,SUBMITTED_BY,INVOICE_NUMBER,STATUS_DESCRIPTION)	
select MIT_AWARD_NUMBER,SEQUENCE_NUMBER,DUE_DATE,AMOUNT,UPDATE_TIMESTAMP,UPDATE_USER,SUBMIT_DATE,SUBMITTED_BY,INVOICE_NUMBER,STATUS_DESCRIPTION from OSP$AWARD_PAYMENT_SCHEDULE@coeus.kuali
/
commit
/	
--create table OSP$AWARD_SCIENCE_CODE as select * from OSP$AWARD_SCIENCE_CODE@coeus.kuali;
declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$AWARD_SCIENCE_CODE';
if li_count>0 then
execute immediate('drop table OSP$AWARD_SCIENCE_CODE');
end if;
end;
/	
 CREATE TABLE "OSP$AWARD_SCIENCE_CODE" 
   ("MIT_AWARD_NUMBER" CHAR(10 BYTE) NOT NULL ENABLE, 
	"SEQUENCE_NUMBER" NUMBER(4,0) NOT NULL ENABLE, 
	"SCIENCE_CODE" VARCHAR2(15 BYTE) NOT NULL ENABLE, 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE);	
	commit
	/
insert into OSP$AWARD_SCIENCE_CODE(MIT_AWARD_NUMBER,SEQUENCE_NUMBER,SCIENCE_CODE,UPDATE_TIMESTAMP,UPDATE_USER)	
select MIT_AWARD_NUMBER,SEQUENCE_NUMBER,SCIENCE_CODE,UPDATE_TIMESTAMP,UPDATE_USER from OSP$AWARD_SCIENCE_CODE@coeus.kuali
/
commit
/	
--create table OSP$AWARD_TRANSFERRING_SPONSOR as select * from OSP$AWARD_TRANSFERRING_SPONSOR@coeus.kuali;
declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$AWARD_TRANSFERRING_SPONSOR';
if li_count>0 then
execute immediate('drop table OSP$AWARD_TRANSFERRING_SPONSOR');
end if;
end;
/		
 CREATE TABLE "OSP$AWARD_TRANSFERRING_SPONSOR" 
   (	"MIT_AWARD_NUMBER" CHAR(10 BYTE) NOT NULL ENABLE, 
	"SEQUENCE_NUMBER" NUMBER(4,0) NOT NULL ENABLE, 
	"SPONSOR_CODE" CHAR(6 BYTE) NOT NULL ENABLE, 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE)
/
commit
/
insert into OSP$AWARD_TRANSFERRING_SPONSOR(MIT_AWARD_NUMBER,SEQUENCE_NUMBER,SPONSOR_CODE,UPDATE_TIMESTAMP,UPDATE_USER)
select MIT_AWARD_NUMBER,SEQUENCE_NUMBER,SPONSOR_CODE,UPDATE_TIMESTAMP,UPDATE_USER from OSP$AWARD_TRANSFERRING_SPONSOR@coeus.kuali
/
commit
/	
--create table OSP$AWARD_UNIT_CREDIT_SPLIT as select * from OSP$AWARD_UNIT_CREDIT_SPLIT@coeus.kuali;
declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$AWARD_UNIT_CREDIT_SPLIT';
if li_count>0 then
execute immediate('drop table OSP$AWARD_UNIT_CREDIT_SPLIT');
end if;
end;
/	
CREATE TABLE "OSP$AWARD_UNIT_CREDIT_SPLIT" 
   (	"MIT_AWARD_NUMBER" CHAR(10 BYTE) NOT NULL ENABLE, 
	"SEQUENCE_NUMBER" NUMBER(4,0) NOT NULL ENABLE, 
	"PERSON_ID" VARCHAR2(9 BYTE) NOT NULL ENABLE, 
	"UNIT_NUMBER" VARCHAR2(8 BYTE) NOT NULL ENABLE, 
	"INV_CREDIT_TYPE_CODE" NUMBER(3,0) NOT NULL ENABLE, 
	"CREDIT" NUMBER(5,2), 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE)
/
commit
/
insert into OSP$AWARD_UNIT_CREDIT_SPLIT(MIT_AWARD_NUMBER,SEQUENCE_NUMBER,PERSON_ID,UNIT_NUMBER,INV_CREDIT_TYPE_CODE,CREDIT,UPDATE_TIMESTAMP,UPDATE_USER)
select MIT_AWARD_NUMBER,SEQUENCE_NUMBER,PERSON_ID,UNIT_NUMBER,INV_CREDIT_TYPE_CODE,CREDIT,UPDATE_TIMESTAMP,UPDATE_USER from OSP$AWARD_UNIT_CREDIT_SPLIT@coeus.kuali
/
commit
/
--create table OSP$AWARD_FUNDING_PROPOSALS as select * from OSP$AWARD_FUNDING_PROPOSALS@coeus.kuali;
declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$AWARD_FUNDING_PROPOSALS';
if li_count>0 then
execute immediate('drop table OSP$AWARD_FUNDING_PROPOSALS');
end if;
end;
/	
 CREATE TABLE "OSP$AWARD_FUNDING_PROPOSALS" 
   ("MIT_AWARD_NUMBER" CHAR(10 BYTE) NOT NULL ENABLE, 
	"SEQUENCE_NUMBER" NUMBER(4,0) NOT NULL ENABLE, 
	"PROPOSAL_NUMBER" VARCHAR2(8 BYTE) NOT NULL ENABLE, 
	"PROP_SEQUENCE_NUMBER" NUMBER(4,0) NOT NULL ENABLE, 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE);
	commit
	/
	insert into OSP$AWARD_FUNDING_PROPOSALS(MIT_AWARD_NUMBER,SEQUENCE_NUMBER,PROPOSAL_NUMBER,PROP_SEQUENCE_NUMBER,UPDATE_TIMESTAMP,UPDATE_USER)
	select MIT_AWARD_NUMBER,SEQUENCE_NUMBER,PROPOSAL_NUMBER,PROP_SEQUENCE_NUMBER,UPDATE_TIMESTAMP,UPDATE_USER from OSP$AWARD_FUNDING_PROPOSALS@coeus.kuali
	/
	commit
	/
--create table OSP$AWARD_HIERARCHY as select * from OSP$AWARD_HIERARCHY@coeus.kuali;
declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$AWARD_HIERARCHY';
if li_count>0 then
execute immediate('drop table OSP$AWARD_HIERARCHY');
end if;
end;
/		
 CREATE TABLE "OSP$AWARD_HIERARCHY" 
   (	"ROOT_MIT_AWARD_NUMBER" CHAR(10 BYTE) NOT NULL ENABLE, 
	"MIT_AWARD_NUMBER" CHAR(10 BYTE) NOT NULL ENABLE, 
	"PARENT_MIT_AWARD_NUMBER" CHAR(10 BYTE) NOT NULL ENABLE, 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE);
	commit
	/
	insert into OSP$AWARD_HIERARCHY(MIT_AWARD_NUMBER,ROOT_MIT_AWARD_NUMBER,PARENT_MIT_AWARD_NUMBER,UPDATE_TIMESTAMP,UPDATE_USER)
	select MIT_AWARD_NUMBER,ROOT_MIT_AWARD_NUMBER,PARENT_MIT_AWARD_NUMBER,UPDATE_TIMESTAMP,UPDATE_USER from OSP$AWARD_HIERARCHY@coeus.kuali
	/
	commit
	/
--create table OSP$AWARD_PER_CREDIT_SPLIT as select * from OSP$AWARD_PER_CREDIT_SPLIT@coeus.kuali;	
declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$AWARD_PER_CREDIT_SPLIT';
if li_count>0 then
execute immediate('drop table OSP$AWARD_PER_CREDIT_SPLIT');
end if;
end;
/
 CREATE TABLE "OSP$AWARD_PER_CREDIT_SPLIT" 
   (	"MIT_AWARD_NUMBER" CHAR(10 BYTE) NOT NULL ENABLE, 
	"SEQUENCE_NUMBER" NUMBER(4,0) NOT NULL ENABLE, 
	"PERSON_ID" VARCHAR2(9 BYTE) NOT NULL ENABLE, 
	"INV_CREDIT_TYPE_CODE" NUMBER(3,0) NOT NULL ENABLE, 
	"CREDIT" NUMBER(5,2), 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE);
	commit
	/
	insert into OSP$AWARD_PER_CREDIT_SPLIT(MIT_AWARD_NUMBER,SEQUENCE_NUMBER,PERSON_ID,INV_CREDIT_TYPE_CODE,CREDIT,UPDATE_TIMESTAMP,UPDATE_USER)
	select MIT_AWARD_NUMBER,SEQUENCE_NUMBER,PERSON_ID,INV_CREDIT_TYPE_CODE,CREDIT,UPDATE_TIMESTAMP,UPDATE_USER from OSP$AWARD_PER_CREDIT_SPLIT@coeus.kuali
	/
	commit
	/
--create table OSP$AWARD_UNITS as select * from OSP$AWARD_UNITS@coeus.kuali;
declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$AWARD_UNITS';
if li_count>0 then
execute immediate('drop table OSP$AWARD_UNITS');
end if;
end;
/
 CREATE TABLE "OSP$AWARD_UNITS" 
   (	"MIT_AWARD_NUMBER" CHAR(10 BYTE) NOT NULL ENABLE, 
	"SEQUENCE_NUMBER" NUMBER(4,0) NOT NULL ENABLE, 
	"UNIT_NUMBER" VARCHAR2(8 BYTE) NOT NULL ENABLE, 
	"LEAD_UNIT_FLAG" CHAR(1 BYTE) NOT NULL ENABLE, 
	"PERSON_ID" VARCHAR2(9 BYTE) NOT NULL ENABLE, 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE);
	commit
	/
	insert into OSP$AWARD_UNITS(MIT_AWARD_NUMBER,SEQUENCE_NUMBER,UNIT_NUMBER,PERSON_ID,LEAD_UNIT_FLAG,UPDATE_TIMESTAMP,UPDATE_USER)
	select MIT_AWARD_NUMBER,SEQUENCE_NUMBER,UNIT_NUMBER,PERSON_ID,LEAD_UNIT_FLAG,UPDATE_TIMESTAMP,UPDATE_USER from OSP$AWARD_UNITS@coeus.kuali
	/
	commit
	/
--create table OSP$AWARD_INVESTIGATORS as select * from OSP$AWARD_INVESTIGATORS@coeus.kuali;
declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$AWARD_INVESTIGATORS';
if li_count>0 then
execute immediate('drop table OSP$AWARD_INVESTIGATORS');
end if;
end;
/
  CREATE TABLE "OSP$AWARD_INVESTIGATORS" 
   (	"MIT_AWARD_NUMBER" CHAR(10 BYTE) NOT NULL ENABLE, 
	"SEQUENCE_NUMBER" NUMBER(4,0) NOT NULL ENABLE, 
	"PERSON_ID" VARCHAR2(9 BYTE) NOT NULL ENABLE, 
	"PERSON_NAME" VARCHAR2(90 BYTE), 
	"PRINCIPAL_INVESTIGATOR_FLAG" CHAR(1 BYTE) NOT NULL ENABLE, 
	"NON_MIT_PERSON_FLAG" CHAR(1 BYTE) NOT NULL ENABLE, 
	"FACULTY_FLAG" CHAR(1 BYTE), 
	"CONFLICT_OF_INTEREST_FLAG" CHAR(1 BYTE), 
	"PERCENTAGE_EFFORT" NUMBER(5,2), 
	"FEDR_DEBR_FLAG" CHAR(1 BYTE), 
	"FEDR_DELQ_FLAG" CHAR(1 BYTE), 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE, 
	"MULTI_PI_FLAG" VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL ENABLE, 
	"ACADEMIC_YEAR_EFFORT" NUMBER(5,2), 
	"SUMMER_YEAR_EFFORT" NUMBER(5,2), 
	"CALENDAR_YEAR_EFFORT" NUMBER(5,2));
	commit
	/
	insert into OSP$AWARD_INVESTIGATORS(MIT_AWARD_NUMBER,SEQUENCE_NUMBER,PERSON_ID,PERSON_NAME,PRINCIPAL_INVESTIGATOR_FLAG,NON_MIT_PERSON_FLAG,
FACULTY_FLAG,CONFLICT_OF_INTEREST_FLAG,PERCENTAGE_EFFORT,FEDR_DEBR_FLAG,FEDR_DELQ_FLAG,UPDATE_TIMESTAMP,UPDATE_USER,MULTI_PI_FLAG,
ACADEMIC_YEAR_EFFORT,SUMMER_YEAR_EFFORT,CALENDAR_YEAR_EFFORT)
	select MIT_AWARD_NUMBER,SEQUENCE_NUMBER,PERSON_ID,PERSON_NAME,PRINCIPAL_INVESTIGATOR_FLAG,NON_MIT_PERSON_FLAG,
FACULTY_FLAG,CONFLICT_OF_INTEREST_FLAG,PERCENTAGE_EFFORT,FEDR_DEBR_FLAG,FEDR_DELQ_FLAG,UPDATE_TIMESTAMP,UPDATE_USER,MULTI_PI_FLAG,
ACADEMIC_YEAR_EFFORT,SUMMER_YEAR_EFFORT,CALENDAR_YEAR_EFFORT
 from OSP$AWARD_INVESTIGATORS@coeus.kuali
 /
 commit
 /
--create table OSP$AWARD_REPORT_TERMS as select * from OSP$AWARD_REPORT_TERMS@coeus.kuali;
declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$AWARD_REPORT_TERMS';
if li_count>0 then
execute immediate('drop table OSP$AWARD_REPORT_TERMS');
end if;
end;
/
CREATE TABLE OSP$AWARD_REPORT_TERMS 
   (MIT_AWARD_NUMBER	CHAR(10 BYTE), 
	  SEQUENCE_NUMBER NUMBER(4,0), 
	  REPORT_CLASS_CODE VARCHAR2(40 BYTE), 
	  REPORT_CODE VARCHAR2(40 BYTE), 
	  FREQUENCY_CODE VARCHAR2(40 BYTE), 
	  FREQUENCY_BASE_CODE VARCHAR2(40 BYTE), 
	  OSP_DISTRIBUTION_CODE VARCHAR2(40 BYTE), 
	  DUE_DATE DATE,
    UPDATE_TIMESTAMP DATE,
    UPDATE_USER VARCHAR2(8 BYTE))
/
INSERT INTO OSP$AWARD_REPORT_TERMS(MIT_AWARD_NUMBER,SEQUENCE_NUMBER,REPORT_CLASS_CODE,REPORT_CODE,FREQUENCY_CODE,FREQUENCY_BASE_CODE,OSP_DISTRIBUTION_CODE,DUE_DATE,UPDATE_TIMESTAMP,UPDATE_USER)
SELECT MIT_AWARD_NUMBER,SEQUENCE_NUMBER,REPORT_CLASS_CODE,REPORT_CODE,FREQUENCY_CODE,FREQUENCY_BASE_CODE,OSP_DISTRIBUTION_CODE,DUE_DATE,UPDATE_TIMESTAMP,UPDATE_USER FROM OSP$AWARD_REPORT_TERMS@coeus.kuali
/
DELETE FROM OSP$AWARD_REPORT_TERMS a 
WHERE ROWID NOT IN
(SELECT MIN(ROWID) FROM OSP$AWARD_REPORT_TERMS b
WHERE a.MIT_AWARD_NUMBER=b.MIT_AWARD_NUMBER
AND a.SEQUENCE_NUMBER=b.SEQUENCE_NUMBER
AND a.REPORT_CLASS_CODE=b.REPORT_CLASS_CODE
AND a.FREQUENCY_CODE=b.FREQUENCY_CODE
AND a.FREQUENCY_BASE_CODE=b.FREQUENCY_BASE_CODE
AND a.OSP_DISTRIBUTION_CODE=b.OSP_DISTRIBUTION_CODE)
/
	commit
	/
--create table OSP$AWARD_CONTACT as select * from OSP$AWARD_CONTACT@coeus.kuali;
declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$AWARD_CONTACT';
if li_count>0 then
execute immediate('drop table OSP$AWARD_CONTACT');
end if;
end;
/
 CREATE TABLE "OSP$AWARD_CONTACT" 
   (	"MIT_AWARD_NUMBER" CHAR(10 BYTE) NOT NULL ENABLE, 
	"SEQUENCE_NUMBER" NUMBER(4,0) NOT NULL ENABLE, 
	"CONTACT_TYPE_CODE" NUMBER(3,0) NOT NULL ENABLE, 
	"ROLODEX_ID" NUMBER(6,0) NOT NULL ENABLE, 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE);
	commit
	/
	insert into OSP$AWARD_CONTACT(MIT_AWARD_NUMBER,SEQUENCE_NUMBER,CONTACT_TYPE_CODE,ROLODEX_ID,UPDATE_TIMESTAMP,UPDATE_USER)
	select MIT_AWARD_NUMBER,SEQUENCE_NUMBER,CONTACT_TYPE_CODE,ROLODEX_ID,UPDATE_TIMESTAMP,UPDATE_USER from OSP$AWARD_CONTACT@coeus.kuali
	/
	commit
	/
	--create table OSP$AWARD_EQUIPMENT_TERMS as select * from OSP$AWARD_EQUIPMENT_TERMS@coeus.kuali;
	declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$AWARD_EQUIPMENT_TERMS';
if li_count>0 then
execute immediate('drop table OSP$AWARD_EQUIPMENT_TERMS');
end if;
end;
/
 CREATE TABLE "OSP$AWARD_EQUIPMENT_TERMS" 
   (	"MIT_AWARD_NUMBER" CHAR(10 BYTE) NOT NULL ENABLE, 
	"SEQUENCE_NUMBER" NUMBER(4,0) NOT NULL ENABLE, 
	"EQUIPMENT_APPROVAL_CODE" NUMBER(3,0) NOT NULL ENABLE, 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE);
	commit
	/
	insert into OSP$AWARD_EQUIPMENT_TERMS(MIT_AWARD_NUMBER,SEQUENCE_NUMBER,EQUIPMENT_APPROVAL_CODE,UPDATE_TIMESTAMP,UPDATE_USER)
	select MIT_AWARD_NUMBER,SEQUENCE_NUMBER,EQUIPMENT_APPROVAL_CODE,UPDATE_TIMESTAMP,UPDATE_USER from OSP$AWARD_EQUIPMENT_TERMS@coeus.kuali
	/
	commit
	/
--create table OSP$AWARD_INVENTION_TERMS as select * from OSP$AWARD_INVENTION_TERMS@coeus.kuali;
	declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$AWARD_INVENTION_TERMS';
if li_count>0 then
execute immediate('drop table OSP$AWARD_INVENTION_TERMS');
end if;
end;
/
 CREATE TABLE "OSP$AWARD_INVENTION_TERMS" 
   (	"MIT_AWARD_NUMBER" CHAR(10 BYTE) NOT NULL ENABLE, 
	"SEQUENCE_NUMBER" NUMBER(4,0) NOT NULL ENABLE, 
	"INVENTION_CODE" NUMBER(3,0) NOT NULL ENABLE, 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE);
	commit
	/
	insert into OSP$AWARD_INVENTION_TERMS(MIT_AWARD_NUMBER,SEQUENCE_NUMBER,INVENTION_CODE,UPDATE_TIMESTAMP,UPDATE_USER)
	select MIT_AWARD_NUMBER,SEQUENCE_NUMBER,INVENTION_CODE,UPDATE_TIMESTAMP,UPDATE_USER from OSP$AWARD_INVENTION_TERMS@coeus.kuali
	/
	commit
	/
--create table OSP$AWARD_PRIOR_APPROVAL_TERMS as select * from OSP$AWARD_PRIOR_APPROVAL_TERMS@coeus.kuali;
	declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$AWARD_PRIOR_APPROVAL_TERMS';
if li_count>0 then
execute immediate('drop table OSP$AWARD_PRIOR_APPROVAL_TERMS');
end if;
end;
/
  CREATE TABLE "OSP$AWARD_PRIOR_APPROVAL_TERMS" 
   (	"MIT_AWARD_NUMBER" CHAR(10 BYTE) NOT NULL ENABLE, 
	"SEQUENCE_NUMBER" NUMBER(4,0) NOT NULL ENABLE, 
	"PRIOR_APPROVAL_CODE" NUMBER(3,0) NOT NULL ENABLE, 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE);
	commit
	/
	insert into OSP$AWARD_PRIOR_APPROVAL_TERMS(MIT_AWARD_NUMBER,SEQUENCE_NUMBER,PRIOR_APPROVAL_CODE,UPDATE_TIMESTAMP,UPDATE_USER)
	select MIT_AWARD_NUMBER,SEQUENCE_NUMBER,PRIOR_APPROVAL_CODE,UPDATE_TIMESTAMP,UPDATE_USER from OSP$AWARD_PRIOR_APPROVAL_TERMS@coeus.kuali
	/
	commit
	/
--create table OSP$AWARD_PROPERTY_TERMS as select * from OSP$AWARD_PROPERTY_TERMS@coeus.kuali;
	declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$AWARD_PROPERTY_TERMS';
if li_count>0 then
execute immediate('drop table OSP$AWARD_PROPERTY_TERMS');
end if;
end;
/

  CREATE TABLE "OSP$AWARD_PROPERTY_TERMS" 
   (	"MIT_AWARD_NUMBER" CHAR(10 BYTE) NOT NULL ENABLE, 
	"SEQUENCE_NUMBER" NUMBER(4,0) NOT NULL ENABLE, 
	"PROPERTY_CODE" NUMBER(3,0) NOT NULL ENABLE, 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE);
	commit
	/
	insert into  OSP$AWARD_PROPERTY_TERMS(MIT_AWARD_NUMBER,SEQUENCE_NUMBER,PROPERTY_CODE,UPDATE_TIMESTAMP,UPDATE_USER)
	select MIT_AWARD_NUMBER,SEQUENCE_NUMBER,PROPERTY_CODE,UPDATE_TIMESTAMP,UPDATE_USER from OSP$AWARD_PROPERTY_TERMS@coeus.kuali
	/
	commit
	/
--create table OSP$AWARD_PUBLICATION_TERMS as select * from OSP$AWARD_PUBLICATION_TERMS@coeus.kuali;
	declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$AWARD_PUBLICATION_TERMS';
if li_count>0 then
execute immediate('drop table OSP$AWARD_PUBLICATION_TERMS');
end if;
end;
/	
 CREATE TABLE "OSP$AWARD_PUBLICATION_TERMS" 
   (	"MIT_AWARD_NUMBER" CHAR(10 BYTE) NOT NULL ENABLE, 
	"SEQUENCE_NUMBER" NUMBER(4,0) NOT NULL ENABLE, 
	"PUBLICATION_CODE" NUMBER(3,0) NOT NULL ENABLE, 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE);
	commit
	/
insert into OSP$AWARD_PUBLICATION_TERMS(MIT_AWARD_NUMBER,SEQUENCE_NUMBER,PUBLICATION_CODE,UPDATE_TIMESTAMP,UPDATE_USER)
select MIT_AWARD_NUMBER,SEQUENCE_NUMBER,PUBLICATION_CODE,UPDATE_TIMESTAMP,UPDATE_USER from OSP$AWARD_PUBLICATION_TERMS@coeus.kuali
/
commit
/
--create table OSP$AWARD_DOCUMENT_TERMS as select * from OSP$AWARD_DOCUMENT_TERMS@coeus.kuali;
	declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$AWARD_DOCUMENT_TERMS';
if li_count>0 then
execute immediate('drop table OSP$AWARD_DOCUMENT_TERMS');
end if;
end;
/		
  CREATE TABLE "OSP$AWARD_DOCUMENT_TERMS" 
   (	"MIT_AWARD_NUMBER" CHAR(10 BYTE) NOT NULL ENABLE, 
	"SEQUENCE_NUMBER" NUMBER(4,0) NOT NULL ENABLE, 
	"REFERENCED_DOCUMENT_CODE" NUMBER(3,0) NOT NULL ENABLE, 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE);
	commit
	/
	insert into OSP$AWARD_DOCUMENT_TERMS(MIT_AWARD_NUMBER,SEQUENCE_NUMBER,REFERENCED_DOCUMENT_CODE,UPDATE_TIMESTAMP,UPDATE_USER)
	select MIT_AWARD_NUMBER,SEQUENCE_NUMBER,REFERENCED_DOCUMENT_CODE,UPDATE_TIMESTAMP,UPDATE_USER from OSP$AWARD_DOCUMENT_TERMS@coeus.kuali
	/
	commit
	/
--create table OSP$AWARD_RIGHTS_IN_DATA_TERMS as select * from OSP$AWARD_RIGHTS_IN_DATA_TERMS@coeus.kuali;
	declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$AWARD_RIGHTS_IN_DATA_TERMS';
if li_count>0 then
execute immediate('drop table OSP$AWARD_RIGHTS_IN_DATA_TERMS');
end if;
end;
/
 CREATE TABLE "OSP$AWARD_RIGHTS_IN_DATA_TERMS" 
   (	"MIT_AWARD_NUMBER" CHAR(10 BYTE) NOT NULL ENABLE, 
	"SEQUENCE_NUMBER" NUMBER(4,0) NOT NULL ENABLE, 
	"RIGHTS_IN_DATA_CODE" NUMBER(3,0) NOT NULL ENABLE, 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE);
	commit
	/
	insert into OSP$AWARD_RIGHTS_IN_DATA_TERMS(MIT_AWARD_NUMBER,SEQUENCE_NUMBER,RIGHTS_IN_DATA_CODE,UPDATE_TIMESTAMP,UPDATE_USER)
	select MIT_AWARD_NUMBER,SEQUENCE_NUMBER,RIGHTS_IN_DATA_CODE,UPDATE_TIMESTAMP,UPDATE_USER from OSP$AWARD_RIGHTS_IN_DATA_TERMS@coeus.kuali
	/
	commit
	/
--create table OSP$AWARD_SUBCONTRACT_TERMS as select * from OSP$AWARD_SUBCONTRACT_TERMS@coeus.kuali;
	declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$AWARD_SUBCONTRACT_TERMS';
if li_count>0 then
execute immediate('drop table OSP$AWARD_SUBCONTRACT_TERMS');
end if;
end;
/
 CREATE TABLE "OSP$AWARD_SUBCONTRACT_TERMS" 
   (	"MIT_AWARD_NUMBER" CHAR(10 BYTE) NOT NULL ENABLE, 
	"SEQUENCE_NUMBER" NUMBER(4,0) NOT NULL ENABLE, 
	"SUBCONTRACT_APPROVAL_CODE" NUMBER(3,0) NOT NULL ENABLE, 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE);
	commit
	/
	insert into  OSP$AWARD_SUBCONTRACT_TERMS(MIT_AWARD_NUMBER,SEQUENCE_NUMBER,SUBCONTRACT_APPROVAL_CODE,UPDATE_TIMESTAMP,UPDATE_USER)
	select MIT_AWARD_NUMBER,SEQUENCE_NUMBER,SUBCONTRACT_APPROVAL_CODE,UPDATE_TIMESTAMP,UPDATE_USER from OSP$AWARD_SUBCONTRACT_TERMS@coeus.kuali
	/
	commit
	/
--create table OSP$AWARD_TRAVEL_TERMS as select * from OSP$AWARD_TRAVEL_TERMS@coeus.kuali;
	declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$AWARD_TRAVEL_TERMS';
if li_count>0 then
execute immediate('drop table OSP$AWARD_TRAVEL_TERMS');
end if;
end;
/
  CREATE TABLE "OSP$AWARD_TRAVEL_TERMS" 
   (	"MIT_AWARD_NUMBER" CHAR(10 BYTE) NOT NULL ENABLE, 
	"SEQUENCE_NUMBER" NUMBER(4,0) NOT NULL ENABLE, 
	"TRAVEL_RESTRICTION_CODE" NUMBER(3,0) NOT NULL ENABLE, 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE);
	commit
	/
	insert into OSP$AWARD_TRAVEL_TERMS(MIT_AWARD_NUMBER,SEQUENCE_NUMBER,TRAVEL_RESTRICTION_CODE,UPDATE_TIMESTAMP,UPDATE_USER)
	select MIT_AWARD_NUMBER,SEQUENCE_NUMBER,TRAVEL_RESTRICTION_CODE,UPDATE_TIMESTAMP,UPDATE_USER from OSP$AWARD_TRAVEL_TERMS@coeus.kuali
	/
	commit
	/
--create table OSP$TEMPLATE_CONTACT as select * from OSP$TEMPLATE_CONTACT@coeus.kuali;	
	declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$TEMPLATE_CONTACT';
if li_count>0 then
execute immediate('drop table OSP$TEMPLATE_CONTACT');
end if;
end;
/
 CREATE TABLE "OSP$TEMPLATE_CONTACT" 
   (	"TEMPLATE_CODE" NUMBER(5,0) NOT NULL ENABLE, 
	"CONTACT_TYPE_CODE" NUMBER(3,0) NOT NULL ENABLE, 
	"ROLODEX_ID" NUMBER(6,0) NOT NULL ENABLE, 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE);	
	commit
	/
insert into OSP$TEMPLATE_CONTACT(TEMPLATE_CODE,ROLODEX_ID,CONTACT_TYPE_CODE,UPDATE_TIMESTAMP,UPDATE_USER)
select TEMPLATE_CODE,ROLODEX_ID,CONTACT_TYPE_CODE,UPDATE_TIMESTAMP,UPDATE_USER from OSP$TEMPLATE_CONTACT@coeus.kuali
/
commit
/
--create table OSP$TEMPLATE_REPORT_TERMS as select * from OSP$TEMPLATE_REPORT_TERMS@coeus.kuali;
	declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$TEMPLATE_REPORT_TERMS';
if li_count>0 then
execute immediate('drop table OSP$TEMPLATE_REPORT_TERMS');
end if;
end;
/
  CREATE TABLE "OSP$TEMPLATE_REPORT_TERMS" 
   (	"TEMPLATE_CODE" NUMBER(5,0) NOT NULL ENABLE, 
	"REPORT_CLASS_CODE" NUMBER(3,0) NOT NULL ENABLE, 
	"REPORT_CODE" NUMBER(3,0) NOT NULL ENABLE, 
	"FREQUENCY_CODE" NUMBER(3,0) NOT NULL ENABLE, 
	"FREQUENCY_BASE_CODE" NUMBER(3,0) NOT NULL ENABLE, 
	"OSP_DISTRIBUTION_CODE" NUMBER(3,0) NOT NULL ENABLE, 
	"DUE_DATE" DATE NOT NULL ENABLE, 
	"CONTACT_TYPE_CODE" NUMBER(3,0) NOT NULL ENABLE, 
	"ROLODEX_ID" NUMBER(6,0) NOT NULL ENABLE, 
	"NUMBER_OF_COPIES" NUMBER(2,0), 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE);	
	commit
	/
	insert into OSP$TEMPLATE_REPORT_TERMS(TEMPLATE_CODE,REPORT_CLASS_CODE,REPORT_CODE,FREQUENCY_CODE,FREQUENCY_BASE_CODE,OSP_DISTRIBUTION_CODE,
	DUE_DATE,CONTACT_TYPE_CODE,ROLODEX_ID,NUMBER_OF_COPIES,UPDATE_TIMESTAMP,UPDATE_USER)
	select TEMPLATE_CODE,REPORT_CLASS_CODE,REPORT_CODE,FREQUENCY_CODE,FREQUENCY_BASE_CODE,OSP_DISTRIBUTION_CODE,
	DUE_DATE,CONTACT_TYPE_CODE,ROLODEX_ID,NUMBER_OF_COPIES,UPDATE_TIMESTAMP,UPDATE_USER from OSP$TEMPLATE_REPORT_TERMS@coeus.kuali
	/
	commit
	/
--create table OSP$TEMPLATE_EQUIPMENT_TERMS as select * from OSP$TEMPLATE_EQUIPMENT_TERMS@coeus.kuali;
	declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$TEMPLATE_EQUIPMENT_TERMS';
if li_count>0 then
execute immediate('drop table OSP$TEMPLATE_EQUIPMENT_TERMS');
end if;
end;
/
  CREATE TABLE "OSP$TEMPLATE_EQUIPMENT_TERMS" 
   (	"TEMPLATE_CODE" NUMBER(5,0) NOT NULL ENABLE, 
	"EQUIPMENT_APPROVAL_CODE" NUMBER(3,0) NOT NULL ENABLE, 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE);	
	commit
	/
	insert into OSP$TEMPLATE_EQUIPMENT_TERMS(TEMPLATE_CODE,EQUIPMENT_APPROVAL_CODE,UPDATE_TIMESTAMP,UPDATE_USER)
	select TEMPLATE_CODE,EQUIPMENT_APPROVAL_CODE,UPDATE_TIMESTAMP,UPDATE_USER from OSP$TEMPLATE_EQUIPMENT_TERMS@coeus.kuali
	/
	commit
	/
--create table OSP$TEMPLATE_INVENTION_TERMS as select * from OSP$TEMPLATE_INVENTION_TERMS@coeus.kuali;
	declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$TEMPLATE_INVENTION_TERMS';
if li_count>0 then
execute immediate('drop table OSP$TEMPLATE_INVENTION_TERMS');
end if;
end;
/
  CREATE TABLE "OSP$TEMPLATE_INVENTION_TERMS" 
   (	"TEMPLATE_CODE" NUMBER(5,0) NOT NULL ENABLE, 
	"INVENTION_CODE" NUMBER(3,0) NOT NULL ENABLE, 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE);	
	commit
/
insert into OSP$TEMPLATE_INVENTION_TERMS(TEMPLATE_CODE,INVENTION_CODE,UPDATE_TIMESTAMP,UPDATE_USER)
 select TEMPLATE_CODE,INVENTION_CODE,UPDATE_TIMESTAMP,UPDATE_USER from OSP$TEMPLATE_INVENTION_TERMS@coeus.kuali
 /
 commit
 /
 --create table OSP$TEMPLATE_PRIOR_TERMS as select * from OSP$TEMPLATE_PRIOR_TERMS@coeus.kuali;
 	declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$TEMPLATE_PRIOR_TERMS';
if li_count>0 then
execute immediate('drop table OSP$TEMPLATE_PRIOR_TERMS');
end if;
end;
/
  CREATE TABLE "OSP$TEMPLATE_PRIOR_TERMS" 
   (	"TEMPLATE_CODE" NUMBER(5,0) NOT NULL ENABLE, 
	"PRIOR_APPROVAL_CODE" NUMBER(3,0) NOT NULL ENABLE, 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE);
	commit
	/
	insert into OSP$TEMPLATE_PRIOR_TERMS(TEMPLATE_CODE,PRIOR_APPROVAL_CODE,UPDATE_TIMESTAMP,UPDATE_USER)
	select TEMPLATE_CODE,PRIOR_APPROVAL_CODE,UPDATE_TIMESTAMP,UPDATE_USER from OSP$TEMPLATE_PRIOR_TERMS@coeus.kuali
	/
	commit
	/
--create table OSP$TEMPLATE_PROPERTY_TERMS as select * from OSP$TEMPLATE_PROPERTY_TERMS@coeus.kuali;
 	declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$TEMPLATE_PROPERTY_TERMS';
if li_count>0 then
execute immediate('drop table OSP$TEMPLATE_PROPERTY_TERMS');
end if;
end;
/	
 CREATE TABLE "OSP$TEMPLATE_PROPERTY_TERMS" 
   (	"TEMPLATE_CODE" NUMBER(5,0) NOT NULL ENABLE, 
	"PROPERTY_CODE" NUMBER(3,0) NOT NULL ENABLE, 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE);
	commit
	/
	insert into OSP$TEMPLATE_PROPERTY_TERMS(TEMPLATE_CODE,PROPERTY_CODE,UPDATE_TIMESTAMP,UPDATE_USER)
	select TEMPLATE_CODE,PROPERTY_CODE,UPDATE_TIMESTAMP,UPDATE_USER from OSP$TEMPLATE_PROPERTY_TERMS@coeus.kuali
	/
	commit
	/
--create table OSP$TEMPLATE_PUBLICATION_TERMS as select * from OSP$TEMPLATE_PUBLICATION_TERMS@coeus.kuali;
 	declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$TEMPLATE_PUBLICATION_TERMS';
if li_count>0 then
execute immediate('drop table OSP$TEMPLATE_PUBLICATION_TERMS');
end if;
end;
/
 CREATE TABLE "OSP$TEMPLATE_PUBLICATION_TERMS" 
   (	"TEMPLATE_CODE" NUMBER(5,0) NOT NULL ENABLE, 
	"PUBLICATION_CODE" NUMBER(3,0) NOT NULL ENABLE, 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE);	
	commit
	/
	insert into OSP$TEMPLATE_PUBLICATION_TERMS(TEMPLATE_CODE,PUBLICATION_CODE,UPDATE_TIMESTAMP,UPDATE_USER)
	select TEMPLATE_CODE,PUBLICATION_CODE,UPDATE_TIMESTAMP,UPDATE_USER from OSP$TEMPLATE_PUBLICATION_TERMS@coeus.kuali
  /
  commit
  /
--create table OSP$TEMPLATE_DOCUMENT_TERMS as select * from OSP$TEMPLATE_DOCUMENT_TERMS@coeus.kuali;
	declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$TEMPLATE_DOCUMENT_TERMS';
if li_count>0 then
execute immediate('drop table OSP$TEMPLATE_DOCUMENT_TERMS');
end if;
end;
/

  CREATE TABLE "OSP$TEMPLATE_DOCUMENT_TERMS" 
   (	"TEMPLATE_CODE" NUMBER(5,0) NOT NULL ENABLE, 
	"REFERENCED_DOCUMENT_CODE" NUMBER(3,0) NOT NULL ENABLE, 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE);
	commit
	/
insert into OSP$TEMPLATE_DOCUMENT_TERMS(TEMPLATE_CODE,REFERENCED_DOCUMENT_CODE,UPDATE_TIMESTAMP,UPDATE_USER)
select TEMPLATE_CODE,REFERENCED_DOCUMENT_CODE,UPDATE_TIMESTAMP,UPDATE_USER from OSP$TEMPLATE_DOCUMENT_TERMS@coeus.kuali
/
commit
/
--create table OSP$TEMPLATE_RIGHTS_TERMS as select * from OSP$TEMPLATE_RIGHTS_TERMS@coeus.kuali;
	declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$TEMPLATE_RIGHTS_TERMS';
if li_count>0 then
execute immediate('drop table OSP$TEMPLATE_RIGHTS_TERMS');
end if;
end;
/

  CREATE TABLE "OSP$TEMPLATE_RIGHTS_TERMS" 
   (	"TEMPLATE_CODE" NUMBER(5,0) NOT NULL ENABLE, 
	"RIGHTS_IN_DATA_CODE" NUMBER(3,0) NOT NULL ENABLE, 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE);
	commit
	/
insert into OSP$TEMPLATE_RIGHTS_TERMS(TEMPLATE_CODE,RIGHTS_IN_DATA_CODE,UPDATE_TIMESTAMP,UPDATE_USER)
select TEMPLATE_CODE,RIGHTS_IN_DATA_CODE,UPDATE_TIMESTAMP,UPDATE_USER from OSP$TEMPLATE_RIGHTS_TERMS@coeus.kuali
/
commit
/
--create table OSP$TEMPLATE_SUBCONTRACT_TERMS as select * from OSP$TEMPLATE_SUBCONTRACT_TERMS@coeus.kuali;
	declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$TEMPLATE_SUBCONTRACT_TERMS';
if li_count>0 then
execute immediate('drop table OSP$TEMPLATE_SUBCONTRACT_TERMS');
end if;
end;
/

 CREATE TABLE "OSP$TEMPLATE_SUBCONTRACT_TERMS" 
   (	"TEMPLATE_CODE" NUMBER(5,0) NOT NULL ENABLE, 
	"SUBCONTRACT_APPROVAL_CODE" NUMBER(3,0) NOT NULL ENABLE, 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE);
commit
/
insert into  OSP$TEMPLATE_SUBCONTRACT_TERMS(TEMPLATE_CODE,SUBCONTRACT_APPROVAL_CODE,UPDATE_TIMESTAMP,UPDATE_USER)
select TEMPLATE_CODE,SUBCONTRACT_APPROVAL_CODE,UPDATE_TIMESTAMP,UPDATE_USER from OSP$TEMPLATE_SUBCONTRACT_TERMS@coeus.kuali
/
commit
/
--create table OSP$TEMPLATE_TRAVEL_TERMS as select * from OSP$TEMPLATE_TRAVEL_TERMS@coeus.kuali;
	declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$TEMPLATE_TRAVEL_TERMS';
if li_count>0 then
execute immediate('drop table OSP$TEMPLATE_TRAVEL_TERMS');
end if;
end;
/

 CREATE TABLE "OSP$TEMPLATE_TRAVEL_TERMS" 
   (	"TEMPLATE_CODE" NUMBER(5,0) NOT NULL ENABLE, 
	"TRAVEL_RESTRICTION_CODE" NUMBER(3,0) NOT NULL ENABLE, 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE);
	commit
	/
insert into OSP$TEMPLATE_TRAVEL_TERMS(TEMPLATE_CODE,TRAVEL_RESTRICTION_CODE,UPDATE_TIMESTAMP,UPDATE_USER)
select TEMPLATE_CODE,TRAVEL_RESTRICTION_CODE,UPDATE_TIMESTAMP,UPDATE_USER from OSP$TEMPLATE_TRAVEL_TERMS@coeus.kuali
/
commit
/	
--create table OSP$AWARD_UNIT_ADMINISTRATORS as select * from OSP$AWARD_UNIT_ADMINISTRATORS@coeus.kuali;
	declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$AWARD_UNIT_ADMINISTRATORS';
if li_count>0 then
execute immediate('drop table OSP$AWARD_UNIT_ADMINISTRATORS');
end if;
end;
/

 CREATE TABLE "OSP$AWARD_UNIT_ADMINISTRATORS" 
   (	"MIT_AWARD_NUMBER" CHAR(10 BYTE) NOT NULL ENABLE, 
	"SEQUENCE_NUMBER" NUMBER(4,0) NOT NULL ENABLE, 
	"UNIT_ADMINISTRATOR_TYPE_CODE" NUMBER(3,0) NOT NULL ENABLE, 
	"ADMINISTRATOR" VARCHAR2(9 BYTE) NOT NULL ENABLE, 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE);
	commit
	/
	insert into  OSP$AWARD_UNIT_ADMINISTRATORS(MIT_AWARD_NUMBER,SEQUENCE_NUMBER,UNIT_ADMINISTRATOR_TYPE_CODE,ADMINISTRATOR,UPDATE_TIMESTAMP,UPDATE_USER)
	select MIT_AWARD_NUMBER,SEQUENCE_NUMBER,UNIT_ADMINISTRATOR_TYPE_CODE,ADMINISTRATOR,UPDATE_TIMESTAMP,UPDATE_USER from OSP$AWARD_UNIT_ADMINISTRATORS@coeus.kuali
	/
	commit
	/
--create table OSP$AWARD_CLOSEOUT as select * from OSP$AWARD_CLOSEOUT@coeus.kuali;
	declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$AWARD_CLOSEOUT';
if li_count>0 then
execute immediate('drop table OSP$AWARD_CLOSEOUT');
end if;
end;
/
 CREATE TABLE "OSP$AWARD_CLOSEOUT" 
   (	"MIT_AWARD_NUMBER" CHAR(10 BYTE) NOT NULL ENABLE, 
	"SEQUENCE_NUMBER" NUMBER(4,0) NOT NULL ENABLE, 
	"FINAL_INV_SUBMISSION_DATE" DATE, 
	"FINAL_TECH_SUBMISSION_DATE" DATE, 
	"FINAL_PATENT_SUBMISSION_DATE" DATE, 
	"FINAL_PROP_SUBMISSION_DATE" DATE, 
	"ARCHIVE_LOCATION" VARCHAR2(50 BYTE), 
	"CLOSEOUT_DATE" DATE, 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE);
	commit
	/
insert into OSP$AWARD_CLOSEOUT(MIT_AWARD_NUMBER,SEQUENCE_NUMBER,FINAL_INV_SUBMISSION_DATE,FINAL_TECH_SUBMISSION_DATE,FINAL_PATENT_SUBMISSION_DATE,
FINAL_PROP_SUBMISSION_DATE,ARCHIVE_LOCATION,CLOSEOUT_DATE,UPDATE_TIMESTAMP,UPDATE_USER)
 select MIT_AWARD_NUMBER,SEQUENCE_NUMBER,FINAL_INV_SUBMISSION_DATE,FINAL_TECH_SUBMISSION_DATE,FINAL_PATENT_SUBMISSION_DATE,
FINAL_PROP_SUBMISSION_DATE,ARCHIVE_LOCATION,CLOSEOUT_DATE,UPDATE_TIMESTAMP,UPDATE_USER from OSP$AWARD_CLOSEOUT@coeus.kuali
/
commit
/
--create table osp$award_custom_data as select * from osp$award_custom_data@coeus.kuali;
	declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$AWARD_CUSTOM_DATA';
if li_count>0 then
execute immediate('drop table OSP$AWARD_CUSTOM_DATA');
end if;
end;
/
 CREATE TABLE "OSP$AWARD_CUSTOM_DATA" 
   (	"MIT_AWARD_NUMBER" CHAR(10 BYTE) NOT NULL ENABLE, 
	"SEQUENCE_NUMBER" NUMBER(4,0) NOT NULL ENABLE, 
	"COLUMN_NAME" VARCHAR2(30 BYTE) NOT NULL ENABLE, 
	"COLUMN_VALUE" VARCHAR2(2000 BYTE), 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE);
	commit
	/
	insert into osp$award_custom_data(MIT_AWARD_NUMBER,SEQUENCE_NUMBER,COLUMN_NAME,COLUMN_VALUE,UPDATE_TIMESTAMP,UPDATE_USER) 
	select MIT_AWARD_NUMBER,SEQUENCE_NUMBER,COLUMN_NAME,COLUMN_VALUE,UPDATE_TIMESTAMP,UPDATE_USER from osp$award_custom_data@coeus.kuali
	/
	commit
	/
--CREATE TABLE osp$user AS SELECT * FROM osp$user@coeus.kuali;
	declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$USER';
if li_count>0 then
execute immediate('drop table OSP$USER');
end if;
end;
/
CREATE TABLE "OSP$USER" 
   (	"USER_ID" VARCHAR2(8 BYTE) NOT NULL ENABLE, 
	"USER_NAME" VARCHAR2(90 BYTE), 
	"NON_MIT_PERSON_FLAG" CHAR(1 BYTE), 
	"PERSON_ID" VARCHAR2(9 BYTE), 
	"USER_TYPE" CHAR(1 BYTE), 
	"UNIT_NUMBER" VARCHAR2(8 BYTE), 
	"STATUS" CHAR(1 BYTE), 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE);
commit
/
insert into osp$user(USER_ID,USER_NAME,NON_MIT_PERSON_FLAG,PERSON_ID,USER_TYPE,UNIT_NUMBER,STATUS,UPDATE_TIMESTAMP,UPDATE_USER)
SELECT USER_ID,USER_NAME,NON_MIT_PERSON_FLAG,PERSON_ID,USER_TYPE,UNIT_NUMBER,STATUS,UPDATE_TIMESTAMP,UPDATE_USER FROM osp$user@coeus.kuali
/
commit
/
--CREATE TABLE osp$person AS SELECT * FROM osp$person@coeus.kuali;
	declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$PERSON';
if li_count>0 then
execute immediate('drop table OSP$PERSON');
end if;
end;
/
 CREATE TABLE "OSP$PERSON" 
   (	"PERSON_ID" VARCHAR2(9 BYTE) NOT NULL ENABLE, 
	"SSN" VARCHAR2(9 BYTE), 
	"LAST_NAME" VARCHAR2(30 BYTE), 
	"FIRST_NAME" VARCHAR2(30 BYTE), 
	"MIDDLE_NAME" VARCHAR2(30 BYTE), 
	"FULL_NAME" VARCHAR2(90 BYTE), 
	"PRIOR_NAME" VARCHAR2(30 BYTE), 
	"USER_NAME" VARCHAR2(60 BYTE), 
	"EMAIL_ADDRESS" VARCHAR2(60 BYTE), 
	"DATE_OF_BIRTH" DATE, 
	"AGE" NUMBER(3,0), 
	"AGE_BY_FISCAL_YEAR" NUMBER(3,0), 
	"GENDER" VARCHAR2(30 BYTE), 
	"RACE" VARCHAR2(30 BYTE), 
	"EDUCATION_LEVEL" VARCHAR2(30 BYTE), 
	"DEGREE" VARCHAR2(11 BYTE), 
	"MAJOR" VARCHAR2(30 BYTE), 
	"IS_HANDICAPPED" CHAR(1 BYTE), 
	"HANDICAP_TYPE" VARCHAR2(30 BYTE), 
	"IS_VETERAN" CHAR(1 BYTE), 
	"VETERAN_TYPE" VARCHAR2(30 BYTE), 
	"VISA_CODE" VARCHAR2(20 BYTE), 
	"VISA_TYPE" VARCHAR2(30 BYTE), 
	"VISA_RENEWAL_DATE" DATE, 
	"HAS_VISA" CHAR(1 BYTE), 
	"OFFICE_LOCATION" VARCHAR2(30 BYTE), 
	"OFFICE_PHONE" VARCHAR2(20 BYTE), 
	"SECONDRY_OFFICE_LOCATION" VARCHAR2(30 BYTE), 
	"SECONDRY_OFFICE_PHONE" VARCHAR2(20 BYTE), 
	"SCHOOL" VARCHAR2(50 BYTE), 
	"YEAR_GRADUATED" VARCHAR2(30 BYTE), 
	"DIRECTORY_DEPARTMENT" VARCHAR2(30 BYTE), 
	"SALUTATION" VARCHAR2(30 BYTE), 
	"COUNTRY_OF_CITIZENSHIP" VARCHAR2(30 BYTE), 
	"PRIMARY_TITLE" VARCHAR2(51 BYTE), 
	"DIRECTORY_TITLE" VARCHAR2(50 BYTE), 
	"HOME_UNIT" VARCHAR2(8 BYTE), 
	"IS_FACULTY" CHAR(1 BYTE), 
	"IS_GRADUATE_STUDENT_STAFF" CHAR(1 BYTE), 
	"IS_RESEARCH_STAFF" CHAR(1 BYTE), 
	"IS_SERVICE_STAFF" CHAR(1 BYTE), 
	"IS_SUPPORT_STAFF" CHAR(1 BYTE), 
	"IS_OTHER_ACCADEMIC_GROUP" CHAR(1 BYTE), 
	"IS_MEDICAL_STAFF" CHAR(1 BYTE), 
	"VACATION_ACCURAL" CHAR(1 BYTE), 
	"IS_ON_SABBATICAL" CHAR(1 BYTE), 
	"ID_PROVIDED" VARCHAR2(30 BYTE), 
	"ID_VERIFIED" VARCHAR2(30 BYTE), 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE, 
	"ADDRESS_LINE_1" VARCHAR2(80 BYTE), 
	"ADDRESS_LINE_2" VARCHAR2(80 BYTE), 
	"ADDRESS_LINE_3" VARCHAR2(80 BYTE), 
	"CITY" VARCHAR2(30 BYTE), 
	"COUNTY" VARCHAR2(30 BYTE), 
	"STATE" VARCHAR2(30 BYTE), 
	"POSTAL_CODE" VARCHAR2(15 BYTE), 
	"COUNTRY_CODE" CHAR(3 BYTE), 
	"FAX_NUMBER" VARCHAR2(20 BYTE), 
	"PAGER_NUMBER" VARCHAR2(20 BYTE), 
	"MOBILE_PHONE_NUMBER" VARCHAR2(20 BYTE), 
	"ERA_COMMONS_USER_NAME" VARCHAR2(20 BYTE), 
	"STATUS" VARCHAR2(1 BYTE) NOT NULL ENABLE, 
	"SALARY_ANNIVERSARY_DATE" DATE);
commit
/
insert into osp$person(PERSON_ID,SSN,LAST_NAME,FIRST_NAME,MIDDLE_NAME,FULL_NAME,PRIOR_NAME,USER_NAME,EMAIL_ADDRESS,DATE_OF_BIRTH,AGE,AGE_BY_FISCAL_YEAR,GENDER,
RACE,EDUCATION_LEVEL,DEGREE,MAJOR,IS_HANDICAPPED,HANDICAP_TYPE,IS_VETERAN,VETERAN_TYPE,VISA_CODE,VISA_TYPE,VISA_RENEWAL_DATE,HAS_VISA,OFFICE_LOCATION,
OFFICE_PHONE,SECONDRY_OFFICE_LOCATION,SECONDRY_OFFICE_PHONE,SCHOOL,YEAR_GRADUATED,DIRECTORY_DEPARTMENT,SALUTATION,COUNTRY_OF_CITIZENSHIP,PRIMARY_TITLE,
DIRECTORY_TITLE,HOME_UNIT,IS_FACULTY,IS_GRADUATE_STUDENT_STAFF,IS_RESEARCH_STAFF,IS_SERVICE_STAFF,IS_SUPPORT_STAFF,IS_OTHER_ACCADEMIC_GROUP,IS_MEDICAL_STAFF,
VACATION_ACCURAL,IS_ON_SABBATICAL,ID_PROVIDED,ID_VERIFIED,UPDATE_TIMESTAMP,UPDATE_USER,ADDRESS_LINE_1,ADDRESS_LINE_2,ADDRESS_LINE_3,CITY,COUNTY,STATE,POSTAL_CODE,
COUNTRY_CODE,FAX_NUMBER,PAGER_NUMBER,MOBILE_PHONE_NUMBER,ERA_COMMONS_USER_NAME,STATUS,SALARY_ANNIVERSARY_DATE)
SELECT PERSON_ID,SSN,LAST_NAME,FIRST_NAME,MIDDLE_NAME,FULL_NAME,PRIOR_NAME,USER_NAME,EMAIL_ADDRESS,DATE_OF_BIRTH,AGE,AGE_BY_FISCAL_YEAR,GENDER,
RACE,EDUCATION_LEVEL,DEGREE,MAJOR,IS_HANDICAPPED,HANDICAP_TYPE,IS_VETERAN,VETERAN_TYPE,VISA_CODE,VISA_TYPE,VISA_RENEWAL_DATE,HAS_VISA,OFFICE_LOCATION,
OFFICE_PHONE,SECONDRY_OFFICE_LOCATION,SECONDRY_OFFICE_PHONE,SCHOOL,YEAR_GRADUATED,DIRECTORY_DEPARTMENT,SALUTATION,COUNTRY_OF_CITIZENSHIP,PRIMARY_TITLE,
DIRECTORY_TITLE,HOME_UNIT,IS_FACULTY,IS_GRADUATE_STUDENT_STAFF,IS_RESEARCH_STAFF,IS_SERVICE_STAFF,IS_SUPPORT_STAFF,IS_OTHER_ACCADEMIC_GROUP,IS_MEDICAL_STAFF,
VACATION_ACCURAL,IS_ON_SABBATICAL,ID_PROVIDED,ID_VERIFIED,UPDATE_TIMESTAMP,UPDATE_USER,ADDRESS_LINE_1,ADDRESS_LINE_2,ADDRESS_LINE_3,CITY,COUNTY,STATE,POSTAL_CODE,
COUNTRY_CODE,FAX_NUMBER,PAGER_NUMBER,MOBILE_PHONE_NUMBER,ERA_COMMONS_USER_NAME,STATUS,SALARY_ANNIVERSARY_DATE FROM osp$person@coeus.kuali
/
commit
/
--CREATE TABLE OSP$ROLODEX AS SELECT * FROM OSP$ROLODEX@coeus.kuali;
	declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$ROLODEX';
if li_count>0 then
execute immediate('drop table OSP$ROLODEX');
end if;
end;
/
CREATE TABLE "OSP$ROLODEX" 
   (	"ROLODEX_ID" NUMBER(6,0) NOT NULL ENABLE, 
	"LAST_NAME" VARCHAR2(20 BYTE), 
	"FIRST_NAME" VARCHAR2(20 BYTE), 
	"MIDDLE_NAME" VARCHAR2(20 BYTE), 
	"SUFFIX" VARCHAR2(10 BYTE), 
	"PREFIX" VARCHAR2(10 BYTE), 
	"TITLE" VARCHAR2(35 BYTE), 
	"ORGANIZATION" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"ADDRESS_LINE_1" VARCHAR2(80 BYTE), 
	"ADDRESS_LINE_2" VARCHAR2(80 BYTE), 
	"ADDRESS_LINE_3" VARCHAR2(80 BYTE), 
	"FAX_NUMBER" VARCHAR2(20 BYTE), 
	"EMAIL_ADDRESS" VARCHAR2(60 BYTE), 
	"CITY" VARCHAR2(30 BYTE), 
	"COUNTY" VARCHAR2(30 BYTE), 
	"STATE" VARCHAR2(30 BYTE), 
	"POSTAL_CODE" VARCHAR2(15 BYTE), 
	"COMMENTS" VARCHAR2(300 BYTE), 
	"PHONE_NUMBER" VARCHAR2(20 BYTE), 
	"COUNTRY_CODE" CHAR(3 BYTE), 
	"SPONSOR_CODE" CHAR(6 BYTE), 
	"OWNED_BY_UNIT" VARCHAR2(8 BYTE) NOT NULL ENABLE, 
	"SPONSOR_ADDRESS_FLAG" CHAR(1 BYTE) NOT NULL ENABLE, 
	"DELETE_FLAG" CHAR(1 BYTE), 
	"CREATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE, 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE, 
	"ROLODEX_STATUS" CHAR(1 BYTE));
	commit
	/
	insert into OSP$ROLODEX(ROLODEX_ID,LAST_NAME,FIRST_NAME,MIDDLE_NAME,SUFFIX,PREFIX,TITLE,ORGANIZATION,ADDRESS_LINE_1,ADDRESS_LINE_2,
ADDRESS_LINE_3,FAX_NUMBER,EMAIL_ADDRESS,CITY,COUNTY,STATE,POSTAL_CODE,COMMENTS,PHONE_NUMBER,COUNTRY_CODE,SPONSOR_CODE,OWNED_BY_UNIT,
SPONSOR_ADDRESS_FLAG,DELETE_FLAG,CREATE_USER,UPDATE_TIMESTAMP,UPDATE_USER,ROLODEX_STATUS)
	SELECT ROLODEX_ID,LAST_NAME,FIRST_NAME,MIDDLE_NAME,SUFFIX,PREFIX,TITLE,ORGANIZATION,ADDRESS_LINE_1,ADDRESS_LINE_2,
ADDRESS_LINE_3,FAX_NUMBER,EMAIL_ADDRESS,CITY,COUNTY,STATE,POSTAL_CODE,COMMENTS,PHONE_NUMBER,COUNTRY_CODE,SPONSOR_CODE,OWNED_BY_UNIT,
SPONSOR_ADDRESS_FLAG,DELETE_FLAG,CREATE_USER,UPDATE_TIMESTAMP,UPDATE_USER,ROLODEX_STATUS FROM OSP$ROLODEX@coeus.kuali
	/
	commit
	/
--CREATE TABLE osp$user_roles AS SELECT * FROM osp$user_roles@coeus.kuali;
	declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$USER_ROLES';
if li_count>0 then
execute immediate('drop table OSP$USER_ROLES');
end if;
end;
/
 CREATE TABLE "OSP$USER_ROLES" 
   (	"USER_ID" VARCHAR2(8 BYTE) NOT NULL ENABLE, 
	"ROLE_ID" NUMBER(5,0) NOT NULL ENABLE, 
	"UNIT_NUMBER" VARCHAR2(8 BYTE) NOT NULL ENABLE, 
	"DESCEND_FLAG" CHAR(1 BYTE) NOT NULL ENABLE, 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE);
	commit
	/
	insert into osp$user_roles(ROLE_ID,USER_ID,UNIT_NUMBER,DESCEND_FLAG,UPDATE_TIMESTAMP,UPDATE_USER)
	SELECT ROLE_ID,USER_ID,UNIT_NUMBER,DESCEND_FLAG,UPDATE_TIMESTAMP,UPDATE_USER FROM osp$user_roles@coeus.kuali
	/
	commit
	/
--CREATE TABLE osp$role AS SELECT * FROM osp$role@coeus.kuali;
	declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$ROLE';
if li_count>0 then
execute immediate('drop table OSP$ROLE');
end if;
end;
/
 CREATE TABLE "OSP$ROLE" 
   (	"ROLE_ID" NUMBER(5,0) NOT NULL ENABLE, 
	"DESCRIPTION" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"ROLE_NAME" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"ROLE_TYPE" CHAR(1 BYTE) NOT NULL ENABLE, 
	"OWNED_BY_UNIT" VARCHAR2(8 BYTE) NOT NULL ENABLE, 
	"DESCEND_FLAG" CHAR(1 BYTE) NOT NULL ENABLE, 
	"STATUS_FLAG" CHAR(1 BYTE) NOT NULL ENABLE, 
	"CREATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"CREATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE, 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE);
	commit
	/
	insert into OSP$ROLE(ROLE_ID,DESCRIPTION,ROLE_NAME,ROLE_TYPE,OWNED_BY_UNIT,DESCEND_FLAG,STATUS_FLAG,CREATE_TIMESTAMP,CREATE_USER,UPDATE_TIMESTAMP,UPDATE_USER)
	SELECT ROLE_ID,DESCRIPTION,ROLE_NAME,ROLE_TYPE,OWNED_BY_UNIT,DESCEND_FLAG,STATUS_FLAG,CREATE_TIMESTAMP,CREATE_USER,UPDATE_TIMESTAMP,UPDATE_USER FROM osp$role@coeus.kuali
	/
	commit
	/
--create table OSP$AWARD_AMT_FNA_DISTRIBUTION as select * from  OSP$AWARD_AMT_FNA_DISTRIBUTION@coeus.kuali;
	declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$AWARD_AMT_FNA_DISTRIBUTION';
if li_count>0 then
execute immediate('drop table OSP$AWARD_AMT_FNA_DISTRIBUTION');
end if;
end;
/

  CREATE TABLE "OSP$AWARD_AMT_FNA_DISTRIBUTION" 
   ("MIT_AWARD_NUMBER" CHAR(10 BYTE) NOT NULL ENABLE, 
	"SEQUENCE_NUMBER" NUMBER(4,0) NOT NULL ENABLE, 
	"AMOUNT_SEQUENCE_NUMBER" NUMBER(4,0) NOT NULL ENABLE, 
	"BUDGET_PERIOD" NUMBER(3,0) NOT NULL ENABLE, 
	"START_DATE" DATE NOT NULL ENABLE, 
	"END_DATE" DATE NOT NULL ENABLE, 
	"DIRECT_COST" NUMBER(12,2) NOT NULL ENABLE, 
	"INDIRECT_COST" NUMBER(12,2) NOT NULL ENABLE, 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE
   );
	 commit;	
insert into OSP$AWARD_AMT_FNA_DISTRIBUTION(MIT_AWARD_NUMBER,SEQUENCE_NUMBER,AMOUNT_SEQUENCE_NUMBER,BUDGET_PERIOD,START_DATE,END_DATE,DIRECT_COST,INDIRECT_COST,
UPDATE_TIMESTAMP,UPDATE_USER)
select MIT_AWARD_NUMBER,SEQUENCE_NUMBER,AMOUNT_SEQUENCE_NUMBER,BUDGET_PERIOD,START_DATE,END_DATE,DIRECT_COST,INDIRECT_COST,
UPDATE_TIMESTAMP,UPDATE_USER from  OSP$AWARD_AMT_FNA_DISTRIBUTION@coeus.kuali
/
commit
/

--create table OSP$UNIT_ADMINISTRATORS as select * from OSP$UNIT_ADMINISTRATORS@coeus.kuali;
	declare
li_count number;
begin
select count(*) into li_count from user_tables where table_name='OSP$UNIT_ADMINISTRATORS';
if li_count>0 then
execute immediate('drop table OSP$UNIT_ADMINISTRATORS');
end if;
end;
/

  CREATE TABLE "OSP$UNIT_ADMINISTRATORS" 
   (	"UNIT_NUMBER" VARCHAR2(8 BYTE) NOT NULL ENABLE, 
	"UNIT_ADMINISTRATOR_TYPE_CODE" NUMBER(3,0) NOT NULL ENABLE, 
	"ADMINISTRATOR" VARCHAR2(9 BYTE) NOT NULL ENABLE, 
	"UPDATE_TIMESTAMP" DATE NOT NULL ENABLE, 
	"UPDATE_USER" VARCHAR2(8 BYTE) NOT NULL ENABLE);
	commit
	/
	insert into OSP$UNIT_ADMINISTRATORS(UNIT_NUMBER,UNIT_ADMINISTRATOR_TYPE_CODE,ADMINISTRATOR,UPDATE_TIMESTAMP,UPDATE_USER)
	select UNIT_NUMBER,UNIT_ADMINISTRATOR_TYPE_CODE,ADMINISTRATOR,UPDATE_TIMESTAMP,UPDATE_USER from OSP$UNIT_ADMINISTRATORS@coeus.kuali
	/
	commit
	/

CREATE INDEX OSP$PERSON_I ON OSP$PERSON(PERSON_ID);

CREATE INDEX OSP$USER_I ON OSP$USER (PERSON_ID);

CREATE INDEX OSP$USER_I2 ON OSP$USER(USER_ID);

CREATE INDEX OSP$UNIT_ADMINISTRATOR_I ON OSP$UNIT_ADMINISTRATORS(UNIT_NUMBER,ADMINISTRATOR,UNIT_ADMINISTRATOR_TYPE_CODE);

CREATE INDEX OSP$ROLODEX_I ON OSP$ROLODEX(ROLODEX_ID);

CREATE INDEX OSP$USER_ROLES_I ON OSP$USER_ROLES(ROLE_ID);

CREATE INDEX OSP$ROLES_I ON OSP$ROLE(ROLE_ID);

commit;
/