select ' Started BUDGET_MODULAR ' from dual
/
DECLARE
li_budget_period_number NUMBER(12,0);
li_budget NUMBER(12,0);
li_count NUMBER;

CURSOR c_modular IS
SELECT bm.PROPOSAL_NUMBER,bm.VERSION_NUMBER,t3.BUDGET_ID,bm.BUDGET_PERIOD,bp.BUDGET_PERIOD_NUMBER,bm.DIRECT_COST_LESS_CONSOR_FNA,bm.CONSORTIUM_FNA,bm.TOTAL_DIRECT_COST,bm.UPDATE_TIMESTAMP,bm.UPDATE_USER FROM OSP$BUDGET_MODULAR@coeus.kuali bm
INNER JOIN TEMP_TAB_TO_SYNC_BUDGET t2 on bm.PROPOSAL_NUMBER = t2.PROPOSAL_NUMBER and bm.VERSION_NUMBER = t2.VERSION_NUMBER
INNER JOIN TEMP_BUDGET_MAIN t3 on bm.PROPOSAL_NUMBER=t3.PROPOSAL_NUM and bm.VERSION_NUMBER=t3.BUDGET_VER_NUM
INNER JOIN BUDGET_PERIODS bp on t3.BUDGET_ID=bp.BUDGET_ID and bm.BUDGET_PERIOD=bp.BUDGET_PERIOD 
ORDER BY t3.BUDGET_ID,bm.BUDGET_PERIOD;
r_modular c_modular%ROWTYPE;

BEGIN

IF c_modular%ISOPEN THEN
CLOSE c_modular;
END IF;
OPEN c_modular;
LOOP
FETCH c_modular INTO r_modular;
EXIT WHEN c_modular%NOTFOUND;

begin

  
  select count(*) into li_count from BUDGET_MODULAR where BUDGET_ID=r_modular.BUDGET_ID and BUDGET_PERIOD=r_modular.BUDGET_PERIOD;
  
  IF li_count=0 THEN
  
  INSERT INTO BUDGET_MODULAR(BUDGET_PERIOD_NUMBER,BUDGET_ID,BUDGET_PERIOD,DIRECT_COST_LESS_CONSOR_FNA,CONSORTIUM_FNA,TOTAL_DIRECT_COST,UPDATE_TIMESTAMP,UPDATE_USER,VER_NBR,OBJ_ID)
  VALUES(r_modular.BUDGET_PERIOD_NUMBER,r_modular.BUDGET_ID,r_modular.BUDGET_PERIOD,r_modular.DIRECT_COST_LESS_CONSOR_FNA,r_modular.CONSORTIUM_FNA,r_modular.TOTAL_DIRECT_COST,r_modular.UPDATE_TIMESTAMP,r_modular.UPDATE_USER,1,SYS_GUID());
  
  ELSE
  
  UPDATE BUDGET_MODULAR SET   
    DIRECT_COST_LESS_CONSOR_FNA = r_modular.DIRECT_COST_LESS_CONSOR_FNA,
	CONSORTIUM_FNA = r_modular.CONSORTIUM_FNA,
	TOTAL_DIRECT_COST = r_modular.TOTAL_DIRECT_COST,
	UPDATE_TIMESTAMP = r_modular.UPDATE_TIMESTAMP,
	UPDATE_USER = r_modular.UPDATE_USER
   WHERE BUDGET_ID = r_modular.BUDGET_ID and BUDGET_PERIOD = r_modular.BUDGET_PERIOD;
  

  END IF;
  
exception
when others then
	dbms_output.put_line('Error in update of BUDGET_MODULAR. BUDGET_ID,BUDGET_PERIOD'||r_modular.BUDGET_ID||','||r_modular.BUDGET_PERIOD||'-'||sqlerrm);
end; 
 
END LOOP;
CLOSE c_modular;
END;
/
select ' Ended BUDGET_MODULAR ' from dual
/