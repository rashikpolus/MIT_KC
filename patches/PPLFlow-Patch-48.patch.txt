From 54dd6c0b258c911979d183be1246dbc0a4ed880c Mon Sep 17 00:00:00 2001
From: Gayathri <gathreya@email.arizona.edu>
Date: Wed, 27 May 2015 11:37:48 -0700
Subject: [PATCH] RESKC-491: FE issue - People Flow KRMS - Descriptors need to
 feed to PD Proposal Action>Route Log>Future Routing Requests details I think
 the issue here is that in Future actions, while people flow members' and
 delegates' names appear correctly in the PD Route Log, there is no field in
 PD route log that displays what Routing Agenda rule or which People Flow is
 associated with the required approval. Unit Administrators, Deans Office
 reviewers and OSP need to be able to easily identify the unit to which the
 proposal will route (or has routed, or is currently at the stop for).
 Possibly the easiest way for this to be done is to display the People Flow
 name, e.g. "151000 Biology All Proposals." in the Route Log, so users could
 see which approval group the stop is for. This would be consistent with how
 this routing information is displayed in Coeus Proposal Routing view.

---
 .../kew/impl/peopleflow/PeopleFlowRequestGeneratorImpl.java  | 12 ++++++++++--
 1 file changed, 10 insertions(+), 2 deletions(-)

diff --git a/rice-middleware/impl/src/main/java/org/kuali/rice/kew/impl/peopleflow/PeopleFlowRequestGeneratorImpl.java b/rice-middleware/impl/src/main/java/org/kuali/rice/kew/impl/peopleflow/PeopleFlowRequestGeneratorImpl.java
index 42c2689..a9829f8 100644
--- a/rice-middleware/impl/src/main/java/org/kuali/rice/kew/impl/peopleflow/PeopleFlowRequestGeneratorImpl.java
+++ b/rice-middleware/impl/src/main/java/org/kuali/rice/kew/impl/peopleflow/PeopleFlowRequestGeneratorImpl.java
@@ -66,6 +66,7 @@
  */
 public class PeopleFlowRequestGeneratorImpl implements PeopleFlowRequestGenerator {
 
+    public static final String PEOPLE_FLOW_NAME = "PeopleFlow Name: ";
     private KewTypeRepositoryService typeRepositoryService;
     private RoleService roleService;
 
@@ -225,7 +226,7 @@ private void generateDelegationToNonRoleRequest(Context context, ActionRequestVa
             throw new RiceIllegalStateException("MemberType unknown: " + delegate.getMemberType());
         }
 
-        String delegationAnnotation = generateDelegationAnnotation(memberRequest, member, delegate);
+        String delegationAnnotation = generateDelegationAnnotation(memberRequest, member, delegate, context.getPeopleFlow());
 
         context.getActionRequestFactory().addDelegationRequest(memberRequest, recipient,
                 delegate.getResponsibilityId(), member.getForceAction(),
@@ -296,10 +297,11 @@ private void generateDelegationRequestsForRoleMemberRequest(Context context, Act
      * @param parentRequest an action request that was generated for the given member
      * @param member the PeopleFlow member
      * @param delegate the delegate
+     * @param peopleFlowDefinition
      * @return the annotation string
      */
     private String generateDelegationAnnotation(ActionRequestValue parentRequest, PeopleFlowMember member,
-            PeopleFlowDelegate delegate) {
+                                                PeopleFlowDelegate delegate, PeopleFlowDefinition peopleFlowDefinition) {
 
         StringBuffer annotation = new StringBuffer( "Delegation of: " );
         annotation.append( parentRequest.getAnnotation() );
@@ -329,6 +331,12 @@ private String generateDelegationAnnotation(ActionRequestValue parentRequest, Pe
             annotation.append( "'" );
         }
 
+        if (peopleFlowDefinition != null) {
+            annotation.append(System.getProperty("line.separator"));
+            annotation.append(PEOPLE_FLOW_NAME + peopleFlowDefinition.getName());
+            annotation.append(System.getProperty("line.separator"));
+        }
+
         return annotation.toString();
     }
 
