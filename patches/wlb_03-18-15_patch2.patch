Index: coeus-impl/src/main/resources/org/kuali/coeus/propdev/impl/PropDevComponentSpringBeans.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- coeus-impl/src/main/resources/org/kuali/coeus/propdev/impl/PropDevComponentSpringBeans.xml	(date 1426561568000)
+++ coeus-impl/src/main/resources/org/kuali/coeus/propdev/impl/PropDevComponentSpringBeans.xml	(revision )
@@ -128,7 +128,9 @@
             </list>
         </property>
     </bean>
-    
+
+    <bean id="sponsorHierarchyDao" class="org.kuali.coeus.common.impl.sponsor.hierarchy.SponsorHierarchyDaoOjb" parent="platformAwareDao" />
+    
     <!-- Load Business Rules for this module -->
     <bean id="propDevKcBusinessRulesHandler" class="org.kuali.coeus.common.framework.ruleengine.KcBusinessRulesHandler"/>
 
Index: coeus-impl/src/main/java/edu/mit/kc/workloadbalancing/bo/WlFlexibility.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- coeus-impl/src/main/java/edu/mit/kc/workloadbalancing/bo/WlFlexibility.java	(date 1426561568000)
+++ coeus-impl/src/main/java/edu/mit/kc/workloadbalancing/bo/WlFlexibility.java	(revision )
@@ -24,7 +24,7 @@
 	private String sponsorGroup;
 
 	@Column(name = "FLEXIBILITY")
-	private BigDecimal flexibility;
+	private String flexibility;
 
     public WlFlexibility() {
     }
@@ -60,11 +60,11 @@
 		this.sponsorGroup = sponsorGroup;
 	}
 
-	public BigDecimal getFlexibility() {
+	public String getFlexibility() {
-		return flexibility;
+        return flexibility;
 	}
 
-	public void setFlexibility(BigDecimal flexibility) {
+	public void setFlexibility(String flexibility) {
 		this.flexibility = flexibility;
 	}
 }
Index: coeus-webapp/src/main/webapp/WEB-INF/ftl/workloadbalancing/wlTable.ftl
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- coeus-webapp/src/main/webapp/WEB-INF/ftl/workloadbalancing/wlTable.ftl	(date 1426561568000)
+++ coeus-webapp/src/main/webapp/WEB-INF/ftl/workloadbalancing/wlTable.ftl	(revision )
@@ -13,14 +13,14 @@
                         <button id="production_charts_button"
                                 class="btn btn-default btn-xs uif-action"
                                 data-submit_data="{&quot;methodToCall&quot;:&quot;showProductionCharts&quot;}"
-                                data-refreshid="WorkLoad-Table"
+                                data-refreshid="Workload-Table"
                                 data-role="Action">
                             Production Charts
                         </button>
                         <button id="simulation_mode_button"
                                 class="btn btn-default btn-xs uif-action"
                                 data-submit_data="{&quot;methodToCall&quot;:&quot;enterSimulationMode&quot;}"
-                                data-refreshid="WorkLoad-InitiatePage"
+                                data-refreshid="WorkloadBalancing-Page"
                                 data-role="Action">
                             Simulation Mode
                         </button>
@@ -43,14 +43,14 @@
                         <button id="comparison_charts_button"
                                 class="btn btn-default btn-xs uif-action"
                                 data-submit_data="{&quot;methodToCall&quot;:&quot;showComparisonCharts&quot;}"
-                                data-refreshid="WorkLoad-Table"
+                                data-refreshid="Workload-Table"
                                 data-role="Action">
                             Comparison Charts
                         </button>
                         <button id="exit_simulation_button"
                                 class="btn btn-primary btn-xs uif-action"
                                 data-submit_data="{&quot;methodToCall&quot;:&quot;exitSimulationMode&quot;}"
-                                data-refreshid="WorkLoad-InitiatePage"
+                                data-refreshid="WorkloadBalancing-Page"
                                 data-role="Action">
                             Exit Simulation Mode
                         </button>
@@ -91,7 +91,7 @@
                     <td>${row.personName}
                         <div class="workload-line-buttons">
                             <div class="dropdown" style="display:inline; margin-right: 3px;">
-                            <button id="edit_dropdown_${row_index}"
+                                <button id="edit_dropdown_${row_index}"
                                         class="btn btn-default btn-xs uif-action dropdown-toggle"
                                         data-onclick="return false;"
                                         data-toggle="dropdown"
@@ -129,13 +129,15 @@
                                     </#if>
                                 </ul>
                             </div>
+
                             <button id="delete_workload_${row_index}"
                                     class="btn btn-default btn-xs uif-action"
                                     data-submit_data="{&quot;methodToCall&quot;:&quot;deleteAdministrator&quot;, &quot;deleteLineItem&quot;: &quot;${row_index}&quot;}"
-                                    data-refreshid="WorkLoad-Table"
+                                    data-refreshid="Workload-Table"
                                     data-role="Action">
-                                Delete
+                                Remove
                             </button>
+
                         </div>
                     </td>
 
Index: coeus-impl/src/main/resources/edu/mit/kc/workloadbalancing/WorkloadLineItemTable.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- coeus-impl/src/main/resources/edu/mit/kc/workloadbalancing/WorkloadLineItemTable.xml	(revision )
+++ coeus-impl/src/main/resources/edu/mit/kc/workloadbalancing/WorkloadLineItemTable.xml	(revision )
@@ -0,0 +1,21 @@
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans
+                    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
+
+    <bean id="Kc-WorkloadLineItemTable" abstract="true" parent="Kc-WorkloadLineItemTable-parentBean"/>
+    <bean id="Kc-WorkloadLineItemTable-parentBean" abstract="true"
+          class="edu.mit.kc.workloadbalancing.impl.WorkloadLineItemTable" parent="Uif-GroupBase">
+           <property name="template" value="/WEB-INF/ftl/workloadbalancing/wlTable.ftl"/>
+         <property name="templateName" value="uif_lineItemTable"/>
+         <property name="cssClasses">
+            <list>
+                <value>uif-lineItemTable</value>
+            </list>
+        </property>
+        <property name="bindingInfo">
+            <ref bean="Uif-BindingInfo"/>
+        </property>
+   </bean>
+</beans>
+
Index: coeus-impl/src/main/resources/edu/mit/kc/workloadbalancing/WorkLoadInitiatePage.xml
===================================================================
--- coeus-impl/src/main/resources/edu/mit/kc/workloadbalancing/WorkLoadInitiatePage.xml	(date 1426561568000)
+++ coeus-impl/src/main/resources/edu/mit/kc/workloadbalancing/WorkLoadInitiatePage.xml	(date 1426561568000)
@@ -1,64 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!-- Copyright 2005-2013 The Kuali Foundation Licensed under the Educational 
-	Community License, Version 2.0 (the "License"); you may not use this file 
-	except in compliance with the License. You may obtain a copy of the License 
-	at http://www.opensource.org/licenses/ecl2.php Unless required by applicable 
-	law or agreed to in writing, software distributed under the License is distributed 
-	on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either 
-	express or implied. See the License for the specific language governing permissions 
-	and limitations under the License. -->
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans
-                    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
-
-    <bean id="WorkLoad-InitiatePage" parent="WorkLoad-InitiatePage-parentBean"/>
-    <bean id="WorkLoad-InitiatePage-parentBean" parent="Uif-DocumentPage"
-          p:header.headerText="Work Load Balancing">
-        <property name="items">
-            <list merge="false">
-                <bean id="WorkLoad-Table" parent="Kc-WorkloadLineItemTable" p:propertyName="workloadLineItems"
-                      p:order="10"/>
-                <bean id="WorkLoad-Simulation-SaveGroup" p:additionalCssClasses="simulation-saveGroup" p:render="@{#form.simulationMode}"
-                      parent="Uif-HorizontalBoxGroup">
-                    <property name="items">
-                        <list>
-                            <bean parent="Uif-InputField" p:required="true" p:label="Simulation Description"
-                                  p:propertyName="simulation.description">
-                            </bean>
-                            <bean parent="Uif-HorizontalFieldGroup" p:label="Simulation Date Range">
-                                <property name="items">
-                                    <list>
-                                        <bean parent="Uif-InputField" p:required="true" p:fieldLabel.render="false"
-                                              p:propertyName="simulation.startDate">
-                                            <property name="control">
-                                                <bean parent="Uif-DateControl"/>
-                                            </property>
-                                        </bean>
-                                        <bean parent="Uif-Message" p:messageText="To"/>
-                                        <bean parent="Uif-InputField" p:required="true" p:fieldLabel.render="false"
-                                              p:propertyName="simulation.endDate">
-                                            <property name="control">
-                                                <bean parent="Uif-DateControl"/>
-                                            </property>
-                                        </bean>
-                                    </list>
-                                </property>
-                            </bean>
-                            <bean parent="Uif-PrimaryActionButton" p:actionLabel="Save &amp; Run New Simulation"
-                                  p:methodToCall="saveSimulation"
-                                  p:refreshId="WorkLoad-Table"
-                                  p:performClientSideValidation="true"/>
-                        </list>
-                    </property>
-                </bean>
-            </list>
-        </property>
-        <property name="header.lowerGroup">
-            <null/>
-        </property>
-        <property name="footer">
-            <null/>
-        </property>
-    </bean>
-</beans>
Index: coeus-impl/src/main/resources/edu/mit/kc/workloadbalancing/WorkLoadInitiateView.xml
===================================================================
--- coeus-impl/src/main/resources/edu/mit/kc/workloadbalancing/WorkLoadInitiateView.xml	(date 1426561568000)
+++ coeus-impl/src/main/resources/edu/mit/kc/workloadbalancing/WorkLoadInitiateView.xml	(date 1426561568000)
@@ -1,588 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!-- Copyright 2005-2013 The Kuali Foundation Licensed under the Educational 
-	Community License, Version 2.0 (the "License"); you may not use this file 
-	except in compliance with the License. You may obtain a copy of the License 
-	at http://www.opensource.org/licenses/ecl2.php Unless required by applicable 
-	law or agreed to in writing, software distributed under the License is distributed 
-	on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either 
-	express or implied. See the License for the specific language governing permissions 
-	and limitations under the License. -->
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:util="http://www.springframework.org/schema/util"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans
-                    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
-
-    <bean id="WorkLoad-InitiateView" parent="WorkLoad-InitiateView-parentBean"/>
-    <bean id="WorkLoad-InitiateView-parentBean" abstract="true"
-          parent="Uif-FormView"
-          p:formClass="edu.mit.kc.workloadbalancing.core.WorkloadForm"
-          p:viewName="initiate" p:stickyFooter="true" p:singlePageView="true">
-        <property name="additionalScriptFiles">
-            <list>
-                <value>rice-contrib/plugins/jquery.multiselect/jquery.multiselect.min.js</value>
-                <value>rice-contrib/plugins/jquery.multiselect/jquery.multiselect.filter.min.js</value>
-                <value>rice-contrib/multiselect.js</value>
-                <value>scripts/propdev/core.js</value>
-                <value>scripts/common/dialog.js</value>
-            </list>
-        </property>
-        <property name="additionalCssFiles">
-            <list>
-                <value>rice-contrib/plugins/jquery.multiselect/jquery.multiselect.css</value>
-                <value>rice-contrib/plugins/jquery.multiselect/jquery.multiselect.filter.css</value>
-                <value>rice-contrib/multiselect.css</value>
-                <value>css/workloadbalancing/workload_matrix.css</value>
-
-            </list>
-        </property>
-        <property name="header">
-            <null/>
-        </property>
-        <property name="page" ref="WorkLoad-InitiatePage"/>
-        <property name="dialogs">
-            <list>
-                <ref bean="Workload-Add-Dialog"/>
-                <ref bean="Workload-Capacity-Edit"/>
-                <ref bean="Workload-Unit-Edit"/>
-                <ref bean="Workload-Absentee-Edit"/>
-                <ref bean="Workload-ReassignUnit-Dialog"/>
-                <ref bean="Workload-LoadSimulation-Dialog"/>
-            </list>
-        </property>
-    </bean>
-
-    <bean id="Workload-Add-Dialog" parent="Uif-DialogGroup" p:retrieveViaAjax="true"
-          p:headerText="Add Contract Administrator" p:refreshWhenChangedPropertyNames="tempUserName">
-        <property name="destroyDialogOnHidden" value="true"/>
-        <property name="items">
-            <list>
-                <bean parent="Uif-InputField" p:required="true" p:label="Contract Administrator Username"
-                      p:propertyName="tempUserName" p:labelLeft="true">
-                    <property name="control">
-                        <bean parent="Uif-TextControl"/>
-                    </property>
-                    <property name="quickfinder">
-                        <bean parent="Uif-QuickFinder" p:returnByScript="true"
-                              p:fieldConversions="personId:tempPersonId,fullName:tempPersonName,userName:tempUserName"
-                              p:dataObjectClassName="org.kuali.coeus.common.framework.person.KcPerson"/>
-                    </property>
-                </bean>
-
-
-                <bean parent="Uif-InputField" p:hidden="@{#form.tempPersonId eq ''}"
-                      p:labelLeft="true" p:label="Name"
-                      p:propertyName="tempPersonName" p:readOnly="true">
-                </bean>
-
-                <bean parent="Uif-InputField" p:hidden="@{#form.tempPersonId eq ''}"
-                      p:labelLeft="true" p:label="Person Id"
-                      p:propertyName="tempPersonId" p:readOnly="true">
-                </bean>
-
-
-            </list>
-        </property>
-        <property name="footer.items">
-            <list>
-
-                <bean parent="Uif-DialogDismissButton" p:actionLabel="Cancel"/>
-                <bean parent="Uif-PrimaryActionButton" p:actionLabel="Add Contract Administrator"
-                      p:methodToCall="addAdministrator"
-                      p:successCallback="Kc.Dialog.closeDialogWithoutError('Workload-Add-Dialog')"
-                      p:refreshId="WorkLoad-Table" p:defaultEnterKeyAction="true"
-                      p:performClientSideValidation="true"/>
-            </list>
-        </property>
-    </bean>
-
-
-    <bean id="Workload-Capacity-Edit" parent="Uif-DialogGroup" p:retrieveViaAjax="true"
-          p:headerText="@{#form.workloadLineItemEdit.personName}" p:dialogCssClass="modal-lg">
-        <property name="destroyDialogOnHidden" value="true"/>
-        <property name="items">
-            <list>
-                <bean parent="Uif-VerticalBoxSection" p:headerText="Capacity &amp; Flexibility">
-                    <property name="header.rightGroup">
-                        <bean parent="Uif-HorizontalBoxGroup"
-                              p:style="background-color: grey; padding: 5px;">
-                            <property name="items">
-                                <list>
-                                    <bean parent="Uif-InputField" p:labelLeft="true" p:label="Capacity"
-
-                                          p:propertyName="workloadLineItemEdit.wlCapacity.capacity"/>
-                                </list>
-                            </property>
-                        </bean>
-                    </property>
-                    <property name="items">
-                        <list>
-                            <bean parent="Uif-ListCollectionGroup" p:additionalCssClasses="col-md-6">
-
-
-                                <property name="collectionObjectClass"
-                                          value="edu.mit.kc.workloadbalancing.bo.WlFlexibility"/>
-                                <property name="propertyName"
-                                          value="workloadLineItemEdit.wlflexibilityList"/>
-
-                                <property name="items">
-                                    <list>
-                                        <bean parent="Uif-InputField" p:labelLeft="true"
-                                              p:label="@{#line.sponsorGroup}"
-                                              p:render="@{#index lt #form.workloadLineItemEdit.flexibilityListHalfIndex}"
-                                              p:propertyName="flexibility"/>
-                                    </list>
-                                </property>
-
-                            </bean>
-                            <bean parent="Uif-ListCollectionGroup" p:additionalCssClasses="col-md-6">
-
-
-                                <property name="collectionObjectClass"
-                                          value="edu.mit.kc.workloadbalancing.bo.WlFlexibility"/>
-                                <property name="propertyName"
-                                          value="workloadLineItemEdit.wlflexibilityList"/>
-
-                                <property name="items">
-                                    <list>
-                                        <bean parent="Uif-InputField" p:labelLeft="true"
-                                              p:label="@{#line.sponsorGroup}"
-                                              p:render="@{#index ge #form.workloadLineItemEdit.flexibilityListHalfIndex}"
-                                              p:propertyName="flexibility"/>
-                                    </list>
-                                </property>
-
-                            </bean>
-                        </list>
-                    </property>
-                </bean>
-
-            </list>
-        </property>
-        <property name="footer.items">
-            <list>
-
-                <bean parent="Uif-DialogDismissButton" p:actionLabel="Cancel"/>
-                <bean parent="Uif-PrimaryActionButton" p:actionLabel="Save Changes" p:methodToCall="saveFlexCapacity"
-                      p:refreshId="WorkLoad-Table"
-                      p:dialogDismissOption="REQUEST" p:defaultEnterKeyAction="true"
-                      p:performClientSideValidation="true"/>
-            </list>
-        </property>
-    </bean>
-
-    <bean id="Workload-Unit-Edit" parent="Uif-DialogGroup" p:retrieveViaAjax="true"
-          p:headerText="@{#form.workloadLineItemEdit.personName}" p:dialogCssClass="modal-lg">
-        <property name="destroyDialogOnHidden" value="true"/>
-        <property name="items">
-            <list>
-                <bean parent="Uif-VerticalBoxSection" p:headerText="Unit Assignments">
-                    <property name="items">
-                        <list>
-                            <bean id="Workload-Unit-Collection" parent="Uif-TableCollectionSection"
-                                  p:addWithDialog="true">
-                                <property name="collectionObjectClass"
-                                          value="org.kuali.coeus.common.framework.unit.admin.UnitAdministrator"/>
-                                <property name="propertyName" value="unitListEdit"/>
-                                <property name="layoutManager.renderSequenceField" value="false"/>
-                                <property name="layoutManager.generateAutoSequence" value="false"/>
-                                <property name="layoutManager.richTable.render" value="false"/>
-                                <property name="addWithDialogAction">
-                                    <bean parent="Uif-AddWithDialogAction" p:actionLabel="Add Assignment"
-                                          p:iconClass="icon-plus"/>
-                                </property>
-
-                                <property name="items">
-                                    <list>
-                                        <bean parent="Uif-InputField" p:label="Unit Name"
-                                              p:propertyName="unit.unitName" p:readOnly="true"/>
-                                    </list>
-                                </property>
-
-                                <property name="lineActions">
-                                    <list>
-                                        <bean parent="Uif-Action"
-                                              p:actionScript="writeHiddenToForm('reassignUnitItem', @{#index}); showDialog('Workload-ReassignUnit-Dialog')"
-                                              p:actionLabel="Reassign Unit"
-                                              p:additionalCssClasses="btn-default btn-xs"/>
-                                        <bean parent="Uif-Action" p:methodToCall="deleteUnitAssignment"
-                                              p:actionLabel="Unassign Unit"
-                                              p:additionalCssClasses="btn-default btn-xs"/>
-                                    </list>
-                                </property>
-
-                                <property name="addLineDialog">
-                                    <bean parent="Uif-AddLineDialog" p:headerText="Add Unit Assignments">
-                                        <property name="items">
-                                            <list>
-                                                <bean parent="Uif-InputField" p:propertyName="unitNumber"
-                                                      p:label="Unit Number" p:required="true"
-                                                      p:enableAutoDirectInquiry="false">
-                                                    <property name="quickfinder">
-                                                        <bean parent="Uif-QuickFinder" p:returnByScript="true"/>
-                                                    </property>
-                                                    <property name="propertyNamesForAdditionalDisplay"
-                                                              value="unit.unitName"/>
-                                                    <property name="attributeQuery">
-                                                        <bean parent="Uif-AttributeQueryConfig"
-                                                              p:dataObjectClassName="org.kuali.coeus.common.framework.unit.Unit"
-                                                              p:queryFieldMapping="unitNumber:unitNumber"
-                                                              p:returnFieldMapping="unitName:unit.unitName"/>
-                                                    </property>
-                                                </bean>
-
-                                            </list>
-                                        </property>
-                                        <property name="footer.items">
-                                            <list>
-                                                <bean parent="Uif-AddLineAction-Dialog"
-                                                      p:methodToCall="addUnitAssignment"
-                                                      p:actionLabel="Add Assignment"/>
-                                                <bean parent="Uif-DialogDismissButton" p:actionLabel="Cancel"/>
-                                            </list>
-                                        </property>
-                                    </bean>
-                                </property>
-                            </bean>
-                        </list>
-                    </property>
-                </bean>
-            </list>
-        </property>
-        <property name="footer.items">
-            <list>
-                <bean parent="Uif-DialogDismissButton" p:actionLabel="Close"/>
-            </list>
-        </property>
-    </bean>
-
-    <bean id="Workload-Absentee-Edit" parent="Uif-DialogGroup" p:retrieveViaAjax="true"
-          p:headerText="@{#form.workloadLineItemEdit.personName}" p:dialogCssClass="modal-lg">
-        <property name="destroyDialogOnHidden" value="true"/>
-        <property name="items">
-            <list>
-                <bean parent="Uif-VerticalBoxSection" p:headerText="Absent Tracker">
-                    <property name="items">
-                        <list>
-                            <bean id="Workload-Absentee-Collection" parent="Uif-TableCollectionSection"
-                                  p:addWithDialog="true">
-                                <property name="collectionObjectClass"
-                                          value="edu.mit.kc.workloadbalancing.bo.AbsenteeWrapper"/>
-                                <property name="propertyName" value="absenteeListEdit"/>
-                                <property name="layoutManager.renderSequenceField" value="false"/>
-                                <property name="layoutManager.generateAutoSequence" value="false"/>
-                                <property name="layoutManager.richTable.render" value="false"/>
-                                <property name="addWithDialogAction">
-                                    <bean parent="Uif-AddWithDialogAction" p:actionLabel="Add Absence"
-                                          p:iconClass="icon-plus"/>
-                                </property>
-
-                                <property name="lineActions">
-                                    <list>
-                                        <bean parent="Uif-Action"
-                                              p:actionScript="writeHiddenToForm('absenceEditItem', @{#index}); showDialog('Workload-AbsenceEdit-Dialog')"
-                                              p:actionLabel="Edit"
-                                              p:additionalCssClasses="btn-default btn-xs"/>
-                                        <bean parent="Uif-Action" p:methodToCall="deleteAbsence"
-                                              p:actionLabel="Delete"
-                                              p:additionalCssClasses="btn-default btn-xs"/>
-                                    </list>
-                                </property>
-
-                                <property name="items">
-                                    <list>
-                                        <bean parent="Workload-FromDate" p:readOnly="true"/>
-                                        <bean parent="Workload-ToDate" p:readOnly="true"/>
-                                    </list>
-                                </property>
-
-                                <property name="addLineDialog">
-                                    <bean parent="Uif-AddLineDialog" p:headerText="Add Absence">
-                                        <property name="items">
-                                            <list>
-                                                <bean parent="Workload-FromDate"/>
-                                                <bean parent="Workload-ToDate"/>
-                                            </list>
-                                        </property>
-                                        <property name="footer.items">
-                                            <list>
-                                                <bean parent="Uif-AddLineAction-Dialog"
-                                                      p:methodToCall="addAbsence"
-                                                      p:actionLabel="Add Absence"/>
-                                                <bean parent="Uif-DialogDismissButton" p:actionLabel="Cancel"/>
-                                            </list>
-                                        </property>
-                                    </bean>
-                                </property>
-
-                            </bean>
-                        </list>
-                    </property>
-                </bean>
-
-            </list>
-        </property>
-        <property name="footer.items">
-            <list>
-                <bean parent="Uif-DialogDismissButton" p:actionLabel="Close"/>
-            </list>
-        </property>
-    </bean>
-
-    <bean id="Workload-FromDate" parent="Uif-HorizontalFieldGroup" p:label="From">
-        <property name="items">
-            <list>
-                <bean parent="Uif-InputField" p:required="true" p:fieldLabel.render="false"
-                      p:propertyName="absentee.leaveStartDate">
-                    <property name="control">
-                        <bean parent="Uif-DateControl"/>
-                    </property>
-                </bean>
-                <bean parent="Uif-InputField" p:required="true"
-                      p:defaultValue="5:00PM"
-                      p:propertyName="leaveStartHour">
-                    <property name="control">
-                        <bean parent="Uif-DropdownControl"
-                              p:options-ref="Workload-Absentee-Times"/>
-                    </property>
-                </bean>
-            </list>
-        </property>
-    </bean>
-
-    <bean id="Workload-ToDate" parent="Uif-HorizontalFieldGroup" p:label="To">
-        <property name="items">
-            <list>
-                <bean parent="Uif-InputField" p:required="true" p:fieldLabel.render="false"
-                      p:propertyName="absentee.leaveEndDate">
-                    <property name="control">
-                        <bean parent="Uif-DateControl"/>
-                    </property>
-                </bean>
-                <bean parent="Uif-InputField" p:required="true"
-                      p:defaultValue="8:00AM"
-                      p:propertyName="leaveEndHour">
-                    <property name="control">
-                        <bean parent="Uif-DropdownControl"
-                              p:options-ref="Workload-Absentee-Times"/>
-                    </property>
-                </bean>
-            </list>
-        </property>
-    </bean>
-
-    <util:list id="Workload-Absentee-Times">
-        <bean parent="Uif-KeyLabelPair" p:key="12:00AM" p:value="Midnight"/>
-        <bean parent="Uif-KeyLabelPair" p:key="12:15AM" p:value="12:15 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="12:30AM" p:value="12:30 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="12:45AM" p:value="12:45 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="1:00AM" p:value="1:00 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="1:15AM" p:value="1:15 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="1:30AM" p:value="1:30 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="1:45AM" p:value="1:45 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="2:00AM" p:value="2:00 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="2:15AM" p:value="2:15 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="2:30AM" p:value="2:30 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="2:45AM" p:value="2:45 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="3:00AM" p:value="3:00 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="3:15AM" p:value="3:15 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="3:30AM" p:value="3:30 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="3:45AM" p:value="3:45 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="4:00AM" p:value="4:00 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="4:15AM" p:value="4:15 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="4:30AM" p:value="4:30 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="4:45AM" p:value="4:45 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="5:00AM" p:value="5:00 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="5:15AM" p:value="5:15 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="5:30AM" p:value="5:30 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="5:45AM" p:value="5:45 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="6:00AM" p:value="6:00 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="6:15AM" p:value="6:15 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="6:30AM" p:value="6:30 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="6:45AM" p:value="6:45 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="7:00AM" p:value="7:00 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="7:15AM" p:value="7:15 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="7:30AM" p:value="7:30 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="7:45AM" p:value="7:45 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="8:00AM" p:value="8:00 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="8:15AM" p:value="8:15 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="8:30AM" p:value="8:30 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="8:45AM" p:value="8:45 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="9:00AM" p:value="9:00 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="9:15AM" p:value="9:15 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="9:30AM" p:value="9:30 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="9:45AM" p:value="9:45 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="10:00AM" p:value="10:00 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="10:15AM" p:value="10:15 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="10:30AM" p:value="10:30 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="10:45AM" p:value="10:45 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="11:00AM" p:value="11:00 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="11:15AM" p:value="11:15 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="11:30AM" p:value="11:30 AM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="11:45AM" p:value="11:45 AM"/>
-
-        <bean parent="Uif-KeyLabelPair" p:key="12:00PM" p:value="Noon"/>
-        <bean parent="Uif-KeyLabelPair" p:key="12:15PM" p:value="12:15 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="12:30PM" p:value="12:30 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="12:45PM" p:value="12:45 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="1:00PM" p:value="1:00 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="1:15PM" p:value="1:15 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="1:30PM" p:value="1:30 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="1:45PM" p:value="1:45 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="2:00PM" p:value="2:00 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="2:15PM" p:value="2:15 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="2:30PM" p:value="2:30 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="2:45PM" p:value="2:45 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="3:00PM" p:value="3:00 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="3:15PM" p:value="3:15 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="3:30PM" p:value="3:30 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="3:45PM" p:value="3:45 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="4:00PM" p:value="4:00 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="4:15PM" p:value="4:15 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="4:30PM" p:value="4:30 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="4:45PM" p:value="4:45 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="5:00PM" p:value="5:00 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="5:15PM" p:value="5:15 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="5:30PM" p:value="5:30 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="5:45PM" p:value="5:45 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="6:00PM" p:value="6:00 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="6:15PM" p:value="6:15 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="6:30PM" p:value="6:30 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="6:45PM" p:value="6:45 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="7:00PM" p:value="7:00 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="7:15PM" p:value="7:15 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="7:30PM" p:value="7:30 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="7:45PM" p:value="7:45 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="8:00PM" p:value="8:00 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="8:15PM" p:value="8:15 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="8:30PM" p:value="8:30 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="8:45PM" p:value="8:45 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="9:00PM" p:value="9:00 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="9:15PM" p:value="9:15 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="9:30PM" p:value="9:30 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="9:45PM" p:value="9:45 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="10:00PM" p:value="10:00 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="10:15PM" p:value="10:15 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="10:30PM" p:value="10:30 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="10:45PM" p:value="10:45 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="11:00PM" p:value="11:00 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="11:15PM" p:value="11:15 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="11:30PM" p:value="11:30 PM"/>
-        <bean parent="Uif-KeyLabelPair" p:key="11:45PM" p:value="11:45 PM"/>
-
-    </util:list>
-
-    <bean id="Workload-AbsenceEdit-Dialog" parent="Uif-DialogGroup" p:retrieveViaAjax="true"
-              p:headerText="Edit Absence" p:fieldBindingObjectPath="absenteeEdit">
-            <property name="destroyDialogOnHidden" value="true"/>
-            <property name="items">
-                <list>
-                    <bean parent="Workload-FromDate"/>
-                    <bean parent="Workload-ToDate"/>
-                </list>
-            </property>
-            <property name="footer.items">
-                <list>
-                    <bean parent="Uif-DialogDismissButton" p:actionLabel="Cancel"/>
-                    <bean parent="Uif-PrimaryActionButton" p:actionLabel="Save Changes" p:methodToCall="updateAbsence"
-                          p:refreshId="Workload-Absentee-Collection"
-                          p:dialogDismissOption="REQUEST"
-                          p:performClientSideValidation="true"/>
-                </list>
-            </property>
-        </bean>
-
-    <bean id="Workload-ReassignUnit-Dialog" parent="Uif-DialogGroup" p:retrieveViaAjax="true"
-          p:headerText="Reassign Unit">
-        <property name="destroyDialogOnHidden" value="true"/>
-        <property name="items">
-            <list>
-
-                <bean parent="Uif-VerticalBoxSection"
-                      p:headerText="@{#form.unitAssignmentEdit.unit.unitName}">
-                    <property name="items">
-                        <list>
-                            <bean parent="Uif-InputField" p:label="Unit ID" p:labelLeft="true"
-                                  p:readOnly="true" p:propertyName="unitAssignmentEdit.unitNumber"
-                                  p:enableAutoQuickfinder="false"
-                                  p:enableAutoDirectInquiry="false"/>
-                            <bean parent="Uif-InputField" p:label="Organization Id" p:labelLeft="true"
-                                  p:readOnly="true" p:propertyName="unitAssignmentEdit.unit.organizationId"
-                                  p:enableAutoQuickfinder="false"/>
-                            <bean parent="Uif-InputField" p:label="Currently Assigned To" p:labelLeft="true"
-                                  p:readOnly="true" p:propertyName="workloadLineItemEdit.personName"
-                                  p:enableAutoQuickfinder="false"/>
-                            <bean parent="Uif-InputField" p:label="Reassign this unit to id"
-                                  p:propertyName="unitAssignmentEdit.personId"
-                                  p:additionalCssClasses="workload-reassign-field">
-                                <property name="quickfinder">
-                                    <bean parent="Uif-QuickFinder" p:returnByScript="true"
-                                          p:fieldConversions="personId:unitAssignmentEdit.personId"
-                                          p:dataObjectClassName="org.kuali.coeus.common.framework.person.KcPerson"/>
-                                </property>
-                                <!-- TODO add in custom auto query
-                                <property name="inquiry">
-                                                                                <bean parent="Uif-Inquiry" p:dataObjectClassName="org.kuali.coeus.common.framework.person.KcPerson"
-                                                                                      p:inquiryParameters="unitAssignmentEdit.personId:personId"/>
-                                                                            </property>
-                                                                            <property name="propertyNamesForAdditionalDisplay" value="workloadLineItemEdit.personName" />
-                                                                            <property name="attributeQuery">
-                                                                              <bean parent="Uif-AttributeQueryConfig" p:dataObjectClassName="org.kuali.coeus.common.framework.person.KcPerson"
-                                                                                    p:queryFieldMapping="unitAssignmentEdit.personId:personId" p:returnFieldMapping="fullName:workloadLineItemEdit.personName"/>
-                                                                            </property>-->
-                            </bean>
-                        </list>
-                    </property>
-                </bean>
-
-            </list>
-        </property>
-        <property name="footer.items">
-            <list>
-
-                <bean parent="Uif-DialogDismissButton" p:actionLabel="Cancel"/>
-                <bean parent="Uif-PrimaryActionButton" p:actionLabel="Reassign" p:methodToCall="reassignUnitAssignment"
-                      p:refreshId="Workload-Unit-Collection"
-                      p:dialogDismissOption="REQUEST"
-                      p:performClientSideValidation="true"/>
-            </list>
-        </property>
-    </bean>
-
-    <bean id="Workload-LoadSimulation-Dialog" parent="Uif-DialogGroup" p:retrieveViaAjax="true"
-          p:headerText="Load Simulation">
-        <property name="destroyDialogOnHidden" value="true"/>
-        <property name="items">
-            <list>
-                <bean parent="Uif-InputField" p:propertyName="simulation.simId"
-                      p:label="Simulation Id" p:required="true"
-                      p:enableAutoDirectInquiry="false">
-                    <property name="quickfinder">
-                        <bean parent="Uif-QuickFinder" p:returnByScript="true" p:fieldConversions="simId:simulation.simId"
-                              p:dataObjectClassName="edu.mit.kc.workloadbalancing.bo.WlSimHeader"/>
-                    </property>
-                    <property name="propertyNamesForAdditionalDisplay"
-                              value="simulation.description"/>
-                    <property name="attributeQuery">
-                        <bean parent="Uif-AttributeQueryConfig"
-                              p:dataObjectClassName="edu.mit.kc.workloadbalancing.bo.WlSimHeader"
-                              p:queryFieldMapping="simulation.simId:simId"
-                              p:returnFieldMapping="description:simulation.description"/>
-                    </property>
-                </bean>
-
-            </list>
-        </property>
-        <property name="footer.items">
-            <list>
-
-                <bean parent="Uif-DialogDismissButton" p:actionLabel="Cancel"/>
-                <bean parent="Uif-PrimaryActionButton" p:actionLabel="Load Simulation" p:methodToCall="loadSimulation"
-                      p:refreshId="WorkLoad-InitiatePage"
-                      p:dialogDismissOption="REQUEST"
-                      p:performClientSideValidation="true"/>
-            </list>
-        </property>
-    </bean>
-
-</beans>
\ No newline at end of file
Index: coeus-impl/src/main/java/edu/mit/kc/workloadbalancing/util/WorkloadUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- coeus-impl/src/main/java/edu/mit/kc/workloadbalancing/util/WorkloadUtils.java	(revision )
+++ coeus-impl/src/main/java/edu/mit/kc/workloadbalancing/util/WorkloadUtils.java	(revision )
@@ -0,0 +1,40 @@
+package edu.mit.kc.workloadbalancing.util;
+
+import org.apache.commons.lang.StringUtils;
+
+import java.sql.Timestamp;
+import java.text.SimpleDateFormat;
+import java.util.Calendar;
+
+/**
+ * Created by Brian on 3/16/15.
+ */
+public class WorkloadUtils {
+
+    public static String formatSponsorName(String sponsorName) {
+        String formatted = sponsorName.replace("_", " ");
+        formatted = StringUtils.join(StringUtils.splitByCharacterTypeCamelCase(formatted),' ');
+
+        return formatted;
+    }
+
+    public static Timestamp translateTimeToDate(Timestamp date, String time) {
+        Calendar cal = Calendar.getInstance();
+        cal.setTime(date);
+        String[] timeStrings = time.split(":");
+        cal.set(Calendar.HOUR, Integer.valueOf(timeStrings[0]));
+        cal.set(Calendar.MINUTE, Integer.valueOf(timeStrings[1].substring(0, 2)));
+        if (timeStrings[1].substring(2).equals("AM")) {
+            cal.set(Calendar.AM_PM, Calendar.AM);
+        } else {
+            cal.set(Calendar.AM_PM, Calendar.PM);
+        }
+
+        return new Timestamp(cal.getTimeInMillis());
+    }
+
+    public static String translateDateToTimeKey(Timestamp date) {
+        SimpleDateFormat hourFormat = new SimpleDateFormat("hh:mma");
+        return hourFormat.format(date);
+    }
+}
Index: coeus-impl/src/main/resources/edu/mit/kc/workloadbalancing/WorkloadSimulationComponents.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- coeus-impl/src/main/resources/edu/mit/kc/workloadbalancing/WorkloadSimulationComponents.xml	(revision )
+++ coeus-impl/src/main/resources/edu/mit/kc/workloadbalancing/WorkloadSimulationComponents.xml	(revision )
@@ -0,0 +1,81 @@
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans
+                    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
+
+    <bean id="Workload-Simulation-Message" p:render="@{simulationMode}" p:additionalCssClasses="workload-simMessage"
+          parent="Uif-Message"
+          p:messageText="[span class='icon-info2'][/span] Changes made on this screen are only for simulation"/>
+
+    <bean id="Workload-Simulation-SaveGroup"
+          p:render="@{#form.simulationMode}"
+          parent="Uif-HorizontalBoxGroup">
+        <property name="items">
+            <list>
+                <bean parent="Uif-InputField" p:required="true" p:label="Simulation Description"
+                      p:propertyName="simulation.description">
+                </bean>
+                <bean parent="Uif-HorizontalFieldGroup" p:label="Simulation Date Range">
+                    <property name="items">
+                        <list>
+                            <bean parent="Uif-InputField" p:required="true" p:fieldLabel.render="false"
+                                  p:propertyName="simulation.startDate">
+                                <property name="control">
+                                    <bean parent="Uif-DateControl"/>
+                                </property>
+                            </bean>
+                            <bean parent="Uif-Message" p:messageText="To"/>
+                            <bean parent="Uif-InputField" p:required="true" p:fieldLabel.render="false"
+                                  p:propertyName="simulation.endDate">
+                                <property name="control">
+                                    <bean parent="Uif-DateControl"/>
+                                </property>
+                            </bean>
+                        </list>
+                    </property>
+                </bean>
+                <bean parent="Uif-PrimaryActionButton" p:actionLabel="Save &amp; Run New Simulation"
+                      p:methodToCall="saveSimulation"
+                      p:refreshId="Workload-Table"
+                      p:performClientSideValidation="true"/>
+            </list>
+        </property>
+    </bean>
+
+    <bean id="Workload-LoadSimulation-Dialog" parent="Uif-DialogGroup" p:retrieveViaAjax="true"
+          p:headerText="Load Simulation">
+        <property name="destroyDialogOnHidden" value="true"/>
+        <property name="items">
+            <list>
+                <bean parent="Uif-InputField" p:propertyName="simulation.simId"
+                      p:label="Simulation Id" p:required="true"
+                      p:enableAutoDirectInquiry="false">
+                    <property name="quickfinder">
+                        <bean parent="Uif-QuickFinder" p:returnByScript="true"
+                              p:fieldConversions="simId:simulation.simId"
+                              p:dataObjectClassName="edu.mit.kc.workloadbalancing.bo.WlSimHeader"/>
+                    </property>
+                    <property name="propertyNamesForAdditionalDisplay"
+                              value="simulation.description"/>
+                    <property name="attributeQuery">
+                        <bean parent="Uif-AttributeQueryConfig"
+                              p:dataObjectClassName="edu.mit.kc.workloadbalancing.bo.WlSimHeader"
+                              p:queryFieldMapping="simulation.simId:simId"
+                              p:returnFieldMapping="description:simulation.description"/>
+                    </property>
+                </bean>
+
+            </list>
+        </property>
+        <property name="footer.items">
+            <list>
+
+                <bean parent="Uif-DialogDismissButton" p:actionLabel="Cancel"/>
+                <bean parent="Uif-PrimaryActionButton" p:actionLabel="Load Simulation" p:methodToCall="loadSimulation"
+                      p:refreshId="WorkloadBalancing-Page"
+                      p:dialogDismissOption="REQUEST"
+                      p:performClientSideValidation="true"/>
+            </list>
+        </property>
+    </bean>
+</beans>
\ No newline at end of file
Index: coeus-impl/src/main/resources/ApplicationResources.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- coeus-impl/src/main/resources/ApplicationResources.properties	(date 1426561568000)
+++ coeus-impl/src/main/resources/ApplicationResources.properties	(revision )
@@ -1136,4 +1136,8 @@
 error.award.notFound=Award not found.
 
 workload.error.missingPerson=Invalid username
-workload.error.duplicatePerson=This person already exists as Contract Administrator
\ No newline at end of file
+workload.error.duplicatePerson=This person already exists as Contract Administrator
+workload.error.badUnit=Unit not valid
+workload.info.simulationSaved=Simulation saved: {0}
+workload.info.simulationFromLoaded=Simulation loaded: {0}
+workload.info.simulationFromCurrent=Simulation mode was loaded with current workload balancing data
\ No newline at end of file
Index: coeus-impl/src/main/resources/edu/mit/kc/workloadbalancing/WorkloadBalancingComponents.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- coeus-impl/src/main/resources/edu/mit/kc/workloadbalancing/WorkloadBalancingComponents.xml	(revision )
+++ coeus-impl/src/main/resources/edu/mit/kc/workloadbalancing/WorkloadBalancingComponents.xml	(revision )
@@ -0,0 +1,163 @@
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans
+                    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
+
+    <bean id="Workload-Add-Dialog" parent="Uif-DialogGroup" p:retrieveViaAjax="true"
+          p:enterKeyAction="Workload-Add-Button"
+          p:headerText="Add Contract Administrator" p:refreshWhenChangedPropertyNames="addPersonInfo.tempUserName">
+        <property name="destroyDialogOnHidden" value="true"/>
+        <property name="items">
+            <list>
+                <bean parent="Workload-Simulation-Message"/>
+                <bean parent="Uif-InputField" p:required="true" p:label="Contract Administrator Username"
+                      p:propertyName="addPersonInfo.tempUserName" p:labelLeft="true">
+                    <property name="control">
+                        <bean parent="Uif-TextControl"/>
+                    </property>
+                    <property name="quickfinder">
+                        <bean parent="Uif-QuickFinder" p:returnByScript="true"
+                              p:fieldConversions="personId:addPersonInfo.tempPersonId,fullName:addPersonInfo.tempPersonName,userName:addPersonInfo.tempUserName"
+                              p:dataObjectClassName="org.kuali.coeus.common.framework.person.KcPerson"/>
+                    </property>
+                </bean>
+
+
+                <bean parent="Uif-InputField" p:hidden="@{#form.addPersonInfo.tempPersonId eq ''}"
+                      p:labelLeft="true" p:label="Name"
+                      p:propertyName="addPersonInfo.tempPersonName" p:readOnly="true">
+                </bean>
+
+                <bean parent="Uif-InputField" p:hidden="@{#form.addPersonInfo.tempPersonId eq ''}"
+                      p:labelLeft="true" p:label="Person Id"
+                      p:propertyName="addPersonInfo.tempPersonId" p:readOnly="true">
+                </bean>
+
+
+            </list>
+        </property>
+        <property name="footer.items">
+            <list>
+
+                <bean parent="Uif-DialogDismissButton" p:actionLabel="Cancel"/>
+                <bean id="Workload-Add-Button" parent="Uif-PrimaryActionButton"
+                      p:actionLabel="Add Contract Administrator"
+                      p:methodToCall="addAdministrator"
+                      p:successCallback="Kc.Dialog.closeDialogWithoutError('Workload-Add-Dialog')"
+                      p:refreshId="Workload-Table" p:defaultEnterKeyAction="true"
+                      p:performClientSideValidation="true"/>
+            </list>
+        </property>
+    </bean>
+
+
+    <bean id="Workload-Capacity-Edit" parent="Uif-DialogGroup" p:retrieveViaAjax="true"
+          p:enterKeyAction="Workload-SaveFlex-Button"
+          p:headerText="@{#form.workloadLineItemEdit.personName}">
+
+        <property name="destroyDialogOnHidden" value="true"/>
+        <property name="items">
+            <list>
+                <bean parent="Workload-Simulation-Message"/>
+                <bean parent="Uif-VerticalBoxSection" p:headerText="Capacity &amp; Flexibility">
+
+                    <property name="header.rightGroup">
+                        <bean parent="Uif-HorizontalBoxGroup" p:additionalCssClasses="well well-sm">
+                            <property name="items">
+                                <list>
+                                    <bean parent="Uif-InputField" p:labelLeft="true" p:label="Total Capacity"
+                                          p:required="true"
+                                          p:propertyName="workloadLineItemEdit.wlCapacity.capacity">
+                                        <property name="validCharactersConstraint">
+                                            <bean parent="IntegerPatternConstraint"/>
+                                        </property>
+                                    </bean>
+                                </list>
+                            </property>
+                        </bean>
+                    </property>
+
+                    <property name="items">
+                        <list>
+                           <ref bean="Workload-Flexibility-Left"/>
+                           <ref bean="Workload-Flexibility-Right"/>
+                        </list>
+                    </property>
+                </bean>
+
+            </list>
+        </property>
+        <property name="footer.items">
+            <list>
+
+                <bean parent="Uif-DialogDismissButton" p:actionLabel="Cancel"/>
+                <bean id="Workload-SaveFlex-Button" parent="Uif-PrimaryActionButton" p:actionLabel="Save Changes"
+                      p:methodToCall="saveFlexCapacity"
+                      p:refreshId="Workload-Table"
+                      p:dialogDismissOption="REQUEST" p:defaultEnterKeyAction="true"
+                      p:performClientSideValidation="true"/>
+            </list>
+        </property>
+    </bean>
+
+    <bean id="Workload-Flexibility-Left" parent="Uif-ListCollectionGroup" p:additionalCssClasses="col-md-6">
+
+        <property name="collectionObjectClass"
+                  value="edu.mit.kc.workloadbalancing.bo.WlFlexibility"/>
+        <property name="propertyName"
+                  value="workloadLineItemEdit.wlflexibilityList"/>
+
+        <property name="items">
+            <list>
+                <bean parent="Uif-InputField" p:labelLeft="true"
+                      p:label="@{T(edu.mit.kc.workloadbalancing.util.WorkloadUtils).formatSponsorName(#line.sponsorGroup)}"
+                      p:fieldLabel.renderColon="false"
+                      p:fieldLabel.additionalCssClasses="workload-flexLabel"
+                      p:render="@{#index lt #form.workloadLineItemEdit.flexibilityListHalfIndex}"
+                      p:propertyName="flexibility">
+                    <property name="control">
+                        <bean parent="Uif-SmallTextControl">
+                            <property name="size" value="2"/>
+                        </bean>
+                    </property>
+                    <property name="validCharactersConstraint">
+                        <bean parent="FixedPointPatternConstraint" p:precision="4"
+                              p:scale="2"/>
+                    </property>
+                </bean>
+            </list>
+        </property>
+
+    </bean>
+
+    <bean id="Workload-Flexibility-Right" parent="Uif-ListCollectionGroup" p:additionalCssClasses="col-md-6">
+
+        <property name="collectionObjectClass"
+                  value="edu.mit.kc.workloadbalancing.bo.WlFlexibility"/>
+        <property name="propertyName"
+                  value="workloadLineItemEdit.wlflexibilityList"/>
+
+        <property name="items">
+            <list>
+                <bean parent="Uif-InputField" p:labelLeft="true"
+                      p:fieldLabel.renderColon="false"
+                      p:fieldLabel.additionalCssClasses="workload-flexLabel"
+                      p:label="@{T(edu.mit.kc.workloadbalancing.util.WorkloadUtils).formatSponsorName(#line.sponsorGroup)}"
+                      p:render="@{#index ge #form.workloadLineItemEdit.flexibilityListHalfIndex}"
+                      p:propertyName="flexibility">
+                    <property name="control">
+                        <bean parent="Uif-SmallTextControl">
+                            <property name="size" value="2"/>
+                        </bean>
+                    </property>
+                    <property name="validCharactersConstraint">
+                        <bean parent="FixedPointPatternConstraint" p:precision="4"
+                              p:scale="2"/>
+                    </property>
+                </bean>
+            </list>
+        </property>
+
+    </bean>
+
+</beans>
\ No newline at end of file
Index: coeus-webapp/src/main/webapp/css/workloadbalancing/workload_matrix.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- coeus-webapp/src/main/webapp/css/workloadbalancing/workload_matrix.css	(date 1426561568000)
+++ coeus-webapp/src/main/webapp/css/workloadbalancing/workload_matrix.css	(revision )
@@ -15,7 +15,7 @@
 }
 
 .ui-datepicker {
-    z-index: 10010;
+    z-index: 10010 !important;
 }
 
 body {
@@ -72,11 +72,6 @@
     border: 0;
 }
 
-#wl-balance .dropdown-menu {
-    top: auto;
-    bottom: 0;
-}
-
 #wl-balance .table-condensed > tbody > tr > td {
     padding: 3px
 }
@@ -466,36 +461,86 @@
 
 .workload-line-buttons {
     float: right;
+    min-height: 1.8em;
 }
 
+#wl tr .workload-line-buttons {
+    opacity: 0;
+    transition: opacity 0.3s ease-out 0s;
+}
+
+#wl tr:hover .workload-line-buttons {
+    opacity: 1;
+    transition: opacity 0.3s ease-in 0s;
+}
+
 .workload-button-bar {
     box-shadow: 0 4px 2px -2px rgba(0, 0, 0, 0.07);
     border: 1px solid #dddddd;
     background-color: rgb(245, 245, 245);
+    margin: 0;
+    padding: .5em;
 }
 
 .simulation-button-bar {
     background-color: rgb(217, 237, 247);
     font-weight: bold;
+    color: #31708f;
 }
 
-.simulation-saveGroup {
+#Workload-Simulation-SaveGroup {
     margin-top: 0px;
     margin-bottom: 1em;
     padding: 10px;
+    padding-left: 30%;
     background-color: rgb(217, 237, 247);
-    border: 0px 1px 1px 1px solid #dddddd;
+    border: 1px solid #dddddd;
+    border-top: none;
 }
 
-.simulation-saveGroup button {
+#Workload-Simulation-SaveGroup button {
     margin-top: 1.5em;
 }
-/*
-.workload-line-buttons {
-    display: none;
+
+#wlTable {
+    border: 1px solid #dddddd;
 }
 
+#Workload-Capacity-Edit h3{
+    padding-top: .5em;
+    margin-top: 0px;
+    padding-bottom: 1.5em;
+    border-bottom: 1px solid #dddddd;
+}
 
-tr:hover > td > .workload-line-buttons {
-  display: block;
-}*/
+#Workload-Unit-AssignedTo_add {
+    padding-top: 1.2em;
+}
+
+.workload-flexLabel {
+    width: 9em;
+    margin-left: .5em;
+}
+
+.workload-simMessage {
+  background-color: rgb(217, 237, 247);
+  font-weight: bold;
+  color: #31708f;
+  padding: .5em;
+  margin-left: -17px;
+  margin-right: -17px;
+  margin-top: -10px;
+  margin-bottom: 1em;
+}
+
+#Workload-Add-Dialog .uif-labelLeft + *, #Workload-Capacity-Edit .uif-labelLeft + *{
+    padding-top: .5em;
+}
+
+#Workload-ReassignUnit-Dialog .uif-inputField {
+    padding-bottom: 0;
+}
+
+.workload-reassign-field {
+    margin-top: 1em;
+}
Index: coeus-impl/src/main/java/org/kuali/coeus/propdev/impl/workloadbalancing/WorkLoadControllerBase.java
===================================================================
--- coeus-impl/src/main/java/org/kuali/coeus/propdev/impl/workloadbalancing/WorkLoadControllerBase.java	(date 1426561568000)
+++ coeus-impl/src/main/java/org/kuali/coeus/propdev/impl/workloadbalancing/WorkLoadControllerBase.java	(date 1426561568000)
@@ -1,204 +0,0 @@
-package org.kuali.coeus.propdev.impl.workloadbalancing;
-
-import javax.servlet.http.HttpServletRequest;
-import javax.servlet.http.HttpServletResponse;
-import org.kuali.coeus.common.framework.ruleengine.KcBusinessRulesEngine;
-import org.kuali.coeus.sys.framework.controller.KcCommonControllerService;
-import org.kuali.coeus.sys.framework.controller.UifExportControllerService;
-import org.kuali.coeus.sys.framework.gv.GlobalVariableService;
-import org.kuali.rice.core.api.config.property.ConfigurationService;
-import org.kuali.rice.krad.data.DataObjectService;
-import org.kuali.rice.krad.document.TransactionalDocumentControllerService;
-import org.kuali.rice.krad.web.form.UifFormBase;
-import org.kuali.rice.krad.web.service.CollectionControllerService;
-import org.kuali.rice.krad.web.service.FileControllerService;
-import org.kuali.rice.krad.web.service.ModelAndViewService;
-import org.kuali.rice.krad.web.service.NavigationControllerService;
-import org.kuali.rice.krad.web.service.QueryControllerService;
-import org.kuali.rice.krad.web.service.RefreshControllerService;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.beans.factory.annotation.Qualifier;
-import org.springframework.validation.BindingResult;
-import org.springframework.web.bind.annotation.ModelAttribute;
-import org.springframework.web.servlet.ModelAndView;
-import edu.mit.kc.workloadbalancing.core.WorkloadForm;
-
-public class WorkLoadControllerBase {
-
-	@Autowired
-	@Qualifier("uifExportControllerService")
-	private UifExportControllerService uifExportControllerService;
-
-	@Autowired
-	@Qualifier("kcCommonControllerService")
-	private KcCommonControllerService kcCommonControllerService;
-
-	@Autowired
-	@Qualifier("transactionalDocumentControllerService")
-	private TransactionalDocumentControllerService transactionalDocumentControllerService;
-
-	@Autowired
-	@Qualifier("collectionControllerService")
-	private CollectionControllerService collectionControllerService;
-
-	@Autowired
-	@Qualifier("fileControllerService")
-	private FileControllerService fileControllerService;
-
-	@Autowired
-	@Qualifier("modelAndViewService")
-	private ModelAndViewService modelAndViewService;
-
-	@Autowired
-	@Qualifier("navigationControllerService")
-	private NavigationControllerService navigationControllerService;
-
-	@Autowired
-	@Qualifier("queryControllerService")
-	private QueryControllerService queryControllerService;
-
-	@Autowired
-	@Qualifier("refreshControllerService")
-	private RefreshControllerService refreshControllerService;
-
-	@Autowired
-	@Qualifier("dataObjectService")
-	private DataObjectService dataObjectService;
-
-	@Autowired
-	@Qualifier("kcBusinessRulesEngine")
-	private KcBusinessRulesEngine kcBusinessRulesEngine;
-
-	@Autowired
-	@Qualifier("kualiConfigurationService")
-	private ConfigurationService kualiConfigurationService;
-
-	@Autowired
-	@Qualifier("globalVariableService")
-	private GlobalVariableService globalVariableService;
-
-
-	public ModelAndView save(WorkloadForm form, BindingResult result,
-			HttpServletRequest request, HttpServletResponse response)
-			throws Exception {
-
-		getDataObjectService().save(form);
-		return getModelAndViewService().getModelAndView(form);
-	}
-
-	public UifExportControllerService getUifExportControllerService() {
-		return uifExportControllerService;
-	}
-
-	public void setUifExportControllerService(
-			UifExportControllerService uifExportControllerService) {
-		this.uifExportControllerService = uifExportControllerService;
-	}
-
-	public KcCommonControllerService getKcCommonControllerService() {
-		return kcCommonControllerService;
-	}
-
-	public void setKcCommonControllerService(
-			KcCommonControllerService kcCommonControllerService) {
-		this.kcCommonControllerService = kcCommonControllerService;
-	}
-
-	public TransactionalDocumentControllerService getTransactionalDocumentControllerService() {
-		return transactionalDocumentControllerService;
-	}
-
-	public void setTransactionalDocumentControllerService(
-			TransactionalDocumentControllerService transactionalDocumentControllerService) {
-		this.transactionalDocumentControllerService = transactionalDocumentControllerService;
-	}
-
-	public CollectionControllerService getCollectionControllerService() {
-		return collectionControllerService;
-	}
-
-	public void setCollectionControllerService(
-			CollectionControllerService collectionControllerService) {
-		this.collectionControllerService = collectionControllerService;
-	}
-
-	public FileControllerService getFileControllerService() {
-		return fileControllerService;
-	}
-
-	public void setFileControllerService(
-			FileControllerService fileControllerService) {
-		this.fileControllerService = fileControllerService;
-	}
-
-	public ModelAndViewService getModelAndViewService() {
-		return modelAndViewService;
-	}
-
-	public void setModelAndViewService(ModelAndViewService modelAndViewService) {
-		this.modelAndViewService = modelAndViewService;
-	}
-
-	public NavigationControllerService getNavigationControllerService() {
-		return navigationControllerService;
-	}
-
-	public void setNavigationControllerService(
-			NavigationControllerService navigationControllerService) {
-		this.navigationControllerService = navigationControllerService;
-	}
-
-	public QueryControllerService getQueryControllerService() {
-		return queryControllerService;
-	}
-
-	public void setQueryControllerService(
-			QueryControllerService queryControllerService) {
-		this.queryControllerService = queryControllerService;
-	}
-
-	public RefreshControllerService getRefreshControllerService() {
-		return refreshControllerService;
-	}
-
-	public void setRefreshControllerService(
-			RefreshControllerService refreshControllerService) {
-		this.refreshControllerService = refreshControllerService;
-	}
-
-	public DataObjectService getDataObjectService() {
-		return dataObjectService;
-	}
-
-	public void setDataObjectService(DataObjectService dataObjectService) {
-		this.dataObjectService = dataObjectService;
-	}
-
-	public KcBusinessRulesEngine getKcBusinessRulesEngine() {
-		return kcBusinessRulesEngine;
-	}
-
-	public void setKcBusinessRulesEngine(
-			KcBusinessRulesEngine kcBusinessRulesEngine) {
-		this.kcBusinessRulesEngine = kcBusinessRulesEngine;
-	}
-
-	public ConfigurationService getKualiConfigurationService() {
-		return kualiConfigurationService;
-	}
-
-	public void setKualiConfigurationService(
-			ConfigurationService kualiConfigurationService) {
-		this.kualiConfigurationService = kualiConfigurationService;
-	}
-
-	public GlobalVariableService getGlobalVariableService() {
-		return globalVariableService;
-	}
-
-	public void setGlobalVariableService(
-			GlobalVariableService globalVariableService) {
-		this.globalVariableService = globalVariableService;
-	}
-
-}
Index: coeus-impl/src/main/java/edu/mit/kc/workloadbalancing/core/WorkloadForm.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- coeus-impl/src/main/java/edu/mit/kc/workloadbalancing/core/WorkloadForm.java	(date 1426561568000)
+++ coeus-impl/src/main/java/edu/mit/kc/workloadbalancing/core/WorkloadForm.java	(revision )
@@ -18,16 +18,15 @@
     // Line Item editing variables
     private WorkloadBalancing workloadLineItemEdit = new WorkloadBalancing();
 
-    // TODO replace with unit hierarchy workload type
-    List<WlFlexibility> flexibilities = new ArrayList<>();
+    private List<String> sponsors = new ArrayList<String>();
 
     // Person editing variables
-    private String tempPersonId = "";
-    private String tempUserName = "";
-    private String tempPersonName = "";
+    private TempPersonInfo addPersonInfo = new TempPersonInfo();
+    private TempPersonInfo reassignPersonInfo = new TempPersonInfo();
 
     // Unit editing variables
     private List<UnitAdministrator> unitListEdit = new ArrayList<UnitAdministrator>();
+    private String unitAssignedTo;
 
     // Unit Reassignment editing variables
     private UnitAdministrator unitAssignmentEdit = new UnitAdministrator();
@@ -70,49 +69,38 @@
         this.simulationSaved = simulationSaved;
     }
 
-    public List<WlFlexibility> getFlexibilities() {
-        return flexibilities;
+    public List<String> getSponsors() {
+        return sponsors;
     }
 
-    public void setFlexibilities(List<WlFlexibility> flexibilities) {
-        this.flexibilities = flexibilities;
+    public void setSponsors(List<String> sponsors) {
+        this.sponsors = sponsors;
     }
 
-    public WorkloadBalancing getWorkloadLineItemEdit() {
-        return workloadLineItemEdit;
+    public TempPersonInfo getAddPersonInfo() {
+        return addPersonInfo;
     }
 
-    public void setWorkloadLineItemEdit(WorkloadBalancing workloadLineItemEdit) {
-        this.workloadLineItemEdit = workloadLineItemEdit;
+    public void setAddPersonInfo(TempPersonInfo addPersonInfo) {
+        this.addPersonInfo = addPersonInfo;
     }
 
-    public String getTempPersonId() {
-        return tempPersonId;
+    public TempPersonInfo getReassignPersonInfo() {
+        return reassignPersonInfo;
     }
 
-    public void setTempPersonId(String tempPersonId) {
-        this.tempPersonId = tempPersonId;
+    public void setReassignPersonInfo(TempPersonInfo reassignPersonInfo) {
+        this.reassignPersonInfo = reassignPersonInfo;
     }
 
-    public String getTempUserName() {
-        return tempUserName;
+    public WorkloadBalancing getWorkloadLineItemEdit() {
+        return workloadLineItemEdit;
     }
 
-    public void setTempUserName(String tempUserName) {
-        this.tempUserName = tempUserName;
+    public void setWorkloadLineItemEdit(WorkloadBalancing workloadLineItemEdit) {
+        this.workloadLineItemEdit = workloadLineItemEdit;
     }
 
-    public String getTempPersonName() {
-        if (tempPersonName.equals("")) {
-            return "Select a person";
-        }
-        return tempPersonName;
-    }
-
-    public void setTempPersonName(String tempPersonName) {
-        this.tempPersonName = tempPersonName;
-    }
-
     public List<UnitAdministrator> getUnitListEdit() {
         return unitListEdit;
     }
@@ -121,6 +109,14 @@
         this.unitListEdit = unitListEdit;
     }
 
+    public String getUnitAssignedTo() {
+        return unitAssignedTo;
+    }
+
+    public void setUnitAssignedTo(String unitAssignedTo) {
+        this.unitAssignedTo = unitAssignedTo;
+    }
+
     public UnitAdministrator getUnitAssignmentEdit() {
         return unitAssignmentEdit;
     }
@@ -151,5 +147,36 @@
 
     public void setAbsenteeEdit(AbsenteeWrapper absenteeEdit) {
         this.absenteeEdit = absenteeEdit;
+    }
+
+
+    public class TempPersonInfo {
+        private String tempPersonId = "";
+        private String tempUserName = "";
+        private String tempPersonName = "";
+
+        public String getTempPersonId() {
+            return tempPersonId;
+        }
+
+        public void setTempPersonId(String tempPersonId) {
+            this.tempPersonId = tempPersonId;
+        }
+
+        public String getTempUserName() {
+            return tempUserName;
+        }
+
+        public void setTempUserName(String tempUserName) {
+            this.tempUserName = tempUserName;
+        }
+
+        public String getTempPersonName() {
+            return tempPersonName;
+        }
+
+        public void setTempPersonName(String tempPersonName) {
+            this.tempPersonName = tempPersonName;
+        }
     }
 }
Index: coeus-impl/src/main/resources/org/kuali/kra/datadictionary/krad/common/KcApplicationHeader.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- coeus-impl/src/main/resources/org/kuali/kra/datadictionary/krad/common/KcApplicationHeader.xml	(date 1426561568000)
+++ coeus-impl/src/main/resources/org/kuali/kra/datadictionary/krad/common/KcApplicationHeader.xml	(revision )
@@ -734,8 +734,8 @@
             <list>
                <bean parent="Uif-MenuAction" p:actionLabel="Workload Balancing"
                       p:actionUrl.baseUrl="@{#ConfigProperties['application.url']}/kc-pd-krad"
-                      p:actionUrl.viewId="WorkLoad-InitiateView"
-                      p:actionUrl.controllerMapping="/workloadbalancingcommon"
+                      p:actionUrl.viewId="WorkloadBalancing-View"
+                      p:actionUrl.controllerMapping="/workloadbalancing"
                       p:actionUrl.methodToCall="start" p:order="10" />
                       
             </list>
Index: coeus-impl/src/main/java/edu/mit/kc/workloadbalancing/bo/WlSimFlexibility.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- coeus-impl/src/main/java/edu/mit/kc/workloadbalancing/bo/WlSimFlexibility.java	(date 1426561568000)
+++ coeus-impl/src/main/java/edu/mit/kc/workloadbalancing/bo/WlSimFlexibility.java	(revision )
@@ -26,7 +26,7 @@
 	private String sponsorGroup;
 
 	@Column(name = "FLEXIBILITY")
-	private BigDecimal flexibility;
+	private String flexibility;
 
     public WlSimFlexibility() {
     }
@@ -69,11 +69,11 @@
 		this.sponsorGroup = sponsorGroup;
 	}
 
-	public BigDecimal getFlexibility() {
+	public String getFlexibility() {
 		return flexibility;
 	}
 
-	public void setFlexibility(BigDecimal flexibility) {
+	public void setFlexibility(String flexibility) {
 		this.flexibility = flexibility;
 	}
 }
Index: coeus-impl/src/main/resources/edu/mit/kc/workloadbalancing/WorkloadBalancingView.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- coeus-impl/src/main/resources/edu/mit/kc/workloadbalancing/WorkloadBalancingView.xml	(revision )
+++ coeus-impl/src/main/resources/edu/mit/kc/workloadbalancing/WorkloadBalancingView.xml	(revision )
@@ -0,0 +1,55 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!-- Copyright 2005-2013 The Kuali Foundation Licensed under the Educational 
+	Community License, Version 2.0 (the "License"); you may not use this file 
+	except in compliance with the License. You may obtain a copy of the License 
+	at http://www.opensource.org/licenses/ecl2.php Unless required by applicable 
+	law or agreed to in writing, software distributed under the License is distributed 
+	on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either 
+	express or implied. See the License for the specific language governing permissions 
+	and limitations under the License. -->
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans
+                    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
+
+    <bean id="WorkloadBalancing-View" parent="WorkloadBalancing-View-parentBean"/>
+    <bean id="WorkloadBalancing-View-parentBean" abstract="true"
+          parent="Uif-FormView"
+          p:formClass="edu.mit.kc.workloadbalancing.core.WorkloadForm"
+          p:viewName="initiate" p:stickyFooter="true" p:singlePageView="true">
+        <property name="additionalScriptFiles">
+            <list>
+                <value>rice-contrib/plugins/jquery.multiselect/jquery.multiselect.min.js</value>
+                <value>rice-contrib/plugins/jquery.multiselect/jquery.multiselect.filter.min.js</value>
+                <value>rice-contrib/multiselect.js</value>
+                <value>scripts/propdev/core.js</value>
+                <value>scripts/common/dialog.js</value>
+            </list>
+        </property>
+        <property name="additionalCssFiles">
+            <list>
+                <value>rice-contrib/plugins/jquery.multiselect/jquery.multiselect.css</value>
+                <value>rice-contrib/plugins/jquery.multiselect/jquery.multiselect.filter.css</value>
+                <value>rice-contrib/multiselect.css</value>
+                <value>css/workloadbalancing/workload_matrix.css</value>
+
+            </list>
+        </property>
+        <property name="header">
+            <null/>
+        </property>
+        <property name="page" ref="WorkloadBalancing-Page"/>
+        <property name="dialogs">
+            <list>
+                <ref bean="Workload-Add-Dialog"/>
+                <ref bean="Workload-Capacity-Edit"/>
+                <ref bean="Workload-Unit-Edit"/>
+                <ref bean="Workload-Absentee-Edit"/>
+                <ref bean="Workload-ReassignUnit-Dialog"/>
+                <ref bean="Workload-LoadSimulation-Dialog"/>
+            </list>
+        </property>
+    </bean>
+
+</beans>
\ No newline at end of file
Index: coeus-impl/src/main/resources/edu/mit/kc/workloadbalancing/WorkloadBalancingPage.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- coeus-impl/src/main/resources/edu/mit/kc/workloadbalancing/WorkloadBalancingPage.xml	(revision )
+++ coeus-impl/src/main/resources/edu/mit/kc/workloadbalancing/WorkloadBalancingPage.xml	(revision )
@@ -0,0 +1,33 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!-- Copyright 2005-2013 The Kuali Foundation Licensed under the Educational 
+	Community License, Version 2.0 (the "License"); you may not use this file 
+	except in compliance with the License. You may obtain a copy of the License 
+	at http://www.opensource.org/licenses/ecl2.php Unless required by applicable 
+	law or agreed to in writing, software distributed under the License is distributed 
+	on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either 
+	express or implied. See the License for the specific language governing permissions 
+	and limitations under the License. -->
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans
+                    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
+
+    <bean id="WorkloadBalancing-Page" parent="WorkloadBalancing-Page-parentBean"/>
+    <bean id="WorkloadBalancing-Page-parentBean" parent="Uif-DocumentPage"
+          p:header.headerText="Work Load Balancing">
+        <property name="items">
+            <list merge="false">
+                <bean id="Workload-Table" parent="Kc-WorkloadLineItemTable" p:propertyName="workloadLineItems"
+                      p:order="10"/>
+                <ref bean="Workload-Simulation-SaveGroup"/>
+            </list>
+        </property>
+        <property name="header.lowerGroup">
+            <null/>
+        </property>
+        <property name="footer">
+            <null/>
+        </property>
+    </bean>
+
+</beans>
Index: coeus-impl/src/main/resources/edu/mit/kc/workloadbalancing/WorkloadAbsenteeComponents.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- coeus-impl/src/main/resources/edu/mit/kc/workloadbalancing/WorkloadAbsenteeComponents.xml	(revision )
+++ coeus-impl/src/main/resources/edu/mit/kc/workloadbalancing/WorkloadAbsenteeComponents.xml	(revision )
@@ -0,0 +1,249 @@
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:util="http://www.springframework.org/schema/util"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans
+                    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
+
+    <bean id="Workload-Absentee-Edit" parent="Uif-DialogGroup" p:retrieveViaAjax="true"
+          p:headerText="@{#form.workloadLineItemEdit.personName}" p:dialogCssClass="modal-lg">
+        <property name="destroyDialogOnHidden" value="true"/>
+        <property name="items">
+            <list>
+                <bean parent="Uif-VerticalBoxSection" p:headerText="Absent Tracker">
+                    <property name="items">
+                        <list>
+                            <ref bean="Workload-Absentee-Collection"/>
+                        </list>
+                    </property>
+                </bean>
+
+            </list>
+        </property>
+        <property name="footer.items">
+            <list>
+                <bean parent="Uif-DialogDismissButton" p:actionLabel="Close"/>
+            </list>
+        </property>
+    </bean>
+
+    <bean id="Workload-Absentee-Collection" parent="Uif-TableCollectionSection"
+          p:addWithDialog="true">
+        <property name="collectionObjectClass"
+                  value="edu.mit.kc.workloadbalancing.bo.AbsenteeWrapper"/>
+        <property name="propertyName" value="absenteeListEdit"/>
+        <property name="layoutManager.renderSequenceField" value="false"/>
+        <property name="layoutManager.generateAutoSequence" value="false"/>
+        <property name="layoutManager.richTable.render" value="false"/>
+        <property name="addWithDialogAction">
+            <bean parent="Uif-AddWithDialogAction" p:actionLabel="Add Absence"
+                  p:iconClass="icon-plus"/>
+        </property>
+
+        <property name="lineActions">
+            <list>
+                <bean parent="Uif-Action"
+                      p:actionScript="writeHiddenToForm('absenceEditItem', @{#index}); showDialog('Workload-AbsenceEdit-Dialog')"
+                      p:actionLabel="Edit"
+                      p:additionalCssClasses="btn-default btn-xs"/>
+                <bean parent="Uif-Action" p:methodToCall="deleteAbsence"
+                      p:actionLabel="Delete"
+                      p:additionalCssClasses="btn-default btn-xs"/>
+            </list>
+        </property>
+
+        <property name="items">
+            <list>
+                <bean parent="Workload-FromDate" p:readOnly="true"/>
+                <bean parent="Workload-ToDate" p:readOnly="true"/>
+            </list>
+        </property>
+
+        <property name="addLineDialog">
+            <bean parent="Uif-AddLineDialog" p:headerText="Add Absence"
+                  p:enterKeyAction="Workload-Absentee-Collection_add">
+                <property name="items">
+                    <list>
+                        <bean parent="Workload-FromDate"/>
+                        <bean parent="Workload-ToDate"/>
+                    </list>
+                </property>
+                <property name="footer.items">
+                    <list>
+                        <bean parent="Uif-AddLineAction-Dialog"
+                              p:methodToCall="addAbsence"
+                              p:actionLabel="Add Absence"/>
+                        <bean parent="Uif-DialogDismissButton" p:actionLabel="Cancel"/>
+                    </list>
+                </property>
+            </bean>
+        </property>
+
+    </bean>
+
+    <bean id="Workload-AbsenceEdit-Dialog" parent="Uif-DialogGroup" p:retrieveViaAjax="true"
+          p:headerText="Edit Absence" p:fieldBindingObjectPath="absenteeEdit"
+          p:enterKeyAction="Workload-EditAbsence-Button">
+        <property name="destroyDialogOnHidden" value="true"/>
+        <property name="items">
+            <list>
+                <bean parent="Workload-FromDate"/>
+                <bean parent="Workload-ToDate"/>
+            </list>
+        </property>
+        <property name="footer.items">
+            <list>
+                <bean parent="Uif-DialogDismissButton" p:actionLabel="Cancel"/>
+                <bean id="Workload-EditAbsence-Button" parent="Uif-PrimaryActionButton"
+                      p:actionLabel="Save Changes" p:methodToCall="updateAbsence"
+                      p:refreshId="Workload-Absentee-Collection"
+                      p:dialogDismissOption="REQUEST"
+                      p:performClientSideValidation="true"/>
+            </list>
+        </property>
+    </bean>
+
+    <bean id="Workload-FromDate" parent="Uif-HorizontalFieldGroup" p:label="From">
+        <property name="items">
+            <list>
+                <bean parent="Uif-InputField" p:required="true" p:fieldLabel.render="false"
+                      p:propertyName="absentee.leaveStartDate">
+                    <property name="control">
+                        <bean parent="Uif-DateControl"/>
+                    </property>
+                </bean>
+                <bean parent="Uif-InputField" p:required="true"
+                      p:defaultValue="5:00PM"
+                      p:propertyName="leaveStartHour">
+                    <property name="control">
+                        <bean parent="Uif-DropdownControl"
+                              p:options-ref="Workload-Absentee-Times"/>
+                    </property>
+                </bean>
+            </list>
+        </property>
+    </bean>
+
+    <bean id="Workload-ToDate" parent="Uif-HorizontalFieldGroup" p:label="To">
+        <property name="items">
+            <list>
+                <bean parent="Uif-InputField" p:required="true" p:fieldLabel.render="false"
+                      p:propertyName="absentee.leaveEndDate">
+                    <property name="control">
+                        <bean parent="Uif-DateControl"/>
+                    </property>
+                </bean>
+                <bean parent="Uif-InputField" p:required="true"
+                      p:defaultValue="8:00AM"
+                      p:propertyName="leaveEndHour">
+                    <property name="control">
+                        <bean parent="Uif-DropdownControl"
+                              p:options-ref="Workload-Absentee-Times"/>
+                    </property>
+                </bean>
+            </list>
+        </property>
+    </bean>
+
+    <util:list id="Workload-Absentee-Times">
+
+        <bean parent="Uif-KeyLabelPair" p:key="12:00AM" p:value="Midnight"/>
+        <bean parent="Uif-KeyLabelPair" p:key="12:15AM" p:value="12:15 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="12:30AM" p:value="12:30 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="12:45AM" p:value="12:45 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="1:00AM" p:value="1:00 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="1:15AM" p:value="1:15 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="1:30AM" p:value="1:30 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="1:45AM" p:value="1:45 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="2:00AM" p:value="2:00 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="2:15AM" p:value="2:15 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="2:30AM" p:value="2:30 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="2:45AM" p:value="2:45 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="3:00AM" p:value="3:00 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="3:15AM" p:value="3:15 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="3:30AM" p:value="3:30 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="3:45AM" p:value="3:45 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="4:00AM" p:value="4:00 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="4:15AM" p:value="4:15 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="4:30AM" p:value="4:30 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="4:45AM" p:value="4:45 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="5:00AM" p:value="5:00 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="5:15AM" p:value="5:15 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="5:30AM" p:value="5:30 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="5:45AM" p:value="5:45 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="6:00AM" p:value="6:00 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="6:15AM" p:value="6:15 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="6:30AM" p:value="6:30 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="6:45AM" p:value="6:45 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="7:00AM" p:value="7:00 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="7:15AM" p:value="7:15 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="7:30AM" p:value="7:30 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="7:45AM" p:value="7:45 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="8:00AM" p:value="8:00 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="8:15AM" p:value="8:15 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="8:30AM" p:value="8:30 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="8:45AM" p:value="8:45 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="9:00AM" p:value="9:00 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="9:15AM" p:value="9:15 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="9:30AM" p:value="9:30 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="9:45AM" p:value="9:45 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="10:00AM" p:value="10:00 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="10:15AM" p:value="10:15 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="10:30AM" p:value="10:30 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="10:45AM" p:value="10:45 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="11:00AM" p:value="11:00 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="11:15AM" p:value="11:15 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="11:30AM" p:value="11:30 AM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="11:45AM" p:value="11:45 AM"/>
+
+        <bean parent="Uif-KeyLabelPair" p:key="12:00PM" p:value="Noon"/>
+        <bean parent="Uif-KeyLabelPair" p:key="12:15PM" p:value="12:15 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="12:30PM" p:value="12:30 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="12:45PM" p:value="12:45 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="1:00PM" p:value="1:00 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="1:15PM" p:value="1:15 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="1:30PM" p:value="1:30 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="1:45PM" p:value="1:45 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="2:00PM" p:value="2:00 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="2:15PM" p:value="2:15 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="2:30PM" p:value="2:30 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="2:45PM" p:value="2:45 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="3:00PM" p:value="3:00 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="3:15PM" p:value="3:15 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="3:30PM" p:value="3:30 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="3:45PM" p:value="3:45 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="4:00PM" p:value="4:00 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="4:15PM" p:value="4:15 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="4:30PM" p:value="4:30 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="4:45PM" p:value="4:45 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="5:00PM" p:value="5:00 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="5:15PM" p:value="5:15 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="5:30PM" p:value="5:30 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="5:45PM" p:value="5:45 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="6:00PM" p:value="6:00 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="6:15PM" p:value="6:15 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="6:30PM" p:value="6:30 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="6:45PM" p:value="6:45 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="7:00PM" p:value="7:00 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="7:15PM" p:value="7:15 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="7:30PM" p:value="7:30 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="7:45PM" p:value="7:45 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="8:00PM" p:value="8:00 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="8:15PM" p:value="8:15 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="8:30PM" p:value="8:30 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="8:45PM" p:value="8:45 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="9:00PM" p:value="9:00 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="9:15PM" p:value="9:15 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="9:30PM" p:value="9:30 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="9:45PM" p:value="9:45 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="10:00PM" p:value="10:00 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="10:15PM" p:value="10:15 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="10:30PM" p:value="10:30 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="10:45PM" p:value="10:45 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="11:00PM" p:value="11:00 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="11:15PM" p:value="11:15 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="11:30PM" p:value="11:30 PM"/>
+        <bean parent="Uif-KeyLabelPair" p:key="11:45PM" p:value="11:45 PM"/>
+
+    </util:list>
+
+</beans>
\ No newline at end of file
Index: coeus-impl/src/main/java/edu/mit/kc/workloadbalancing/impl/WorkloadLineItemTable.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- coeus-impl/src/main/java/edu/mit/kc/workloadbalancing/impl/WorkloadLineItemTable.java	(date 1426561568000)
+++ coeus-impl/src/main/java/edu/mit/kc/workloadbalancing/impl/WorkloadLineItemTable.java	(revision )
@@ -1,10 +1,10 @@
 package edu.mit.kc.workloadbalancing.impl;
 
 
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.HashSet;
-import java.util.List;
+import java.util.*;
+
+import edu.mit.kc.workloadbalancing.core.WorkloadForm;
+import edu.mit.kc.workloadbalancing.util.WorkloadUtils;
 import org.apache.commons.beanutils.PropertyUtils;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
@@ -19,6 +19,7 @@
 import org.kuali.rice.krad.uif.container.GroupBase;
 import org.kuali.rice.krad.uif.lifecycle.ViewLifecycle;
 import org.kuali.rice.krad.uif.util.LifecycleElement;
+import org.kuali.rice.krad.uif.util.ObjectPropertyUtils;
 import org.kuali.rice.krad.uif.view.View;
 import edu.mit.kc.workloadbalancing.bo.WorkloadBalancing;
 
@@ -32,9 +33,9 @@
 	public static final String HIERARCHY_NAME = "Workload Balancing";
 
 	private String propertyName;
+    private String sponsorsPropertyPath = "sponsors";
 	private BindingInfo bindingInfo;
 	private LineItemRow headerRow;
-	private int numPeriodColumns;
 
 	private List<SponsorHierarchy> sponsorsUpdated;
 	private List<WorkloadBalancing> lineitemrows = new ArrayList<WorkloadBalancing>();
@@ -62,32 +63,25 @@
 			lineitemrows = (List<WorkloadBalancing>) (PropertyUtils
 					.getProperty(model, this.getBindingInfo().getBindingPath()));
 
+            Collections.sort(lineitemrows, new Comparator<WorkloadBalancing>() {
+                @Override
+                public int compare(WorkloadBalancing wl1, WorkloadBalancing wl2) {
+                    return wl1.getPersonName().compareTo(wl2.getPersonName());
+                }
+            });
+
 			HashMap<String, String> sponsorGroup = new HashMap<String, String>();
 			sponsorGroup.put("hierarchyName", HIERARCHY_NAME);
 
-			sponsorsUpdated = (List<SponsorHierarchy>) KcServiceLocator
-					.getService(BusinessObjectService.class)
-					.findMatchingOrderBy(SponsorHierarchy.class, sponsorGroup,
-							"level1", true);
-			List<SponsorHierarchy> sponsors = removeDuplicates(sponsorsUpdated);
+			List<String> sponsors = ObjectPropertyUtils.getPropertyValue(model, sponsorsPropertyPath);
 
 			headerRow = new LineItemRow();
 			headerRow.getCellContent().add("Contract Administrator");
 			headerRow.getCellContent().add("Capacity");
-			int columnNum = 0;
 
-			// Don't show the prev/next buttons if everything is being shown
-			// already
-			if (this.getHeader() != null
-					&& this.getHeader().getRightGroup() != null
-					&& numPeriodColumns >= sponsors.size()) {
-				this.getHeader().getRightGroup().setRender(false);
-			}
 
-			for (SponsorHierarchy sponsor : sponsors) {
-
-				headerRow.getCellContent().add(sponsor.getLevel1());
-				columnNum++;
+			for (String sponsor : sponsors) {
+            	headerRow.getCellContent().add(WorkloadUtils.formatSponsorName(sponsor));
 			}
 
 		} catch (Exception e) {
@@ -106,7 +100,15 @@
 		this.propertyName = propertyName;
 	}
 
+    public String getSponsorsPropertyPath() {
+        return sponsorsPropertyPath;
+    }
+
+    public void setSponsorsPropertyPath(String sponsorsPropertyPath) {
+        this.sponsorsPropertyPath = sponsorsPropertyPath;
+    }
+
-	@BeanTagAttribute
+    @BeanTagAttribute
 	public BindingInfo getBindingInfo() {
 		return bindingInfo;
 	}
@@ -119,15 +121,6 @@
 		return headerRow;
 	}
 
-	@BeanTagAttribute
-	public int getNumPeriodColumns() {
-		return numPeriodColumns;
-	}
-
-	public void setNumPeriodColumns(int numPeriodColumns) {
-		this.numPeriodColumns = numPeriodColumns;
-	}
-
 	public List<WorkloadBalancing> getLineitemrows() {
 		return lineitemrows;
 	}
@@ -136,24 +129,4 @@
 		this.lineitemrows = lineitemrows;
 	}
 
-	/**
-	 * Removes duplicate sponsorGroups for wlB headeRrow
-	 *
-	 */
-	
-	static List<SponsorHierarchy> removeDuplicates(List<SponsorHierarchy> list) {
-
-		List<SponsorHierarchy> result = new ArrayList<>();
-
-		HashSet<String> set = new HashSet<>();
-
-		for (SponsorHierarchy item : list) {
-
-			if (!set.contains(item.getLevel1())) {
-				result.add(item);
-				set.add(item.getLevel1());
-			}
-		}
-		return result;
-	}
 }
Index: coeus-impl/src/main/java/edu/mit/kc/workloadbalancing/bo/WorkloadBalancing.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- coeus-impl/src/main/java/edu/mit/kc/workloadbalancing/bo/WorkloadBalancing.java	(date 1426561568000)
+++ coeus-impl/src/main/java/edu/mit/kc/workloadbalancing/bo/WorkloadBalancing.java	(revision )
@@ -19,8 +19,6 @@
 	private WlCapacity wlCapacity;
 
 	private List<WlFlexibility> wlflexibilityList;
-	private List<SponsorHierarchy> sponsorList;
-	private HashMap<String, BigDecimal> wlflexibilityMap;
 
     public String getIndex() {
         return index;
@@ -90,19 +88,4 @@
         return (int)Math.ceil(this.getWlflexibilityList().size() / 2);
     }
 
-	public HashMap<String,BigDecimal> getWlflexibilityMap() {
-		return wlflexibilityMap;
-	}
-
-	public void setWlflexibilityMap(HashMap<String, BigDecimal> wlflexibilityMap) {
-		this.wlflexibilityMap = wlflexibilityMap;
-	}
-
-	public List<SponsorHierarchy> getSponsorList() {
-		return sponsorList;
-	}
-
-	public void setSponsorList(List<SponsorHierarchy> sponsorList) {
-		this.sponsorList = sponsorList;
-	}
 }
Index: coeus-impl/src/main/java/org/kuali/coeus/propdev/impl/workloadbalancing/WorkloadBalancingControllerBase.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- coeus-impl/src/main/java/org/kuali/coeus/propdev/impl/workloadbalancing/WorkloadBalancingControllerBase.java	(revision )
+++ coeus-impl/src/main/java/org/kuali/coeus/propdev/impl/workloadbalancing/WorkloadBalancingControllerBase.java	(revision )
@@ -0,0 +1,204 @@
+package org.kuali.coeus.propdev.impl.workloadbalancing;
+
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpServletResponse;
+import org.kuali.coeus.common.framework.ruleengine.KcBusinessRulesEngine;
+import org.kuali.coeus.sys.framework.controller.KcCommonControllerService;
+import org.kuali.coeus.sys.framework.controller.UifExportControllerService;
+import org.kuali.coeus.sys.framework.gv.GlobalVariableService;
+import org.kuali.rice.core.api.config.property.ConfigurationService;
+import org.kuali.rice.krad.data.DataObjectService;
+import org.kuali.rice.krad.document.TransactionalDocumentControllerService;
+import org.kuali.rice.krad.web.form.UifFormBase;
+import org.kuali.rice.krad.web.service.CollectionControllerService;
+import org.kuali.rice.krad.web.service.FileControllerService;
+import org.kuali.rice.krad.web.service.ModelAndViewService;
+import org.kuali.rice.krad.web.service.NavigationControllerService;
+import org.kuali.rice.krad.web.service.QueryControllerService;
+import org.kuali.rice.krad.web.service.RefreshControllerService;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.beans.factory.annotation.Qualifier;
+import org.springframework.validation.BindingResult;
+import org.springframework.web.bind.annotation.ModelAttribute;
+import org.springframework.web.servlet.ModelAndView;
+import edu.mit.kc.workloadbalancing.core.WorkloadForm;
+
+public class WorkloadBalancingControllerBase {
+
+	@Autowired
+	@Qualifier("uifExportControllerService")
+	private UifExportControllerService uifExportControllerService;
+
+	@Autowired
+	@Qualifier("kcCommonControllerService")
+	private KcCommonControllerService kcCommonControllerService;
+
+	@Autowired
+	@Qualifier("transactionalDocumentControllerService")
+	private TransactionalDocumentControllerService transactionalDocumentControllerService;
+
+	@Autowired
+	@Qualifier("collectionControllerService")
+	private CollectionControllerService collectionControllerService;
+
+	@Autowired
+	@Qualifier("fileControllerService")
+	private FileControllerService fileControllerService;
+
+	@Autowired
+	@Qualifier("modelAndViewService")
+	private ModelAndViewService modelAndViewService;
+
+	@Autowired
+	@Qualifier("navigationControllerService")
+	private NavigationControllerService navigationControllerService;
+
+	@Autowired
+	@Qualifier("queryControllerService")
+	private QueryControllerService queryControllerService;
+
+	@Autowired
+	@Qualifier("refreshControllerService")
+	private RefreshControllerService refreshControllerService;
+
+	@Autowired
+	@Qualifier("dataObjectService")
+	private DataObjectService dataObjectService;
+
+	@Autowired
+	@Qualifier("kcBusinessRulesEngine")
+	private KcBusinessRulesEngine kcBusinessRulesEngine;
+
+	@Autowired
+	@Qualifier("kualiConfigurationService")
+	private ConfigurationService kualiConfigurationService;
+
+	@Autowired
+	@Qualifier("globalVariableService")
+	private GlobalVariableService globalVariableService;
+
+
+	public ModelAndView save(WorkloadForm form, BindingResult result,
+			HttpServletRequest request, HttpServletResponse response)
+			throws Exception {
+
+		getDataObjectService().save(form);
+		return getModelAndViewService().getModelAndView(form);
+	}
+
+	public UifExportControllerService getUifExportControllerService() {
+		return uifExportControllerService;
+	}
+
+	public void setUifExportControllerService(
+			UifExportControllerService uifExportControllerService) {
+		this.uifExportControllerService = uifExportControllerService;
+	}
+
+	public KcCommonControllerService getKcCommonControllerService() {
+		return kcCommonControllerService;
+	}
+
+	public void setKcCommonControllerService(
+			KcCommonControllerService kcCommonControllerService) {
+		this.kcCommonControllerService = kcCommonControllerService;
+	}
+
+	public TransactionalDocumentControllerService getTransactionalDocumentControllerService() {
+		return transactionalDocumentControllerService;
+	}
+
+	public void setTransactionalDocumentControllerService(
+			TransactionalDocumentControllerService transactionalDocumentControllerService) {
+		this.transactionalDocumentControllerService = transactionalDocumentControllerService;
+	}
+
+	public CollectionControllerService getCollectionControllerService() {
+		return collectionControllerService;
+	}
+
+	public void setCollectionControllerService(
+			CollectionControllerService collectionControllerService) {
+		this.collectionControllerService = collectionControllerService;
+	}
+
+	public FileControllerService getFileControllerService() {
+		return fileControllerService;
+	}
+
+	public void setFileControllerService(
+			FileControllerService fileControllerService) {
+		this.fileControllerService = fileControllerService;
+	}
+
+	public ModelAndViewService getModelAndViewService() {
+		return modelAndViewService;
+	}
+
+	public void setModelAndViewService(ModelAndViewService modelAndViewService) {
+		this.modelAndViewService = modelAndViewService;
+	}
+
+	public NavigationControllerService getNavigationControllerService() {
+		return navigationControllerService;
+	}
+
+	public void setNavigationControllerService(
+			NavigationControllerService navigationControllerService) {
+		this.navigationControllerService = navigationControllerService;
+	}
+
+	public QueryControllerService getQueryControllerService() {
+		return queryControllerService;
+	}
+
+	public void setQueryControllerService(
+			QueryControllerService queryControllerService) {
+		this.queryControllerService = queryControllerService;
+	}
+
+	public RefreshControllerService getRefreshControllerService() {
+		return refreshControllerService;
+	}
+
+	public void setRefreshControllerService(
+			RefreshControllerService refreshControllerService) {
+		this.refreshControllerService = refreshControllerService;
+	}
+
+	public DataObjectService getDataObjectService() {
+		return dataObjectService;
+	}
+
+	public void setDataObjectService(DataObjectService dataObjectService) {
+		this.dataObjectService = dataObjectService;
+	}
+
+	public KcBusinessRulesEngine getKcBusinessRulesEngine() {
+		return kcBusinessRulesEngine;
+	}
+
+	public void setKcBusinessRulesEngine(
+			KcBusinessRulesEngine kcBusinessRulesEngine) {
+		this.kcBusinessRulesEngine = kcBusinessRulesEngine;
+	}
+
+	public ConfigurationService getKualiConfigurationService() {
+		return kualiConfigurationService;
+	}
+
+	public void setKualiConfigurationService(
+			ConfigurationService kualiConfigurationService) {
+		this.kualiConfigurationService = kualiConfigurationService;
+	}
+
+	public GlobalVariableService getGlobalVariableService() {
+		return globalVariableService;
+	}
+
+	public void setGlobalVariableService(
+			GlobalVariableService globalVariableService) {
+		this.globalVariableService = globalVariableService;
+	}
+
+}
Index: coeus-impl/src/main/resources/edu/mit/kc/workloadbalancing/WorkloadUnitComponents.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- coeus-impl/src/main/resources/edu/mit/kc/workloadbalancing/WorkloadUnitComponents.xml	(revision )
+++ coeus-impl/src/main/resources/edu/mit/kc/workloadbalancing/WorkloadUnitComponents.xml	(revision )
@@ -0,0 +1,183 @@
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans
+                    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
+
+
+    <bean id="Workload-Unit-Edit" parent="Uif-DialogGroup" p:retrieveViaAjax="true"
+          p:headerText="@{#form.workloadLineItemEdit.personName}" p:dialogCssClass="modal-lg">
+        <property name="destroyDialogOnHidden" value="true"/>
+        <property name="items">
+            <list>
+                <bean parent="Workload-Simulation-Message"/>
+                <bean parent="Uif-VerticalBoxSection" p:headerText="Unit Assignments">
+                    <property name="items">
+                        <list>
+                            <ref bean="Workload-Unit-Collection"/>
+                        </list>
+                    </property>
+                </bean>
+            </list>
+        </property>
+        <property name="footer.items">
+            <list>
+                <bean parent="Uif-DialogDismissButton" p:actionLabel="Close"/>
+            </list>
+        </property>
+    </bean>
+
+    <bean id="Workload-Unit-Collection" parent="Uif-TableCollectionSection"
+          p:addWithDialog="true">
+        <property name="collectionObjectClass"
+                  value="org.kuali.coeus.common.framework.unit.admin.UnitAdministrator"/>
+        <property name="propertyName" value="unitListEdit"/>
+        <property name="layoutManager.renderSequenceField" value="false"/>
+        <property name="layoutManager.generateAutoSequence" value="false"/>
+        <property name="layoutManager.richTable.render" value="false"/>
+        <property name="addWithDialogAction">
+            <bean parent="Uif-AddWithDialogAction" p:actionLabel="Add Assignment"
+                  p:iconClass="icon-plus"/>
+        </property>
+
+        <property name="items">
+            <list>
+                <bean parent="Uif-InputField" p:label="Unit Name"
+                      p:propertyName="unit.unitName" p:readOnly="true"/>
+            </list>
+        </property>
+
+        <property name="lineActions">
+            <list>
+                <bean parent="Uif-Action"
+                      p:actionScript="writeHiddenToForm('reassignUnitItem', @{#index}); showDialog('Workload-ReassignUnit-Dialog')"
+                      p:actionLabel="Reassign Unit"
+                      p:additionalCssClasses="btn-default btn-xs"/>
+                <bean parent="Uif-Action" p:methodToCall="deleteUnitAssignment"
+                      p:actionLabel="Unassign Unit"
+                      p:additionalCssClasses="btn-default btn-xs"/>
+            </list>
+        </property>
+
+        <property name="addLineDialog">
+            <ref bean="Workload-Unit-Add-Dialog"/>
+        </property>
+    </bean>
+
+    <bean id="Workload-Unit-Add-Dialog" parent="Uif-AddLineDialog"
+          p:retrieveViaAjax="true" p:enterKeyAction="Workload-Unit-Collection_add"
+          p:headerText="Add Unit Assignments">
+        <property name="items">
+            <list>
+                <bean parent="Uif-InputField" p:propertyName="unitNumber"
+                      p:label="Unit Number" p:required="true"
+                      p:enableAutoDirectInquiry="false">
+                    <property name="quickfinder">
+                        <bean parent="Uif-QuickFinder" p:returnByScript="true"/>
+                    </property>
+                    <property name="propertyNamesForAdditionalDisplay"
+                              value="unit.unitName"/>
+                    <property name="attributeQuery">
+                        <bean parent="Uif-AttributeQueryConfig"
+                              p:dataObjectClassName="org.kuali.coeus.common.framework.unit.Unit"
+                              p:queryFieldMapping="unitNumber:unitNumber"
+                              p:returnFieldMapping="unitName:unit.unitName"/>
+                    </property>
+                </bean>
+
+                <bean p:hidden="@{#lp.unitNumber eq null or #lp.unitNumber eq ''}"
+                      p:fieldLabel.hidden="true"
+                      id="Workload-Unit-AssignedTo"
+                      parent="Uif-MessageField" p:label="Unit currently assigned to"
+                      p:refreshWhenChangedPropertyNames="#lp.unitNumber"
+                      p:messageText="@{#form.unitAssignedTo}"/>
+
+            </list>
+        </property>
+        <property name="footer.items">
+            <list>
+                <bean parent="Uif-AddLineAction-Dialog" p:dialogDismissOption=""
+                      p:successCallback="Kc.Dialog.closeDialogWithoutError('Workload-Unit-Add-Dialog');"
+                      p:performClientSideValidation="true"
+                      p:methodToCall="addUnitAssignment"
+                      p:actionLabel="Add Assignment"/>
+                <bean parent="Uif-DialogDismissButton" p:actionLabel="Cancel"/>
+            </list>
+        </property>
+    </bean>
+
+    <bean id="Workload-ReassignUnit-Dialog" parent="Uif-DialogGroup" p:retrieveViaAjax="true"
+          p:headerText="Reassign Unit" p:refreshWhenChangedPropertyNames="reassignPersonInfo.tempUserName"
+          p:enterKeyAction="Workload-Reassign-Button">
+        <property name="destroyDialogOnHidden" value="true"/>
+        <property name="items">
+            <list>
+
+                <bean parent="Uif-VerticalBoxSection"
+                      p:headerText="@{#form.unitAssignmentEdit.unit.unitName}">
+                    <property name="items">
+                        <list>
+                            <bean parent="Uif-InputField" p:label="Unit ID" p:labelLeft="true"
+                                  p:readOnly="true" p:propertyName="unitAssignmentEdit.unitNumber"
+                                  p:enableAutoQuickfinder="false"
+                                  p:enableAutoDirectInquiry="false"/>
+                            <bean parent="Uif-InputField" p:label="Organization Id" p:labelLeft="true"
+                                  p:readOnly="true" p:propertyName="unitAssignmentEdit.unit.organizationId"
+                                  p:enableAutoQuickfinder="false"/>
+                            <bean parent="Uif-MessageField" p:label="Currently Assigned To" p:labelLeft="true"
+                                  p:messageText="@{workloadLineItemEdit.personName} (@{workloadLineItemEdit.userName})"/>
+
+                            <bean id="Workload-Reassign-Info"
+                                  parent="Uif-VerticalBoxGroup"
+                                  p:additionalCssClasses="well well-sm workload-reassign-field">
+                                <property name="items">
+                                    <list>
+                                        <bean parent="Uif-InputField" p:required="true"
+                                              p:label="Reassign this unit to user"
+                                              p:propertyName="reassignPersonInfo.tempUserName">
+                                            <property name="control">
+                                                <bean parent="Uif-TextControl"/>
+                                            </property>
+                                            <property name="quickfinder">
+                                                <bean parent="Uif-QuickFinder" p:returnByScript="true"
+                                                      p:fieldConversions="personId:reassignPersonInfo.tempPersonId,fullName:reassignPersonInfo.tempPersonName,userName:reassignPersonInfo.tempUserName"
+                                                      p:dataObjectClassName="org.kuali.coeus.common.framework.person.KcPerson"/>
+                                            </property>
+                                        </bean>
+
+                                        <bean parent="Uif-InputField"
+                                              p:hidden="@{#form.reassignPersonInfo.tempPersonId eq ''}"
+                                              p:labelLeft="true" p:label="Name"
+                                              p:propertyName="reassignPersonInfo.tempPersonName" p:readOnly="true">
+                                        </bean>
+
+                                        <bean parent="Uif-InputField"
+                                              p:hidden="@{#form.reassignPersonInfo.tempPersonId eq ''}"
+                                              p:labelLeft="true" p:label="Person Id"
+                                              p:propertyName="reassignPersonInfo.tempPersonId" p:readOnly="true">
+                                        </bean>
+                                    </list>
+                                </property>
+                            </bean>
+
+
+                        </list>
+                    </property>
+                </bean>
+
+            </list>
+        </property>
+        <property name="footer.items">
+            <list>
+
+                <bean parent="Uif-DialogDismissButton" p:actionLabel="Cancel"/>
+
+                <bean id="Workload-Reassign-Button" parent="Uif-PrimaryActionButton" p:actionLabel="Reassign"
+                      p:methodToCall="reassignUnitAssignment"
+                      p:successCallback="Kc.Dialog.closeDialogWithoutError('Workload-ReassignUnit-Dialog')"
+                      p:refreshId="Workload-Unit-Collection" p:defaultEnterKeyAction="true"
+                      p:performClientSideValidation="true"/>
+            </list>
+        </property>
+    </bean>
+
+</beans>
\ No newline at end of file
Index: coeus-impl/src/main/resources/org/kuali/kra/CoreSpringBeans.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- coeus-impl/src/main/resources/org/kuali/kra/CoreSpringBeans.xml	(date 1426561568000)
+++ coeus-impl/src/main/resources/org/kuali/kra/CoreSpringBeans.xml	(revision )
@@ -943,9 +943,14 @@
                 <value>classpath:edu/mit/kc/workloadbalancing/datadictionary/WlCapacity.xml</value>
                 <value>classpath:edu/mit/kc/workloadbalancing/datadictionary/WlFlexibility.xml</value>
                 <value>classpath:edu/mit/kc/workloadbalancing/datadictionary/WlSimHeader.xml</value>
-                <value>classpath:edu/mit/kc/workloadbalancing/WorkloadLineItemTableCommon.xml</value>
-                <value>classpath:edu/mit/kc/workloadbalancing/WorkLoadInitiatePage.xml</value>
-                <value>classpath:edu/mit/kc/workloadbalancing/WorkLoadInitiateView.xml</value>
+                <value>classpath:edu/mit/kc/workloadbalancing/WorkloadLineItemTable.xml</value>
+                <value>classpath:edu/mit/kc/workloadbalancing/WorkloadBalancingPage.xml</value>
+                <value>classpath:edu/mit/kc/workloadbalancing/WorkloadBalancingView.xml</value>
+                <value>classpath:edu/mit/kc/workloadbalancing/WorkloadBalancingComponents.xml</value>
+                <value>classpath:edu/mit/kc/workloadbalancing/WorkloadAbsenteeComponents.xml</value>
+                <value>classpath:edu/mit/kc/workloadbalancing/WorkloadSimulationComponents.xml</value>
+                <value>classpath:edu/mit/kc/workloadbalancing/WorkloadUnitComponents.xml</value>
+
                 <value>classpath:org/kuali/kra/datadictionary/krad/common/KcApplicationHeader.xml</value>
                 <value>classpath:org/kuali/kra/datadictionary/krad/common/KcComponents.xml</value>
                 <value>classpath:org/kuali/kra/datadictionary/krad/common/LandingPageView.xml</value>
Index: coeus-impl/src/main/java/org/kuali/coeus/propdev/impl/workloadbalancing/WorkLoadCommonController.java
===================================================================
--- coeus-impl/src/main/java/org/kuali/coeus/propdev/impl/workloadbalancing/WorkLoadCommonController.java	(date 1426561568000)
+++ coeus-impl/src/main/java/org/kuali/coeus/propdev/impl/workloadbalancing/WorkLoadCommonController.java	(date 1426561568000)
@@ -1,786 +0,0 @@
-/**
- * Copyright 2005-2014 The Kuali Foundation
- *
- * Licensed under the Educational Community License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.opensource.org/licenses/ecl2.php
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package org.kuali.coeus.propdev.impl.workloadbalancing;
-
-
-import edu.mit.kc.workloadbalancing.bo.*;
-import edu.mit.kc.workloadbalancing.core.WorkloadForm;
-import org.apache.commons.lang.StringUtils;
-import org.kuali.coeus.common.framework.person.KcPerson;
-import org.kuali.coeus.common.framework.person.KcPersonService;
-import org.kuali.coeus.common.framework.unit.admin.UnitAdministrator;
-import org.kuali.rice.core.api.criteria.QueryByCriteria;
-import org.kuali.rice.core.api.criteria.QueryResults;
-import org.kuali.rice.krad.data.PersistenceOption;
-import org.kuali.rice.krad.uif.UifParameters;
-import org.kuali.rice.krad.uif.field.AttributeQueryResult;
-import org.kuali.rice.krad.uif.util.ObjectPropertyUtils;
-import org.kuali.rice.krad.web.controller.MethodAccessible;
-import org.kuali.rice.krad.web.form.UifFormBase;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.beans.factory.annotation.Qualifier;
-import org.springframework.stereotype.Controller;
-import org.springframework.transaction.annotation.Transactional;
-import org.springframework.validation.BindingResult;
-import org.springframework.web.bind.annotation.ModelAttribute;
-import org.springframework.web.bind.annotation.RequestMapping;
-import org.springframework.web.bind.annotation.ResponseBody;
-import org.springframework.web.servlet.ModelAndView;
-
-import javax.servlet.http.HttpServletRequest;
-import javax.servlet.http.HttpServletResponse;
-import java.math.BigDecimal;
-import java.sql.Timestamp;
-import java.text.SimpleDateFormat;
-import java.util.*;
-
-@Controller("workLoadCommonController")
-@RequestMapping(value = "/workloadbalancingcommon")
-public class WorkLoadCommonController extends WorkLoadControllerBase {
-
-    @Autowired
-    @Qualifier("kcPersonService")
-    private KcPersonService kcPersonService;
-
-    private static Map<Class, Class> simulationClassMap;
-
-    static {
-        simulationClassMap = new HashMap<>();
-        simulationClassMap.put(WlCapacity.class, WlSimCapacity.class);
-        simulationClassMap.put(WlFlexibility.class, WlSimFlexibility.class);
-        simulationClassMap.put(UnitAdministrator.class, WlSimUnitAssignment.class);
-    }
-
-    ;
-
-    @Transactional
-    @RequestMapping(params = "methodToCall=defaultMapping")
-    public ModelAndView defaultMapping(
-            @ModelAttribute("KualiForm") WorkloadForm form,
-            BindingResult result, HttpServletRequest request,
-            HttpServletResponse response) {
-        return getTransactionalDocumentControllerService().start(form);
-    }
-
-    protected UifFormBase createInitialForm(HttpServletRequest request) {
-        WorkloadForm form = new WorkloadForm();
-        return form;
-    }
-
-    @Transactional
-    @RequestMapping(params = "methodToCall=start")
-    public ModelAndView start(
-            @ModelAttribute("KualiForm") WorkloadForm form,
-            BindingResult result, HttpServletRequest request,
-            HttpServletResponse response) throws Exception {
-        updateWorkloadItems(form);
-        return getRefreshControllerService().refresh(form);
-    }
-
-    @ModelAttribute(value = "KualiForm")
-    public UifFormBase initForm(HttpServletRequest request,
-                                HttpServletResponse response) throws Exception {
-        UifFormBase form = getKcCommonControllerService().initForm(
-                this.createInitialForm(request), request, response);
-        return form;
-    }
-
-    private void updateWorkloadItems(WorkloadForm form) {
-        form.getWorkloadLineItems().clear();
-
-        List<WlCapacity> capacities = findAll(WlCapacity.class, form);
-        WorkloadBalancing workloadLineItem;
-
-        for (WlCapacity capacity : capacities) {
-            workloadLineItem = new WorkloadBalancing();
-            workloadLineItem.setAdminId(capacity.getPersonId());
-            workloadLineItem.setWlCapacity(capacity);
-
-            HashMap<String, String> criteria = new HashMap<String, String>();
-            criteria.put("personId", capacity.getPersonId());
-/*            QueryByCriteria queryByCriteria =
-                    QueryByCriteria.Builder.andAttributes(flexibilityPk).setOrderByAscending("sponsorGroup").build();*/
-            List<WlFlexibility> flexibilities = findMatching(WlFlexibility.class, criteria, form);
-
-            if (form.getFlexibilities().isEmpty()) {
-                form.setFlexibilities(flexibilities);
-            }
-
-            workloadLineItem.setWlflexibilityList(flexibilities);
-
-            KcPerson person = kcPersonService.getKcPersonByPersonId(capacity.getPersonId());
-            workloadLineItem.setPersonName(person.getFullName());
-            workloadLineItem.setUserName(person.getUserName());
-
-            // TODO unknown if this is non-simulation relevant only
-            List<WlAbsentee> absences = getDataObjectService().findMatching(WlAbsentee.class,
-                    QueryByCriteria.Builder.andAttributes(criteria).build()).getResults();
-
-            Date currentDate = new Date();
-            for (WlAbsentee absence: absences) {
-                if (currentDate.getTime() > absence.getLeaveStartDate().getTime()
-                        && currentDate.getTime() < absence.getLeaveEndDate().getTime()) {
-                    workloadLineItem.setCurrentlyAbsent(true);
-                    break;
-                }
-            }
-
-            HashMap<String, BigDecimal> fcInput = new HashMap<>();
-
-            for (WlFlexibility sponsor : flexibilities) {
-                fcInput.put(sponsor.getSponsorGroup(), sponsor.getFlexibility());
-            }
-
-            workloadLineItem.setWlflexibilityMap(fcInput);
-
-            form.getWorkloadLineItems().add(workloadLineItem);
-        }
-    }
-
-    @Transactional
-    @RequestMapping(params = "methodToCall=refresh")
-    public ModelAndView refresh(@ModelAttribute("KualiForm") WorkloadForm form, BindingResult result, HttpServletRequest request, HttpServletResponse response)
-            throws Exception {
-        String refreshId = request.getParameter("updateComponentId");
-        String editLineItem = request.getParameter("editLineItem");
-
-        if (refreshId.equals("WorkLoad-Table") || refreshId.equals("WorkLoad-InitiatePage")) {
-            updateWorkloadItems(form);
-
-        } else if (StringUtils.isNotBlank(editLineItem)) {
-            int index = Integer.valueOf(editLineItem);
-            form.setWorkloadLineItemEdit(form.getWorkloadLineItems().get(index));
-            String personId = form.getWorkloadLineItemEdit().getWlCapacity().getPersonId();
-
-            if (refreshId.equals("Workload-Unit-Edit")) {
-                updateUnitAssignmentList(form, personId);
-            } else if (refreshId.equals("Workload-Absentee-Edit")) {
-                updateAbsenteeList(form, personId);
-            }
-
-        } else if (refreshId.equals("Workload-ReassignUnit-Dialog")) {
-            String reassignUnitItem = request.getParameter("reassignUnitItem");
-            int index = Integer.valueOf(reassignUnitItem);
-            UnitAdministrator unit = form.getUnitListEdit().get(index);
-            form.setUnitAssignmentEdit(unit);
-            form.setUnitAssignmentEditIndex(index);
-        } else if (refreshId.equals("Workload-Add-Dialog") && StringUtils.isNotBlank(form.getTempUserName())) {
-            KcPerson person = kcPersonService.getKcPersonByUserName(form.getTempUserName());
-            if (person != null) {
-                form.setTempPersonId(person.getPersonId());
-                form.setTempPersonName(person.getFullName());
-            } else {
-                form.setTempPersonId("");
-                form.setTempPersonName("");
-            }
-        } else if (refreshId.equals("Workload-AbsenceEdit-Dialog")) {
-            String absenceItemIndex = request.getParameter("absenceEditItem");
-            int index = Integer.valueOf(absenceItemIndex);
-            AbsenteeWrapper absenteeWrapper = form.getAbsenteeListEdit().get(index);
-            form.setAbsenteeEdit(absenteeWrapper);
-        }
-
-        return getRefreshControllerService().refresh(form);
-    }
-
-    private void updateUnitAssignmentList(WorkloadForm form, String personId) {
-        form.getUnitListEdit().clear();
-        Map<String, String> criteria = new HashMap<String, String>();
-        criteria.put("personId", personId);
-        criteria.put("unitAdministratorTypeCode", "2");
-        List<UnitAdministrator> unitAssignments = findMatching(UnitAdministrator.class, criteria, form);
-
-        form.getUnitListEdit().addAll(unitAssignments);
-    }
-
-    private void updateAbsenteeList(WorkloadForm form, String personId) {
-        form.getAbsenteeListEdit().clear();
-        Map<String, Object> criteria = new HashMap<String, Object>();
-        criteria.put("personId", personId);
-        QueryResults<WlAbsentee> absentees = getDataObjectService().findMatching(WlAbsentee.class,
-                QueryByCriteria.Builder.andAttributes(criteria).build());
-
-        for (WlAbsentee absentee : absentees.getResults()) {
-            AbsenteeWrapper absenteeWrapper = new AbsenteeWrapper(absentee);
-            absenteeWrapper.setLeaveStartHour(translateDateToTimeKey(absentee.getLeaveStartDate()));
-            absenteeWrapper.setLeaveEndHour(translateDateToTimeKey(absentee.getLeaveEndDate()));
-            form.getAbsenteeListEdit().add(absenteeWrapper);
-        }
-    }
-
-    private String translateDateToTimeKey(Timestamp date) {
-        SimpleDateFormat hourFormat = new SimpleDateFormat("hh:mma");
-        return hourFormat.format(date);
-    }
-
-    @Transactional
-    @RequestMapping(params = "methodToCall=addAdministrator")
-    public ModelAndView addAdministrator(@ModelAttribute("KualiForm") WorkloadForm form, BindingResult result, HttpServletRequest request, HttpServletResponse response)
-            throws Exception {
-        String personId = null;
-        KcPerson person = null;
-        if (!StringUtils.isBlank(form.getTempUserName())) {
-            person = kcPersonService.getKcPersonByUserName(form.getTempUserName());
-            if (person != null) {
-                personId = person.getPersonId();
-            }
-        }
-
-        if (StringUtils.isBlank(personId)) {
-            getGlobalVariableService().getMessageMap().putError("tempUserName", "workload.error.missingPerson");
-            form.setUpdateComponentId("Workload-Add-Dialog");
-            return getRefreshControllerService().refresh(form);
-        }
-
-
-        HashMap<String, String> attributes = new HashMap<String, String>();
-        attributes.put("personId", personId);
-        List<WlCapacity> existingCapacity = findMatching(WlCapacity.class, attributes, form);
-
-        if (!existingCapacity.isEmpty()) {
-            getGlobalVariableService().getMessageMap().putError("tempUserName", "workload.error.duplicatePerson");
-            form.setUpdateComponentId("Workload-Add-Dialog");
-            return getRefreshControllerService().refresh(form);
-        }
-
-        WorkloadBalancing workloadLineItem = new WorkloadBalancing();
-
-        WlCapacity newCapacity = new WlCapacity();
-        newCapacity.setPersonId(personId);
-        newCapacity.setCapacity(0);
-
-        if (!form.isSimulationMode()) {
-            newCapacity = getDataObjectService().save(newCapacity, PersistenceOption.FLUSH);
-        }
-
-        workloadLineItem.setWlflexibilityList(new ArrayList<WlFlexibility>());
-
-        for (WlFlexibility flexibility : form.getFlexibilities()) {
-            WlFlexibility newFlexibility = new WlFlexibility();
-            newFlexibility.setPersonId(personId);
-            newFlexibility.setSponsorGroup(flexibility.getSponsorGroup());
-
-            if (!form.isSimulationMode()) {
-                newFlexibility = getDataObjectService().save(newFlexibility);
-            }
-
-            workloadLineItem.getWlflexibilityList().add(newFlexibility);
-        }
-
-        if (!form.isSimulationMode()) {
-            getDataObjectService().flush(WlFlexibility.class);
-        }
-
-        workloadLineItem.setWlCapacity(newCapacity);
-        workloadLineItem.setAdminId(personId);
-        workloadLineItem.setPersonName(person.getFullName());
-        workloadLineItem.setUserName(person.getUserName());
-
-        HashMap<String, BigDecimal> fcInput = new HashMap<>();
-
-        for (WlFlexibility sponsor : workloadLineItem.getWlflexibilityList()) {
-            fcInput.put(sponsor.getSponsorGroup(), sponsor.getFlexibility());
-        }
-        workloadLineItem.setWlflexibilityMap(fcInput);
-
-        form.getWorkloadLineItems().add(workloadLineItem);
-
-        form.setTempPersonId("");
-        form.setTempPersonName("");
-        form.setTempUserName("");
-
-        if (form.isSimulationMode()) {
-            updateFlexCapacitySimulationData(form);
-        }
-
-        return getRefreshControllerService().refresh(form);
-    }
-
-    @Transactional
-    @RequestMapping(params = "methodToCall=deleteAdministrator")
-    public ModelAndView deleteAdministrator(@ModelAttribute("KualiForm") WorkloadForm form, BindingResult result, HttpServletRequest request, HttpServletResponse response)
-            throws Exception {
-        String deleteLineItem = request.getParameter("deleteLineItem");
-        WorkloadBalancing lineItem = form.getWorkloadLineItems().get(Integer.valueOf(deleteLineItem));
-
-        if (!form.isSimulationMode()) {
-            getDataObjectService().delete(lineItem.getWlCapacity());
-            for (WlFlexibility flexibility : lineItem.getWlflexibilityList()) {
-                getDataObjectService().delete(flexibility);
-            }
-
-            Map<String, Object> criteria = new HashMap<String, Object>();
-            criteria.put("personId", lineItem.getAdminId());
-            getDataObjectService().deleteMatching(WlAbsentee.class,
-                    QueryByCriteria.Builder.andAttributes(criteria).build());
-
-            criteria.put("unitAdministratorTypeCode", "2");
-            getDataObjectService().deleteMatching(UnitAdministrator.class,
-                    QueryByCriteria.Builder.andAttributes(criteria).build());
-        }
-
-        form.getWorkloadLineItems().remove(lineItem);
-
-        if (form.isSimulationMode()) {
-            updateFlexCapacitySimulationData(form);
-        }
-
-        return getRefreshControllerService().refresh(form);
-    }
-
-    @Transactional
-    @RequestMapping(params = "methodToCall=saveFlexCapacity")
-    public ModelAndView saveFlexCapacity(@ModelAttribute("KualiForm") WorkloadForm form, BindingResult result, HttpServletRequest request, HttpServletResponse response)
-            throws Exception {
-        WlCapacity capacity = form.getWorkloadLineItemEdit().getWlCapacity();
-
-        if (!form.isSimulationMode()) {
-            getDataObjectService().save(capacity);
-
-            List<WlFlexibility> flexibilityList = form.getWorkloadLineItemEdit().getWlflexibilityList();
-            for (WlFlexibility flexibility : flexibilityList) {
-                getDataObjectService().save(flexibility);
-            }
-        }
-        else {
-            updateFlexCapacitySimulationData(form);
-        }
-
-        return getModelAndViewService().getModelAndView(form);
-    }
-
-    @Transactional
-    @RequestMapping(params = "methodToCall=addAbsence")
-    public ModelAndView addAbsence(@ModelAttribute("KualiForm") WorkloadForm form, BindingResult result, HttpServletRequest request, HttpServletResponse response)
-            throws Exception {
-        String personId = form.getWorkloadLineItemEdit().getWlCapacity().getPersonId();
-
-        ModelAndView modelAndView = getCollectionControllerService().addLine(form);
-        AbsenteeWrapper wrapper = ((AbsenteeWrapper) form.getAddedCollectionItems().get(form.getAddedCollectionItems().size() - 1));
-
-        WlAbsentee newAbsentee = wrapper.getAbsentee();
-        newAbsentee.setPersonId(personId);
-        newAbsentee.setLeaveStartDate(translateTimeToDate(newAbsentee.getLeaveStartDate(), wrapper.getLeaveStartHour()));
-        newAbsentee.setLeaveEndDate(translateTimeToDate(newAbsentee.getLeaveEndDate(), wrapper.getLeaveEndHour()));
-        getDataObjectService().save(newAbsentee);
-
-        updateAbsenteeList(form, personId);
-
-        return modelAndView;
-    }
-
-    private Timestamp translateTimeToDate(Timestamp date, String time) {
-        Calendar cal = Calendar.getInstance();
-        cal.setTime(date);
-        String[] timeStrings = time.split(":");
-        cal.set(Calendar.HOUR, Integer.valueOf(timeStrings[0]));
-        cal.set(Calendar.MINUTE, Integer.valueOf(timeStrings[1].substring(0, 2)));
-        if (timeStrings[1].substring(2).equals("AM")) {
-            cal.set(Calendar.AM_PM, Calendar.AM);
-        } else {
-            cal.set(Calendar.AM_PM, Calendar.PM);
-        }
-
-        return new Timestamp(cal.getTimeInMillis());
-    }
-
-    @Transactional
-    @RequestMapping(params = "methodToCall=deleteAbsence")
-    public ModelAndView deleteAbsence(@ModelAttribute("KualiForm") WorkloadForm form, BindingResult result, HttpServletRequest request, HttpServletResponse response)
-            throws Exception {
-        int selectedLineIndex;
-        String selectedLine = form.getActionParamaterValue(UifParameters.SELECTED_LINE_INDEX);
-        if (StringUtils.isNotBlank(selectedLine)) {
-            selectedLineIndex = Integer.parseInt(selectedLine);
-        } else {
-            selectedLineIndex = -1;
-        }
-        getDataObjectService().delete(form.getAbsenteeListEdit().get(selectedLineIndex).getAbsentee());
-        ModelAndView modelAndView = getCollectionControllerService().deleteLine(form);
-
-        return modelAndView;
-    }
-
-    @Transactional
-    @RequestMapping(params = "methodToCall=updateAbsence")
-    public ModelAndView updateAbsence(@ModelAttribute("KualiForm") WorkloadForm form, BindingResult result, HttpServletRequest request, HttpServletResponse response)
-            throws Exception {
-        AbsenteeWrapper wrapper = form.getAbsenteeEdit();
-        String personId = wrapper.getAbsentee().getPersonId();
-        // TODO Check if person exists
-
-        WlAbsentee updatedAbsentee = wrapper.getAbsentee();
-        updatedAbsentee.setPersonId(personId);
-        updatedAbsentee.setLeaveStartDate(translateTimeToDate(updatedAbsentee.getLeaveStartDate(), wrapper.getLeaveStartHour()));
-        updatedAbsentee.setLeaveEndDate(translateTimeToDate(updatedAbsentee.getLeaveEndDate(), wrapper.getLeaveEndHour()));
-        getDataObjectService().save(updatedAbsentee);
-
-        return getRefreshControllerService().refresh(form);
-    }
-
-    @Transactional
-    @RequestMapping(params = "methodToCall=addUnitAssignment")
-    public ModelAndView addUnitAssignment(@ModelAttribute("KualiForm") WorkloadForm form, BindingResult result, HttpServletRequest request, HttpServletResponse response)
-            throws Exception {
-        String personId = form.getWorkloadLineItemEdit().getWlCapacity().getPersonId();
-
-        //TODO check if valid unit
-
-        ModelAndView modelAndView = getCollectionControllerService().addLine(form);
-        UnitAdministrator newAssignment = ((UnitAdministrator) form.getAddedCollectionItems().get(form.getAddedCollectionItems().size() - 1));
-
-        newAssignment.setPersonId(personId);
-        newAssignment.setUnitAdministratorTypeCode("2");
-
-        if (form.isSimulationMode()) {
-            addUnitAssignmentSimulationData(form, newAssignment);
-        } else {
-            getDataObjectService().save(newAssignment);
-        }
-
-        updateUnitAssignmentList(form, personId);
-
-        return modelAndView;
-    }
-
-    @Transactional
-    @RequestMapping(params = "methodToCall=deleteUnitAssignment")
-    public ModelAndView deleteUnitAssignment(@ModelAttribute("KualiForm") WorkloadForm form, BindingResult result, HttpServletRequest request, HttpServletResponse response)
-            throws Exception {
-        int selectedLineIndex;
-        String selectedLine = form.getActionParamaterValue(UifParameters.SELECTED_LINE_INDEX);
-        if (StringUtils.isNotBlank(selectedLine)) {
-            selectedLineIndex = Integer.parseInt(selectedLine);
-        } else {
-            selectedLineIndex = -1;
-        }
-
-        UnitAdministrator unitAssignment = form.getUnitListEdit().get(selectedLineIndex);
-
-        if (form.isSimulationMode()) {
-            deleteUnitAssignmentSimulationData(form, unitAssignment);
-        }
-        else {
-            getDataObjectService().delete(unitAssignment);
-        }
-
-        ModelAndView modelAndView = getCollectionControllerService().deleteLine(form);
-        return modelAndView;
-    }
-
-    @Transactional
-    @RequestMapping(params = "methodToCall=reassignUnitAssignment")
-    public ModelAndView reassignUnitAssignment(@ModelAttribute("KualiForm") WorkloadForm form, BindingResult result, HttpServletRequest request, HttpServletResponse response)
-            throws Exception {
-        String personId = form.getUnitAssignmentEdit().getPersonId();
-        UnitAdministrator editedUnitAssignment = form.getUnitListEdit().get(form.getUnitAssignmentEditIndex());
-        editedUnitAssignment.setUnitAdministratorTypeCode("2");
-        // TODO Check if person exists
-
-        if (form.isSimulationMode()) {
-            reassignUnitAssignmentSimulationData(form, form.getWorkloadLineItemEdit().getAdminId(), editedUnitAssignment);
-        }
-        else {
-            // Delete old assignment
-            editedUnitAssignment.setPersonId(form.getWorkloadLineItemEdit().getAdminId());
-            getDataObjectService().delete(editedUnitAssignment);
-
-            // Save new assignment
-            editedUnitAssignment = new UnitAdministrator();
-            editedUnitAssignment.setPersonId(personId);
-            editedUnitAssignment.setUnitNumber(form.getUnitAssignmentEdit().getUnitNumber());
-            editedUnitAssignment.setUnitAdministratorTypeCode("2");
-            getDataObjectService().save(editedUnitAssignment, PersistenceOption.FLUSH);
-
-
-        }
-
-        form.getUnitListEdit().remove(form.getUnitAssignmentEditIndex());
-
-        return getRefreshControllerService().refresh(form);
-    }
-
-    @Transactional
-    @RequestMapping(params = "methodToCall=enterSimulationMode")
-    public ModelAndView enterSimulationMode(@ModelAttribute("KualiForm") WorkloadForm form, BindingResult result, HttpServletRequest request, HttpServletResponse response)
-            throws Exception {
-        form.setSimulationMode(true);
-        copyCurrentWorkloadToSimulation(form);
-
-        return getRefreshControllerService().refresh(form);
-    }
-
-    @Transactional
-    @RequestMapping(params = "methodToCall=exitSimulationMode")
-    public ModelAndView exitSimulationMode(@ModelAttribute("KualiForm") WorkloadForm form, BindingResult result, HttpServletRequest request, HttpServletResponse response)
-            throws Exception {
-        //TODO confirm exit if not saved
-        form.setSimulationMode(false);
-        updateWorkloadItems(form);
-
-        return getRefreshControllerService().refresh(form);
-    }
-
-    @Transactional
-    @RequestMapping(params = "methodToCall=saveSimulation")
-    public ModelAndView saveSimulation(@ModelAttribute("KualiForm") WorkloadForm form, BindingResult result, HttpServletRequest request, HttpServletResponse response)
-            throws Exception {
-        // Blank out all ids to force new entries
-        for(WlSimCapacity simCapacity : form.getSimulation().getCapacities()) {
-            simCapacity.setSimId(null);
-            simCapacity.setCapacityId(null);
-        }
-
-        for(WlSimFlexibility simFlexibility : form.getSimulation().getFlexibilities()) {
-            simFlexibility.setSimId(null);
-            simFlexibility.setFlexibilityId(null);
-        }
-
-        for(WlSimUnitAssignment unitAssignment : form.getSimulation().getUnitAssignments()) {
-            unitAssignment.setSimId(null);
-            unitAssignment.setUnitAssignmentId(null);
-        }
-
-        form.getSimulation().setSimId(null);
-
-        getDataObjectService().save(form.getSimulation());
-
-
-        form.setSimulationSaved(true);
-
-        form.getSimulation().setSimId(null);
-        return runSimulation(form, result, request, response);
-    }
-
-    @Transactional
-    @RequestMapping(params = "methodToCall=runSimulation")
-    public ModelAndView runSimulation(@ModelAttribute("KualiForm") WorkloadForm form, BindingResult result, HttpServletRequest request, HttpServletResponse response)
-            throws Exception {
-
-        return getRefreshControllerService().refresh(form);
-    }
-
-    @Transactional
-    @RequestMapping(params = "methodToCall=loadSimulation")
-    public ModelAndView loadSimulation(@ModelAttribute("KualiForm") WorkloadForm form, BindingResult result, HttpServletRequest request, HttpServletResponse response)
-            throws Exception {
-
-        WlSimHeader simulation = getDataObjectService().find(WlSimHeader.class, form.getSimulation().getSimId());
-
-        if (simulation != null) {
-            form.setSimulation(simulation);
-        }
-
-        updateWorkloadItems(form);
-
-        return getRefreshControllerService().refresh(form);
-    }
-
-    @MethodAccessible
-    @Transactional
-    @RequestMapping(params = "methodToCall=performFieldSuggest")
-    public
-    @ResponseBody
-    AttributeQueryResult performFieldSuggest(@ModelAttribute("KualiForm") WorkloadForm form, BindingResult result, HttpServletRequest request,
-                                             HttpServletResponse response) {
-        return getQueryControllerService().performFieldSuggest(form);
-    }
-
-    @MethodAccessible
-    @Transactional
-    @RequestMapping(params = "methodToCall=performFieldQuery")
-    public
-    @ResponseBody
-    AttributeQueryResult performFieldQuery(@ModelAttribute("KualiForm") WorkloadForm form, BindingResult result, HttpServletRequest request,
-                                           HttpServletResponse response) {
-        return getQueryControllerService().performFieldQuery(form);
-    }
-
-    @Transactional
-    @RequestMapping(params = "methodToCall=retrieveEditLineDialog")
-    public ModelAndView retrieveEditLineDialog(UifFormBase form) {
-        return getCollectionControllerService().retrieveEditLineDialog(form);
-    }
-
-    public KcPersonService getKcPersonService() {
-        return kcPersonService;
-    }
-
-    public void setKcPersonService(KcPersonService kcPersonService) {
-        this.kcPersonService = kcPersonService;
-    }
-
-    private void copyCurrentWorkloadToSimulation(WorkloadForm form) {
-        form.setSimulation(new WlSimHeader());
-
-        List<WlSimCapacity> simCapacities = new ArrayList<>();
-        List<WlSimFlexibility> simFlexibilities = new ArrayList<>();
-        List<WlSimUnitAssignment> simUnitAssignments = new ArrayList<>();
-
-        for (WorkloadBalancing item : form.getWorkloadLineItems()) {
-            simCapacities.add(new WlSimCapacity(item.getWlCapacity()));
-            for (WlFlexibility flexibility : item.getWlflexibilityList()) {
-                simFlexibilities.add(new WlSimFlexibility(flexibility));
-            }
-        }
-
-        Map<String, Object> criteria = new HashMap<String, Object>();
-        criteria.put("unitAdministratorTypeCode", "2");
-        QueryResults<UnitAdministrator> unitAssignments = getDataObjectService().findMatching(UnitAdministrator.class,
-                QueryByCriteria.Builder.andAttributes(criteria).build());
-
-        for (UnitAdministrator assignment : unitAssignments.getResults()) {
-            simUnitAssignments.add(new WlSimUnitAssignment(assignment));
-        }
-
-        form.getSimulation().setCapacities(simCapacities);
-        form.getSimulation().setFlexibilities(simFlexibilities);
-        form.getSimulation().setUnitAssignments(simUnitAssignments);
-    }
-
-
-    private <T> List<T> findAll(Class<T> clazz, WorkloadForm form) {
-        List<T> results = new ArrayList<>();
-        if (form.isSimulationMode()) {
-            if (clazz.equals(WlCapacity.class)) {
-                for (WlSimCapacity capacity : form.getSimulation().getCapacities()) {
-                    results.add(clazz.cast(new WlCapacity(capacity)));
-                }
-            } else if (clazz.equals(WlFlexibility.class)) {
-                for (WlSimFlexibility flexibility : form.getSimulation().getFlexibilities()) {
-                    results.add(clazz.cast(new WlFlexibility(flexibility)));
-                }
-
-            } else if (clazz.equals(UnitAdministrator.class)) {
-                for (WlSimUnitAssignment unitAssignment : form.getSimulation().getUnitAssignments()) {
-                    UnitAdministrator unitAdministrator = new UnitAdministrator();
-                    unitAdministrator.setPersonId(unitAssignment.getPersonId());
-                    unitAdministrator.setUnitNumber(unitAssignment.getUnitNum());
-                    unitAdministrator.setUnit(unitAssignment.getUnit());
-                    unitAdministrator.setUnitAdministratorTypeCode("2");
-                    results.add(clazz.cast(unitAdministrator));
-                }
-            }
-        } else {
-            return getDataObjectService().findAll(clazz).getResults();
-        }
-
-        return results;
-    }
-
-    private <T> List<T> findMatching(Class<T> clazz, Map<String, String> criteria, WorkloadForm form) {
-        List<T> results = new ArrayList<>();
-        if (form.isSimulationMode()) {
-            if (clazz.equals(WlCapacity.class)) {
-                for (WlSimCapacity capacity : form.getSimulation().getCapacities()) {
-                    if (matchesCriteria(capacity, criteria)) {
-                        results.add(clazz.cast(new WlCapacity(capacity)));
-                    }
-                }
-            } else if (clazz.equals(WlFlexibility.class)) {
-                for (WlSimFlexibility flexibility : form.getSimulation().getFlexibilities()) {
-                    if (matchesCriteria(flexibility, criteria)) {
-                        results.add(clazz.cast(new WlFlexibility(flexibility)));
-                    }
-                }
-
-            } else if (clazz.equals(UnitAdministrator.class)) {
-                criteria.remove("unitAdministratorTypeCode");
-                for (WlSimUnitAssignment unitAssignment : form.getSimulation().getUnitAssignments()) {
-                    if (matchesCriteria(unitAssignment, criteria)) {
-                        UnitAdministrator unitAdministrator = new UnitAdministrator();
-                        unitAdministrator.setPersonId(unitAssignment.getPersonId());
-                        unitAdministrator.setUnitNumber(unitAssignment.getUnitNum());
-                        unitAdministrator.setUnit(unitAssignment.getUnit());
-                        unitAdministrator.setUnitAdministratorTypeCode("2");
-                        results.add(clazz.cast(unitAdministrator));
-                    }
-                }
-            }
-        } else {
-            return getDataObjectService().findMatching(clazz,
-                    QueryByCriteria.Builder.andAttributes(criteria).build()).getResults();
-        }
-
-        return results;
-    }
-
-    private boolean matchesCriteria(Object object, Map<String, String> criteria) {
-        boolean match = true;
-        for (String property : criteria.keySet()) {
-            match = match && ObjectPropertyUtils.getPropertyValue(object, property).equals(criteria.get(property));
-        }
-
-        return match;
-    }
-
-    private void updateFlexCapacitySimulationData(WorkloadForm form) {
-        List<WlSimCapacity> simCapacities = new ArrayList<>();
-        List<WlSimFlexibility> simFlexibilities = new ArrayList<>();
-
-        for (WorkloadBalancing item : form.getWorkloadLineItems()) {
-            WlSimCapacity simCapacity = new WlSimCapacity(item.getWlCapacity());
-            simCapacity.setCapacityId(item.getWlCapacity().getCapacityId());
-            //simCapacity.setSimId(form.getSimulation().getSimId());
-            simCapacities.add(simCapacity);
-
-            for (WlFlexibility flexibility : item.getWlflexibilityList()) {
-                WlSimFlexibility simFlexibility = new WlSimFlexibility(flexibility);
-                simFlexibility.setFlexibilityId(flexibility.getFlexibilityId());
-                //simFlexibility.setSimId(form.getSimulation().getSimId());
-
-                simFlexibilities.add(simFlexibility);
-            }
-        }
-
-        form.getSimulation().setCapacities(simCapacities);
-        form.getSimulation().setFlexibilities(simFlexibilities);
-    }
-
-    private void deleteUnitAssignmentSimulationData(WorkloadForm workloadForm, UnitAdministrator unitAdministrator) {
-        WlSimUnitAssignment itemToRemove = null;
-        for (WlSimUnitAssignment unitAssignment : workloadForm.getSimulation().getUnitAssignments()) {
-            if (unitAssignment.getPersonId().equals(unitAdministrator.getPersonId())
-                    && unitAssignment.getUnitNum().equals(unitAdministrator.getUnitNumber())) {
-                itemToRemove = unitAssignment;
-                break;
-            }
-        }
-
-        if (itemToRemove != null) {
-            workloadForm.getSimulation().getUnitAssignments().remove(itemToRemove);
-        }
-    }
-
-    private void addUnitAssignmentSimulationData(WorkloadForm workloadForm, UnitAdministrator unitAdministrator) {
-        WlSimUnitAssignment simUnitAssignment = new WlSimUnitAssignment(unitAdministrator);
-        //simUnitAssignment.setSimId(workloadForm.getSimulation().getSimId());
-        workloadForm.getSimulation().getUnitAssignments().add(simUnitAssignment);
-    }
-
-    private void reassignUnitAssignmentSimulationData(WorkloadForm workloadForm, String oldPersonId, UnitAdministrator newUnitAdministrator) {
-        UnitAdministrator oldUnitAdministrator = new UnitAdministrator();
-        oldUnitAdministrator.setPersonId(oldPersonId);
-        oldUnitAdministrator.setUnitNumber(newUnitAdministrator.getUnitNumber());
-        deleteUnitAssignmentSimulationData(workloadForm, oldUnitAdministrator);
-
-        WlSimUnitAssignment simUnitAssignment = new WlSimUnitAssignment(newUnitAdministrator);
-        //simUnitAssignment.setSimId(workloadForm.getSimulation().getSimId());
-
-        workloadForm.getSimulation().getUnitAssignments().add(simUnitAssignment);
-    }
-
-}
Index: coeus-impl/src/main/java/org/kuali/coeus/propdev/impl/workloadbalancing/WorkloadBalancingController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- coeus-impl/src/main/java/org/kuali/coeus/propdev/impl/workloadbalancing/WorkloadBalancingController.java	(revision )
+++ coeus-impl/src/main/java/org/kuali/coeus/propdev/impl/workloadbalancing/WorkloadBalancingController.java	(revision )
@@ -0,0 +1,1075 @@
+/**
+ * Copyright 2005-2014 The Kuali Foundation
+ *
+ * Licensed under the Educational Community License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.opensource.org/licenses/ecl2.php
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.kuali.coeus.propdev.impl.workloadbalancing;
+
+
+import edu.mit.kc.workloadbalancing.bo.*;
+import edu.mit.kc.workloadbalancing.core.WorkloadForm;
+import edu.mit.kc.workloadbalancing.util.WorkloadUtils;
+import org.apache.commons.lang.StringUtils;
+import org.kuali.coeus.common.framework.person.KcPerson;
+import org.kuali.coeus.common.framework.person.KcPersonService;
+import org.kuali.coeus.common.framework.unit.Unit;
+import org.kuali.coeus.common.framework.unit.admin.UnitAdministrator;
+import org.kuali.coeus.common.impl.sponsor.hierarchy.SponsorHierarchyDao;
+import org.kuali.rice.core.api.criteria.QueryByCriteria;
+import org.kuali.rice.core.api.criteria.QueryResults;
+import org.kuali.rice.krad.data.PersistenceOption;
+import org.kuali.rice.krad.uif.UifParameters;
+import org.kuali.rice.krad.uif.field.AttributeQueryResult;
+import org.kuali.rice.krad.uif.util.ObjectPropertyUtils;
+import org.kuali.rice.krad.web.controller.MethodAccessible;
+import org.kuali.rice.krad.web.form.UifFormBase;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.beans.factory.annotation.Qualifier;
+import org.springframework.stereotype.Controller;
+import org.springframework.transaction.annotation.Transactional;
+import org.springframework.validation.BindingResult;
+import org.springframework.web.bind.annotation.ModelAttribute;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.ResponseBody;
+import org.springframework.web.servlet.ModelAndView;
+
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpServletResponse;
+import java.math.BigDecimal;
+import java.util.*;
+
+@Controller("workloadBalancingController")
+@RequestMapping(value = "/workloadbalancing")
+public class WorkloadBalancingController extends WorkloadBalancingControllerBase {
+
+    @Autowired
+    @Qualifier("kcPersonService")
+    private KcPersonService kcPersonService;
+
+    @Autowired
+    @Qualifier("sponsorHierarchyDao")
+    private SponsorHierarchyDao sponsorHierarchyDao;
+
+    private static final String WL_UNIT_ADMIN_TYPE_CODE = "2";
+    private static final String WL_HIERARCHY_NAME = "Workload Balancing";
+    private static final String PERSON_ID = "personId";
+    private static final String UNIT_NUMBER = "unitNumber";
+    private static final String UNIT_ADMIN_TYPE_CODE = "unitAdministratorTypeCode";
+
+    @Transactional
+    @RequestMapping(params = "methodToCall=defaultMapping")
+    public ModelAndView defaultMapping(
+            @ModelAttribute("KualiForm") WorkloadForm form,
+            BindingResult result, HttpServletRequest request,
+            HttpServletResponse response) {
+        return getTransactionalDocumentControllerService().start(form);
+    }
+
+    protected UifFormBase createInitialForm(HttpServletRequest request) {
+        WorkloadForm form = new WorkloadForm();
+        return form;
+    }
+
+    @Transactional
+    @RequestMapping(params = "methodToCall=start")
+    public ModelAndView start(
+            @ModelAttribute("KualiForm") WorkloadForm form) throws Exception {
+        // Get collection of sponsors
+        List<String> sponsors = getSponsorHierarchyDao().getUniqueNamesAtLevel(WL_HIERARCHY_NAME, 1);
+        Collections.sort(sponsors);
+        form.setSponsors(sponsors);
+
+        // Build initial items
+        updateWorkloadItems(form);
+
+        return getRefreshControllerService().refresh(form);
+    }
+
+    @ModelAttribute(value = "KualiForm")
+    public UifFormBase initForm(HttpServletRequest request,
+                                HttpServletResponse response) throws Exception {
+        UifFormBase form = getKcCommonControllerService().initForm(
+                this.createInitialForm(request), request, response);
+        return form;
+    }
+
+    /**
+     * Updates the workload informaton used in the workload balancing table to the most recent data from either the
+     * in memory simulation data or current data from the database.
+     *
+     * @param form
+     */
+    private void updateWorkloadItems(WorkloadForm form) {
+        form.getWorkloadLineItems().clear();
+
+        List<WlCapacity> capacities = findAll(WlCapacity.class, form);
+        WorkloadBalancing workloadLineItem;
+
+        for (WlCapacity capacity : capacities) {
+            workloadLineItem = new WorkloadBalancing();
+            workloadLineItem.setAdminId(capacity.getPersonId());
+            workloadLineItem.setWlCapacity(capacity);
+
+            HashMap<String, String> criteria = new HashMap<String, String>();
+            criteria.put(PERSON_ID, capacity.getPersonId());
+            List<WlFlexibility> flexibilities = findMatching(WlFlexibility.class, criteria, form);
+
+            workloadLineItem.setWlflexibilityList(flexibilities);
+
+            KcPerson person = kcPersonService.getKcPersonByPersonId(capacity.getPersonId());
+            workloadLineItem.setPersonName(person.getLastName() + ", " + person.getFirstName());
+            workloadLineItem.setUserName(person.getUserName());
+
+            List<WlAbsentee> absences = getDataObjectService().findMatching(WlAbsentee.class,
+                    QueryByCriteria.Builder.andAttributes(criteria).build()).getResults();
+
+            Date currentDate = new Date();
+            for (WlAbsentee absence : absences) {
+                if (currentDate.getTime() > absence.getLeaveStartDate().getTime()
+                        && currentDate.getTime() < absence.getLeaveEndDate().getTime()) {
+                    workloadLineItem.setCurrentlyAbsent(true);
+                    break;
+                }
+            }
+
+            // Create flexibilities if a flexibility does not exist for all sponsors
+            if (flexibilities.size() < form.getSponsors().size()) {
+
+                for (String sponsor : form.getSponsors()) {
+                    boolean sponsorFound = false;
+                    for (WlFlexibility flexibility : flexibilities) {
+                        if (flexibility.getSponsorGroup().equals(sponsor)) {
+                            sponsorFound = true;
+                            break;
+                        }
+                    }
+
+                    if (!sponsorFound) {
+                        WlFlexibility newFlexibility = new WlFlexibility();
+                        newFlexibility.setPersonId(capacity.getPersonId());
+                        newFlexibility.setSponsorGroup(sponsor);
+
+                        if (!form.isSimulationMode()) {
+                            getDataObjectService().save(newFlexibility);
+                        }
+
+                        flexibilities.add(newFlexibility);
+                    }
+                }
+            }
+
+            form.getWorkloadLineItems().add(workloadLineItem);
+        }
+    }
+
+    /**
+     * The refresh method of processes the refreshes of the workload components and retrieves/sets data related to those
+     * components
+     *
+     * @param form
+     * @param result
+     * @param request
+     * @param response
+     * @return
+     * @throws Exception
+     */
+    @Transactional
+    @RequestMapping(params = "methodToCall=refresh")
+    public ModelAndView refresh(@ModelAttribute("KualiForm") WorkloadForm form, BindingResult result, HttpServletRequest request, HttpServletResponse response)
+            throws Exception {
+        String refreshId = request.getParameter("updateComponentId");
+        String editLineItem = request.getParameter("editLineItem");
+
+        // Check for component being refreshed by id
+        if (refreshId.equals("Workload-Table") || refreshId.equals("WorkloadBalancing-Page")) {
+            // Make sure data is latest
+            updateWorkloadItems(form);
+
+        } else if (StringUtils.isNotBlank(editLineItem)) {
+            int index = Integer.valueOf(editLineItem);
+            form.setWorkloadLineItemEdit(form.getWorkloadLineItems().get(index));
+            String personId = form.getWorkloadLineItemEdit().getWlCapacity().getPersonId();
+
+            if (refreshId.equals("Workload-Unit-Edit")) {
+                updateUnitAssignmentList(form, personId);
+            } else if (refreshId.equals("Workload-Absentee-Edit")) {
+                updateAbsenteeList(form, personId);
+            }
+
+        } else if (refreshId.equals("Workload-Unit-AssignedTo_add")) {
+            form.setUnitAssignedTo("");
+            Map<String, String> criteria = new HashMap<String, String>();
+            Object newLine = form.getNewCollectionLines().get("unitListEdit");
+            // Fill out currently assigned to list by matching unit selected to UnitAdministrators which may exist
+            if (newLine != null) {
+                String unitNumber = ((UnitAdministrator) newLine).getUnitNumber();
+                criteria.put(UNIT_NUMBER, unitNumber);
+                criteria.put(UNIT_ADMIN_TYPE_CODE, WL_UNIT_ADMIN_TYPE_CODE);
+                List<UnitAdministrator> unitAssignments = findMatching(UnitAdministrator.class, criteria, form);
+
+                String assignedTo = "";
+                for (UnitAdministrator unitAdmin : unitAssignments) {
+                    if (StringUtils.isBlank(unitAdmin.getPersonId())) {
+                        continue;
+                    }
+
+                    KcPerson person = getKcPersonService().getKcPersonByPersonId(unitAdmin.getPersonId());
+                    if (person == null) {
+                        continue;
+                    }
+
+                    assignedTo = assignedTo + person.getFullName() + "(" + person.getUserName() + "), ";
+                }
+
+                if (StringUtils.isNotBlank(assignedTo)) {
+                    assignedTo = "Unit currently assigned to: " + assignedTo;
+                    assignedTo = StringUtils.removeEnd(assignedTo, ", ");
+                    form.setUnitAssignedTo(assignedTo);
+                }
+            }
+        } else if (refreshId.equals("Workload-ReassignUnit-Dialog")) {
+            String reassignUnitItem = request.getParameter("reassignUnitItem");
+            if (reassignUnitItem != null) {
+                //Fresh dialog so reset data
+                int index = Integer.valueOf(reassignUnitItem);
+                UnitAdministrator unit = form.getUnitListEdit().get(index);
+                form.setUnitAssignmentEdit(unit);
+                form.setUnitAssignmentEditIndex(index);
+                form.getReassignPersonInfo().setTempPersonId("");
+                form.getReassignPersonInfo().setTempPersonName("");
+                form.getReassignPersonInfo().setTempUserName("");
+
+            } else if (!StringUtils.isBlank(form.getReassignPersonInfo().getTempUserName())) {
+                // Dialog has been edited so find person
+                KcPerson person = kcPersonService.getKcPersonByUserName(form.getReassignPersonInfo().getTempUserName());
+                if (person != null) {
+                    form.getReassignPersonInfo().setTempPersonName(person.getFullName());
+                    form.getReassignPersonInfo().setTempPersonId(person.getPersonId());
+                }
+            }
+
+        } else if (refreshId.equals("Workload-Add-Dialog")
+                && StringUtils.isNotBlank(form.getAddPersonInfo().getTempUserName())) {
+            KcPerson person = kcPersonService.getKcPersonByUserName(form.getAddPersonInfo().getTempUserName());
+
+            if (person != null) {
+                // Dialog has been edited
+                form.getAddPersonInfo().setTempPersonId(person.getPersonId());
+                form.getAddPersonInfo().setTempPersonName(person.getFullName());
+
+            } else {
+                //Fresh dialog
+                form.getAddPersonInfo().setTempPersonId("");
+                form.getAddPersonInfo().setTempPersonName("");
+            }
+        } else if (refreshId.equals("Workload-AbsenceEdit-Dialog")) {
+            String absenceItemIndex = request.getParameter("absenceEditItem");
+            int index = Integer.valueOf(absenceItemIndex);
+            AbsenteeWrapper absenteeWrapper = form.getAbsenteeListEdit().get(index);
+            form.setAbsenteeEdit(absenteeWrapper);
+        }
+
+        return getRefreshControllerService().refresh(form);
+    }
+
+    /**
+     * Update the Unit assignment list with the latest data
+     *
+     * @param form
+     * @param personId
+     */
+    private void updateUnitAssignmentList(WorkloadForm form, String personId) {
+        form.getUnitListEdit().clear();
+        Map<String, String> criteria = new HashMap<String, String>();
+        criteria.put(PERSON_ID, personId);
+        criteria.put(UNIT_ADMIN_TYPE_CODE, WL_UNIT_ADMIN_TYPE_CODE);
+        List<UnitAdministrator> unitAssignments = findMatching(UnitAdministrator.class, criteria, form);
+
+        form.getUnitListEdit().addAll(unitAssignments);
+    }
+
+    /**
+     * Update the absentee list with the latest data
+     *
+     * @param form
+     * @param personId
+     */
+    private void updateAbsenteeList(WorkloadForm form, String personId) {
+        form.getAbsenteeListEdit().clear();
+        Map<String, Object> criteria = new HashMap<String, Object>();
+        criteria.put(PERSON_ID, personId);
+        QueryResults<WlAbsentee> absentees = getDataObjectService().findMatching(WlAbsentee.class,
+                QueryByCriteria.Builder.andAttributes(criteria).build());
+
+        for (WlAbsentee absentee : absentees.getResults()) {
+            AbsenteeWrapper absenteeWrapper = new AbsenteeWrapper(absentee);
+            absenteeWrapper.setLeaveStartHour(WorkloadUtils.translateDateToTimeKey(absentee.getLeaveStartDate()));
+            absenteeWrapper.setLeaveEndHour(WorkloadUtils.translateDateToTimeKey(absentee.getLeaveEndDate()));
+            form.getAbsenteeListEdit().add(absenteeWrapper);
+        }
+    }
+
+    /** Contract Administrator actions **/
+
+    /**
+     * Add an administrator which adds new capacity and flexibility objects for that person by id
+     *
+     * @param form
+     * @param result
+     * @param request
+     * @param response
+     * @return
+     * @throws Exception
+     */
+    @Transactional
+    @RequestMapping(params = "methodToCall=addAdministrator")
+    public ModelAndView addAdministrator(@ModelAttribute("KualiForm") WorkloadForm form, BindingResult result, HttpServletRequest request, HttpServletResponse response)
+            throws Exception {
+        String personId = null;
+        KcPerson person = null;
+        if (!StringUtils.isBlank(form.getAddPersonInfo().getTempUserName())) {
+            person = kcPersonService.getKcPersonByUserName(form.getAddPersonInfo().getTempUserName());
+            if (person != null) {
+                personId = person.getPersonId();
+            }
+        }
+
+        // Show message for missing person
+        if (StringUtils.isBlank(personId)) {
+            getGlobalVariableService().getMessageMap().putError("addPersonInfo.tempUserName", "workload.error.missingPerson");
+            form.setUpdateComponentId("Workload-Add-Dialog");
+            return getRefreshControllerService().refresh(form);
+        }
+
+        // Find any capacity item that may exist for this person, if one show error
+        HashMap<String, String> attributes = new HashMap<String, String>();
+        attributes.put(PERSON_ID, personId);
+        List<WlCapacity> existingCapacity = findMatching(WlCapacity.class, attributes, form);
+
+        // Show message for duplicate person
+        if (!existingCapacity.isEmpty()) {
+            getGlobalVariableService().getMessageMap().putError("addPersonInfo.tempUserName", "workload.error.duplicatePerson");
+            form.setUpdateComponentId("Workload-Add-Dialog");
+            return getRefreshControllerService().refresh(form);
+        }
+
+        WorkloadBalancing workloadLineItem = new WorkloadBalancing();
+
+        WlCapacity newCapacity = new WlCapacity();
+        newCapacity.setPersonId(personId);
+        newCapacity.setCapacity(0);
+
+        // if not in simulation mode, save directly to the database
+        if (!form.isSimulationMode()) {
+            newCapacity = getDataObjectService().save(newCapacity, PersistenceOption.FLUSH);
+        }
+
+        workloadLineItem.setWlflexibilityList(new ArrayList<WlFlexibility>());
+
+        // Add a flexibility item for each sponsor which exists for Workload Balancing
+        for (String sponsor : form.getSponsors()) {
+            WlFlexibility newFlexibility = new WlFlexibility();
+            newFlexibility.setPersonId(personId);
+            newFlexibility.setSponsorGroup(sponsor);
+
+            if (!form.isSimulationMode()) {
+                newFlexibility = getDataObjectService().save(newFlexibility);
+            }
+
+            workloadLineItem.getWlflexibilityList().add(newFlexibility);
+        }
+
+        if (!form.isSimulationMode()) {
+            getDataObjectService().flush(WlFlexibility.class);
+        }
+
+        workloadLineItem.setWlCapacity(newCapacity);
+        workloadLineItem.setAdminId(personId);
+        workloadLineItem.setPersonName(person.getLastName() + ", " + person.getFirstName());
+        workloadLineItem.setUserName(person.getUserName());
+
+        HashMap<String, BigDecimal> fcInput = new HashMap<>();
+
+        // Add the new workload item
+        form.getWorkloadLineItems().add(workloadLineItem);
+
+        // Reset temporary person data for add dialog
+        form.getAddPersonInfo().setTempPersonId("");
+        form.getAddPersonInfo().setTempPersonName("");
+        form.getAddPersonInfo().setTempUserName("");
+
+        // Update the data in the simulation if in simulation mode
+        if (form.isSimulationMode()) {
+            updateFlexCapacitySimulationData(form);
+        }
+
+        return getRefreshControllerService().refresh(form);
+    }
+
+    /**
+     * Delete the Contract administrator and all related data for Workload Balancing
+     *
+     * @param form
+     * @param result
+     * @param request
+     * @param response
+     * @return
+     * @throws Exception
+     */
+    @Transactional
+    @RequestMapping(params = "methodToCall=deleteAdministrator")
+    public ModelAndView deleteAdministrator(@ModelAttribute("KualiForm") WorkloadForm form, BindingResult result, HttpServletRequest request, HttpServletResponse response)
+            throws Exception {
+        String deleteLineItem = request.getParameter("deleteLineItem");
+        WorkloadBalancing lineItem = form.getWorkloadLineItems().get(Integer.valueOf(deleteLineItem));
+
+        // Delete from database if not in simulation mode
+        if (!form.isSimulationMode()) {
+            // Delete capacity and flexibility
+            getDataObjectService().delete(lineItem.getWlCapacity());
+            for (WlFlexibility flexibility : lineItem.getWlflexibilityList()) {
+                getDataObjectService().delete(flexibility);
+            }
+
+            // Delete absentee information
+            Map<String, Object> criteria = new HashMap<String, Object>();
+            criteria.put(PERSON_ID, lineItem.getAdminId());
+            getDataObjectService().deleteMatching(WlAbsentee.class,
+                    QueryByCriteria.Builder.andAttributes(criteria).build());
+
+            // Delete unit administrator entries
+            criteria.put(UNIT_ADMIN_TYPE_CODE, WL_UNIT_ADMIN_TYPE_CODE);
+            getDataObjectService().deleteMatching(UnitAdministrator.class,
+                    QueryByCriteria.Builder.andAttributes(criteria).build());
+        }
+
+        // Remove the line from the form
+        form.getWorkloadLineItems().remove(lineItem);
+
+        // Update the data in the simulation if in simulation mode
+        if (form.isSimulationMode()) {
+            updateFlexCapacitySimulationData(form);
+        }
+
+        return getRefreshControllerService().refresh(form);
+    }
+
+    /**
+     * Save flexibility and capacity changes for Contract Administrator
+     *
+     * @param form
+     * @param result
+     * @param request
+     * @param response
+     * @return
+     * @throws Exception
+     */
+    @Transactional
+    @RequestMapping(params = "methodToCall=saveFlexCapacity")
+    public ModelAndView saveFlexCapacity(@ModelAttribute("KualiForm") WorkloadForm form, BindingResult result, HttpServletRequest request, HttpServletResponse response)
+            throws Exception {
+        WlCapacity capacity = form.getWorkloadLineItemEdit().getWlCapacity();
+
+        if (!form.isSimulationMode()) {
+            getDataObjectService().save(capacity);
+
+            List<WlFlexibility> flexibilityList = form.getWorkloadLineItemEdit().getWlflexibilityList();
+            for (WlFlexibility flexibility : flexibilityList) {
+                getDataObjectService().save(flexibility);
+            }
+        } else {
+            updateFlexCapacitySimulationData(form);
+        }
+
+        return getModelAndViewService().getModelAndView(form);
+    }
+
+    /**
+     * Absentee related controller methods
+     */
+
+    /**
+     * Add an absence for a person
+     *
+     * @param form
+     * @param result
+     * @param request
+     * @param response
+     * @return
+     * @throws Exception
+     */
+    @Transactional
+    @RequestMapping(params = "methodToCall=addAbsence")
+    public ModelAndView addAbsence(@ModelAttribute("KualiForm") WorkloadForm form, BindingResult result, HttpServletRequest request, HttpServletResponse response)
+            throws Exception {
+        String personId = form.getWorkloadLineItemEdit().getWlCapacity().getPersonId();
+
+        ModelAndView modelAndView = getCollectionControllerService().addLine(form);
+        AbsenteeWrapper wrapper = ((AbsenteeWrapper) form.getAddedCollectionItems().get(form.getAddedCollectionItems().size() - 1));
+
+        WlAbsentee newAbsentee = wrapper.getAbsentee();
+        newAbsentee.setPersonId(personId);
+
+        // Translate the time into the date value and set
+        newAbsentee.setLeaveStartDate(WorkloadUtils.translateTimeToDate(newAbsentee.getLeaveStartDate(), wrapper.getLeaveStartHour()));
+        newAbsentee.setLeaveEndDate(WorkloadUtils.translateTimeToDate(newAbsentee.getLeaveEndDate(), wrapper.getLeaveEndHour()));
+
+        getDataObjectService().save(newAbsentee);
+
+        updateAbsenteeList(form, personId);
+
+        return modelAndView;
+    }
+
+
+    /**
+     * Delete an absence
+     *
+     * @param form
+     * @param result
+     * @param request
+     * @param response
+     * @return
+     * @throws Exception
+     */
+    @Transactional
+    @RequestMapping(params = "methodToCall=deleteAbsence")
+    public ModelAndView deleteAbsence(@ModelAttribute("KualiForm") WorkloadForm form, BindingResult result, HttpServletRequest request, HttpServletResponse response)
+            throws Exception {
+        int selectedLineIndex;
+        String selectedLine = form.getActionParamaterValue(UifParameters.SELECTED_LINE_INDEX);
+
+        if (StringUtils.isNotBlank(selectedLine)) {
+            selectedLineIndex = Integer.parseInt(selectedLine);
+        } else {
+            selectedLineIndex = -1;
+        }
+
+        getDataObjectService().delete(form.getAbsenteeListEdit().get(selectedLineIndex).getAbsentee());
+        ModelAndView modelAndView = getCollectionControllerService().deleteLine(form);
+
+        return modelAndView;
+    }
+
+    /**
+     * Update an absence with new data
+     *
+     * @param form
+     * @param result
+     * @param request
+     * @param response
+     * @return
+     * @throws Exception
+     */
+    @Transactional
+    @RequestMapping(params = "methodToCall=updateAbsence")
+    public ModelAndView updateAbsence(@ModelAttribute("KualiForm") WorkloadForm form, BindingResult result, HttpServletRequest request, HttpServletResponse response)
+            throws Exception {
+        AbsenteeWrapper wrapper = form.getAbsenteeEdit();
+        String personId = wrapper.getAbsentee().getPersonId();
+
+        WlAbsentee updatedAbsentee = wrapper.getAbsentee();
+        updatedAbsentee.setPersonId(personId);
+
+        // Translate the time into the date value and set
+        updatedAbsentee.setLeaveStartDate(WorkloadUtils.translateTimeToDate(updatedAbsentee.getLeaveStartDate(), wrapper.getLeaveStartHour()));
+        updatedAbsentee.setLeaveEndDate(WorkloadUtils.translateTimeToDate(updatedAbsentee.getLeaveEndDate(), wrapper.getLeaveEndHour()));
+
+        getDataObjectService().save(updatedAbsentee);
+
+        return getRefreshControllerService().refresh(form);
+    }
+
+    /**
+     * Unit assignment controller methods *
+     */
+
+    /**
+     * Add a new unit administrator for the unit selected
+     *
+     * @param form
+     * @param result
+     * @param request
+     * @param response
+     * @return
+     * @throws Exception
+     */
+    @Transactional
+    @RequestMapping(params = "methodToCall=addUnitAssignment")
+    public ModelAndView addUnitAssignment(@ModelAttribute("KualiForm") WorkloadForm form, BindingResult result, HttpServletRequest request, HttpServletResponse response)
+            throws Exception {
+        String personId = form.getWorkloadLineItemEdit().getWlCapacity().getPersonId();
+
+        UnitAdministrator newLine = (UnitAdministrator) form.getNewCollectionLines().get("unitListEdit");
+        Unit unit = getDataObjectService().find(Unit.class, newLine.getUnitNumber());
+
+        // Show error message for bad unit number
+        if (unit == null) {
+            form.setUpdateComponentId("Workload-Unit-Add-Dialog");
+            getGlobalVariableService().getMessageMap().putError("newCollectionLines['unitListEdit'].unitNumber",
+                    "workload.error.badUnit");
+            return getRefreshControllerService().refresh(form);
+        }
+
+        ModelAndView modelAndView = getCollectionControllerService().addLine(form);
+        UnitAdministrator newAssignment = ((UnitAdministrator) form.getAddedCollectionItems().get(form.getAddedCollectionItems().size() - 1));
+
+        newAssignment.setPersonId(personId);
+        newAssignment.setUnitAdministratorTypeCode(WL_UNIT_ADMIN_TYPE_CODE);
+
+        // Save new unit admin data
+        if (form.isSimulationMode()) {
+            addUnitAssignmentSimulationData(form, newAssignment);
+        } else {
+            getDataObjectService().save(newAssignment);
+        }
+
+        updateUnitAssignmentList(form, personId);
+
+        return modelAndView;
+    }
+
+    /**
+     * Delete the unit administrator data for a person for a unit
+     *
+     * @param form
+     * @param result
+     * @param request
+     * @param response
+     * @return
+     * @throws Exception
+     */
+    @Transactional
+    @RequestMapping(params = "methodToCall=deleteUnitAssignment")
+    public ModelAndView deleteUnitAssignment(@ModelAttribute("KualiForm") WorkloadForm form, BindingResult result, HttpServletRequest request, HttpServletResponse response)
+            throws Exception {
+        int selectedLineIndex;
+        String selectedLine = form.getActionParamaterValue(UifParameters.SELECTED_LINE_INDEX);
+        if (StringUtils.isNotBlank(selectedLine)) {
+            selectedLineIndex = Integer.parseInt(selectedLine);
+        } else {
+            selectedLineIndex = -1;
+        }
+
+        UnitAdministrator unitAssignment = form.getUnitListEdit().get(selectedLineIndex);
+
+        if (form.isSimulationMode()) {
+            deleteUnitAssignmentSimulationData(form, unitAssignment);
+        } else {
+            getDataObjectService().delete(unitAssignment);
+        }
+
+        ModelAndView modelAndView = getCollectionControllerService().deleteLine(form);
+        return modelAndView;
+    }
+
+    /**
+     * Reassign a unit to another administrator
+     *
+     * @param form
+     * @param result
+     * @param request
+     * @param response
+     * @return
+     * @throws Exception
+     */
+    @Transactional
+    @RequestMapping(params = "methodToCall=reassignUnitAssignment")
+    public ModelAndView reassignUnitAssignment(@ModelAttribute("KualiForm") WorkloadForm form, BindingResult result, HttpServletRequest request, HttpServletResponse response)
+            throws Exception {
+        String personId = null;
+        KcPerson person = null;
+        if (!StringUtils.isBlank(form.getReassignPersonInfo().getTempUserName())) {
+            person = kcPersonService.getKcPersonByUserName(form.getReassignPersonInfo().getTempUserName());
+            if (person != null) {
+                personId = person.getPersonId();
+            }
+        }
+
+        // Show error message for bad username
+        if (StringUtils.isBlank(personId)) {
+            getGlobalVariableService().getMessageMap().putError("reassignPersonInfo.tempUserName", "workload.error.missingPerson");
+            form.setUpdateComponentId("Workload-ReassignUnit-Dialog");
+            return getRefreshControllerService().refresh(form);
+        }
+
+        UnitAdministrator editedUnitAssignment = form.getUnitListEdit().get(form.getUnitAssignmentEditIndex());
+        editedUnitAssignment.setUnitAdministratorTypeCode(WL_UNIT_ADMIN_TYPE_CODE);
+
+        // When in simulation mode change the data directly, otherwise delete the old data and save the new
+        // administrator to the db
+        if (form.isSimulationMode()) {
+            editedUnitAssignment.setPersonId(personId);
+            reassignUnitAssignmentSimulationData(form, form.getWorkloadLineItemEdit().getAdminId(), editedUnitAssignment);
+        } else {
+            // Delete old assignment
+            editedUnitAssignment.setPersonId(form.getWorkloadLineItemEdit().getAdminId());
+            getDataObjectService().delete(editedUnitAssignment);
+
+            // Save new assignment
+            editedUnitAssignment = new UnitAdministrator();
+            editedUnitAssignment.setPersonId(personId);
+            editedUnitAssignment.setUnitNumber(form.getUnitAssignmentEdit().getUnitNumber());
+            editedUnitAssignment.setUnitAdministratorTypeCode(WL_UNIT_ADMIN_TYPE_CODE);
+            getDataObjectService().save(editedUnitAssignment, PersistenceOption.FLUSH);
+
+
+        }
+
+        form.getUnitListEdit().remove(form.getUnitAssignmentEditIndex());
+
+        return getRefreshControllerService().refresh(form);
+    }
+
+    /**
+     * Simulation controller methods *
+     */
+
+    @Transactional
+    @RequestMapping(params = "methodToCall=enterSimulationMode")
+    public ModelAndView enterSimulationMode(@ModelAttribute("KualiForm") WorkloadForm form, BindingResult result, HttpServletRequest request, HttpServletResponse response)
+            throws Exception {
+        form.setSimulationMode(true);
+        copyCurrentWorkloadToSimulation(form);
+        getGlobalVariableService().getMessageMap().putInfoForSectionId("Workload-Table", "workload.info.simulationFromCurrent");
+
+        return getRefreshControllerService().refresh(form);
+    }
+
+    @Transactional
+    @RequestMapping(params = "methodToCall=exitSimulationMode")
+    public ModelAndView exitSimulationMode(@ModelAttribute("KualiForm") WorkloadForm form, BindingResult result, HttpServletRequest request, HttpServletResponse response)
+            throws Exception {
+        form.setSimulationMode(false);
+        updateWorkloadItems(form);
+
+        return getRefreshControllerService().refresh(form);
+    }
+
+    @Transactional
+    @RequestMapping(params = "methodToCall=saveSimulation")
+    public ModelAndView saveSimulation(@ModelAttribute("KualiForm") WorkloadForm form, BindingResult result, HttpServletRequest request, HttpServletResponse response)
+            throws Exception {
+        // Blank out all ids to force new entries
+        for (WlSimCapacity simCapacity : form.getSimulation().getCapacities()) {
+            simCapacity.setSimId(null);
+            simCapacity.setCapacityId(null);
+        }
+
+        for (WlSimFlexibility simFlexibility : form.getSimulation().getFlexibilities()) {
+            simFlexibility.setSimId(null);
+            simFlexibility.setFlexibilityId(null);
+        }
+
+        for (WlSimUnitAssignment unitAssignment : form.getSimulation().getUnitAssignments()) {
+            unitAssignment.setSimId(null);
+            unitAssignment.setUnitAssignmentId(null);
+        }
+
+        form.getSimulation().setSimId(null);
+
+        WlSimHeader savedSimulation = getDataObjectService().save(form.getSimulation());
+
+        form.setSimulationSaved(true);
+
+        form.getSimulation().setSimId(savedSimulation.getSimId());
+
+        getGlobalVariableService().getMessageMap().putInfoForSectionId("Workload-Table", "workload.info.simulationSaved",
+                "#" + savedSimulation.getSimId() + " - " + savedSimulation.getDescription());
+
+        return runSimulation(form, result, request, response);
+    }
+
+    @Transactional
+    @RequestMapping(params = "methodToCall=runSimulation")
+    public ModelAndView runSimulation(@ModelAttribute("KualiForm") WorkloadForm form, BindingResult result, HttpServletRequest request, HttpServletResponse response)
+            throws Exception {
+        // TODO blank method to wire in run simulation
+        return getRefreshControllerService().refresh(form);
+    }
+
+    @Transactional
+    @RequestMapping(params = "methodToCall=loadSimulation")
+    public ModelAndView loadSimulation(@ModelAttribute("KualiForm") WorkloadForm form, BindingResult result, HttpServletRequest request, HttpServletResponse response)
+            throws Exception {
+
+        WlSimHeader simulation = getDataObjectService().find(WlSimHeader.class, form.getSimulation().getSimId());
+
+        if (simulation != null) {
+            form.setSimulation(simulation);
+        }
+
+        updateWorkloadItems(form);
+        getGlobalVariableService().getMessageMap().putInfoForSectionId("Workload-Table", "workload.info.simulationFromLoaded",
+                "#" + form.getSimulation().getSimId() + " - " + form.getSimulation().getDescription());
+
+        return getRefreshControllerService().refresh(form);
+    }
+
+    /** Data related helper methods **/
+
+    /**
+     * Copies the current workload items to a new simulation
+     *
+     * @param form
+     */
+    private void copyCurrentWorkloadToSimulation(WorkloadForm form) {
+        form.setSimulation(new WlSimHeader());
+
+        List<WlSimCapacity> simCapacities = new ArrayList<>();
+        List<WlSimFlexibility> simFlexibilities = new ArrayList<>();
+        List<WlSimUnitAssignment> simUnitAssignments = new ArrayList<>();
+
+        for (WorkloadBalancing item : form.getWorkloadLineItems()) {
+            simCapacities.add(new WlSimCapacity(item.getWlCapacity()));
+            for (WlFlexibility flexibility : item.getWlflexibilityList()) {
+                simFlexibilities.add(new WlSimFlexibility(flexibility));
+            }
+        }
+
+        Map<String, Object> criteria = new HashMap<String, Object>();
+        criteria.put(UNIT_ADMIN_TYPE_CODE, WL_UNIT_ADMIN_TYPE_CODE);
+        QueryResults<UnitAdministrator> unitAssignments = getDataObjectService().findMatching(UnitAdministrator.class,
+                QueryByCriteria.Builder.andAttributes(criteria).build());
+
+        for (UnitAdministrator assignment : unitAssignments.getResults()) {
+            simUnitAssignments.add(new WlSimUnitAssignment(assignment));
+        }
+
+        form.getSimulation().setCapacities(simCapacities);
+        form.getSimulation().setFlexibilities(simFlexibilities);
+        form.getSimulation().setUnitAssignments(simUnitAssignments);
+    }
+
+    /**
+     * This method finds objects in simulation data if in simulation mode so it can be populated into
+     * the workload form compatible objects, or returns the objects from the database if not in simulation mode.
+     *
+     * @param clazz
+     * @param form
+     * @param <T>
+     * @return
+     */
+    private <T> List<T> findAll(Class<T> clazz, WorkloadForm form) {
+        List<T> results = new ArrayList<>();
+        if (form.isSimulationMode()) {
+            if (clazz.equals(WlCapacity.class)) {
+                for (WlSimCapacity capacity : form.getSimulation().getCapacities()) {
+                    results.add(clazz.cast(new WlCapacity(capacity)));
+                }
+            } else if (clazz.equals(WlFlexibility.class)) {
+                for (WlSimFlexibility flexibility : form.getSimulation().getFlexibilities()) {
+                    results.add(clazz.cast(new WlFlexibility(flexibility)));
+                }
+
+            } else if (clazz.equals(UnitAdministrator.class)) {
+                for (WlSimUnitAssignment unitAssignment : form.getSimulation().getUnitAssignments()) {
+                    UnitAdministrator unitAdministrator = new UnitAdministrator();
+                    unitAdministrator.setPersonId(unitAssignment.getPersonId());
+                    unitAdministrator.setUnitNumber(unitAssignment.getUnitNum());
+                    unitAdministrator.setUnit(unitAssignment.getUnit());
+                    unitAdministrator.setUnitAdministratorTypeCode(WL_UNIT_ADMIN_TYPE_CODE);
+                    results.add(clazz.cast(unitAdministrator));
+                }
+            }
+        } else {
+            return getDataObjectService().findAll(clazz).getResults();
+        }
+
+        return results;
+    }
+
+    /**
+     * This method finds the matching class in simulation data if in simulation mode so it can be populated into
+     * the workload form compatible objects, or returns the objects from the database if not in simulation mode.
+     *
+     * @param clazz
+     * @param criteria
+     * @param form
+     * @param <T>
+     * @return
+     */
+    private <T> List<T> findMatching(Class<T> clazz, Map<String, String> criteria, WorkloadForm form) {
+        List<T> results = new ArrayList<>();
+        if (form.isSimulationMode()) {
+            if (clazz.equals(WlCapacity.class)) {
+                for (WlSimCapacity capacity : form.getSimulation().getCapacities()) {
+                    if (matchesCriteria(capacity, criteria)) {
+                        results.add(clazz.cast(new WlCapacity(capacity)));
+                    }
+                }
+            } else if (clazz.equals(WlFlexibility.class)) {
+                for (WlSimFlexibility flexibility : form.getSimulation().getFlexibilities()) {
+                    if (matchesCriteria(flexibility, criteria)) {
+                        results.add(clazz.cast(new WlFlexibility(flexibility)));
+                    }
+                }
+
+            } else if (clazz.equals(UnitAdministrator.class)) {
+                criteria.remove(UNIT_ADMIN_TYPE_CODE);
+                for (WlSimUnitAssignment unitAssignment : form.getSimulation().getUnitAssignments()) {
+                    if (matchesCriteria(unitAssignment, criteria)) {
+                        UnitAdministrator unitAdministrator = new UnitAdministrator();
+                        unitAdministrator.setPersonId(unitAssignment.getPersonId());
+                        unitAdministrator.setUnitNumber(unitAssignment.getUnitNum());
+                        unitAdministrator.setUnit(unitAssignment.getUnit());
+                        unitAdministrator.setUnitAdministratorTypeCode(WL_UNIT_ADMIN_TYPE_CODE);
+                        results.add(clazz.cast(unitAdministrator));
+                    }
+                }
+            }
+        } else {
+            return getDataObjectService().findMatching(clazz,
+                    QueryByCriteria.Builder.andAttributes(criteria).build()).getResults();
+        }
+
+        return results;
+    }
+
+    /**
+     * Check to see if the object satisfies the criteria given
+     *
+     * @param object
+     * @param criteria
+     * @return
+     */
+    private boolean matchesCriteria(Object object, Map<String, String> criteria) {
+        boolean match = true;
+        for (String property : criteria.keySet()) {
+            match = match && ObjectPropertyUtils.getPropertyValue(object, property).equals(criteria.get(property));
+        }
+
+        return match;
+    }
+
+    /**
+     * Update flexibility and capacity data in simulation data in memory
+     *
+     * @param form
+     */
+    private void updateFlexCapacitySimulationData(WorkloadForm form) {
+        List<WlSimCapacity> simCapacities = new ArrayList<>();
+        List<WlSimFlexibility> simFlexibilities = new ArrayList<>();
+
+        for (WorkloadBalancing item : form.getWorkloadLineItems()) {
+            WlSimCapacity simCapacity = new WlSimCapacity(item.getWlCapacity());
+            simCapacity.setCapacityId(item.getWlCapacity().getCapacityId());
+            //simCapacity.setSimId(form.getSimulation().getSimId());
+            simCapacities.add(simCapacity);
+
+            for (WlFlexibility flexibility : item.getWlflexibilityList()) {
+                WlSimFlexibility simFlexibility = new WlSimFlexibility(flexibility);
+                simFlexibility.setFlexibilityId(flexibility.getFlexibilityId());
+                //simFlexibility.setSimId(form.getSimulation().getSimId());
+
+                simFlexibilities.add(simFlexibility);
+            }
+        }
+
+        form.getSimulation().setCapacities(simCapacities);
+        form.getSimulation().setFlexibilities(simFlexibilities);
+    }
+
+    /**
+     * Delete unit assignment data in simulation data in memory
+     *
+     * @param workloadForm
+     */
+    private void deleteUnitAssignmentSimulationData(WorkloadForm workloadForm, UnitAdministrator unitAdministrator) {
+        WlSimUnitAssignment itemToRemove = null;
+        for (WlSimUnitAssignment unitAssignment : workloadForm.getSimulation().getUnitAssignments()) {
+            if (unitAssignment.getPersonId().equals(unitAdministrator.getPersonId())
+                    && unitAssignment.getUnitNum().equals(unitAdministrator.getUnitNumber())) {
+                itemToRemove = unitAssignment;
+                break;
+            }
+        }
+
+        if (itemToRemove != null) {
+            workloadForm.getSimulation().getUnitAssignments().remove(itemToRemove);
+        }
+    }
+
+    /**
+     * Add unit assignment data in simulation data in memory
+     *
+     * @param workloadForm
+     */
+    private void addUnitAssignmentSimulationData(WorkloadForm workloadForm, UnitAdministrator unitAdministrator) {
+        WlSimUnitAssignment simUnitAssignment = new WlSimUnitAssignment(unitAdministrator);
+        //simUnitAssignment.setSimId(workloadForm.getSimulation().getSimId());
+        workloadForm.getSimulation().getUnitAssignments().add(simUnitAssignment);
+    }
+
+    /**
+     * Update unit assignment data in simulation data in memory
+     *
+     * @param workloadForm
+     * @param oldPersonId
+     * @param newUnitAdministrator
+     */
+    private void reassignUnitAssignmentSimulationData(WorkloadForm workloadForm, String oldPersonId, UnitAdministrator newUnitAdministrator) {
+        UnitAdministrator oldUnitAdministrator = new UnitAdministrator();
+        oldUnitAdministrator.setPersonId(oldPersonId);
+        oldUnitAdministrator.setUnitNumber(newUnitAdministrator.getUnitNumber());
+        deleteUnitAssignmentSimulationData(workloadForm, oldUnitAdministrator);
+
+        WlSimUnitAssignment simUnitAssignment = new WlSimUnitAssignment(newUnitAdministrator);
+        //simUnitAssignment.setSimId(workloadForm.getSimulation().getSimId());
+
+        workloadForm.getSimulation().getUnitAssignments().add(simUnitAssignment);
+    }
+
+    @MethodAccessible
+    @Transactional
+    @RequestMapping(params = "methodToCall=performFieldSuggest")
+    public
+    @ResponseBody
+    AttributeQueryResult performFieldSuggest(@ModelAttribute("KualiForm") WorkloadForm form, BindingResult result, HttpServletRequest request,
+                                             HttpServletResponse response) {
+        return getQueryControllerService().performFieldSuggest(form);
+    }
+
+    @MethodAccessible
+    @Transactional
+    @RequestMapping(params = "methodToCall=performFieldQuery")
+    public
+    @ResponseBody
+    AttributeQueryResult performFieldQuery(@ModelAttribute("KualiForm") WorkloadForm form, BindingResult result, HttpServletRequest request,
+                                           HttpServletResponse response) {
+        return getQueryControllerService().performFieldQuery(form);
+    }
+
+    @Transactional
+    @RequestMapping(params = "methodToCall=retrieveEditLineDialog")
+    public ModelAndView retrieveEditLineDialog(UifFormBase form) {
+        return getCollectionControllerService().retrieveEditLineDialog(form);
+    }
+
+    public KcPersonService getKcPersonService() {
+        return kcPersonService;
+    }
+
+    public void setKcPersonService(KcPersonService kcPersonService) {
+        this.kcPersonService = kcPersonService;
+    }
+
+
+    public SponsorHierarchyDao getSponsorHierarchyDao() {
+        return sponsorHierarchyDao;
+    }
+
+    public void setSponsorHierarchyDao(SponsorHierarchyDao sponsorHierarchyDao) {
+        this.sponsorHierarchyDao = sponsorHierarchyDao;
+    }
+}
